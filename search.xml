<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Linux_10.2-Shell基础-脚本执行方式</title>
    <url>/2020/06/02/10-2shelljichujiaobenzhixingfangshi/</url>
    <content><![CDATA[<p><strong>摘要</strong>: Shell基础 10.2脚本执行方式：1). echo输出命令，<code>echo '输出内容'</code>，<code>echo -e '输出内容'</code>。2). 脚本，创建或编辑脚本<code>vi hello.sh</code>，执行脚本<code>sh hello.sh</code>，不同系统脚本转换<code>dos2unix 脚本文件名</code>。</p>
<a id="more"></a>
<h1>echo输出命令</h1>
<ul>
<li>语法：<code>echo '输出内容'</code></li>
<li>语法：<code>echo -e '输出内容'</code> 支持反斜线控制的字符转换
<ul>
<li>字符转换<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10.2-Shell%E5%9F%BA%E7%A1%80-%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C%E6%96%B9%E5%BC%8F/1.%E6%8E%A7%E5%88%B6%E5%AD%97%E7%AC%A6%E5%8F%8A%E4%BD%9C%E7%94%A8.jpg" alt="控制字符及其作用">
<ul>
<li><a href="https://wenku.baidu.com/view/5f83988be53a580216fcfeac.html" target="_blank" rel="noopener">ASCII码表</a></li>
<li>输出颜色：<code>echo -e '\e[1;颜色 输出内容\e[0m'</code> 30m=黑色；31m=红色；32m=绿色；33m=黄色；34m=蓝色；35m=洋红；36m=青色；37m=白色。</li>
</ul>
</li>
<li>示例<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10.2-Shell%E5%9F%BA%E7%A1%80-%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C%E6%96%B9%E5%BC%8F/2.%E5%AD%97%E7%AC%A6%E8%BD%AC%E6%8D%A2%E7%A4%BA%E4%BE%8B.jpg" alt="字符转换示例"></li>
</ul>
</li>
</ul>
<h1>脚本</h1>
<ul>
<li><strong>创建或编辑脚本</strong>：<code>vi hello.sh</code> ，建议脚本都写成<code>.sh</code>。脚本的第一行一般都写上<code>#!/bin/bash</code>，这是不是注释，而是标称这里写的是shell脚本，不写的话运行中很可能会出问题。</li>
<li><strong>执行脚本</strong>
<ul>
<li>通过bash调用执行脚本，<code>sh hello.sh</code>，只能在当前目录下执行。</li>
<li>赋予执行权限<code>chmod 755 hello.sh</code>，直接运行其所在的路径<code>/home/qiime2/sh/hello.sh</code>，可在非当前目录下执行。</li>
</ul>
</li>
<li><strong>不同系统脚本转换</strong>：windows和linux脚本后面的换行符不一致，可使用<code>cat -A 脚本文件名</code>查看。
<ul>
<li><code>dos2unix 脚本文件名</code> 将windows脚本转换成linux脚本格式。</li>
</ul>
</li>
<li>示例
<ul>
<li>hello.sh脚本<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10.2-Shell%E5%9F%BA%E7%A1%80-%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C%E6%96%B9%E5%BC%8F/3.hello.sh%E8%84%9A%E6%9C%AC.jpg" alt="hello.sh脚本"></li>
<li>执行hello.sh脚本<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10.2-Shell%E5%9F%BA%E7%A1%80-%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C%E6%96%B9%E5%BC%8F/4.hello.sh%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C.jpg" alt="执行hello.sh脚本"></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Shell</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux_10.5-Shell基础-Bash运算符</title>
    <url>/2020/06/02/10-5shelljichubashyunsuanfu/</url>
    <content><![CDATA[<p><strong>摘要</strong>: 1.数值运算：1）declare声明变量类型；2）expr或let数值运算工具；3）<code>$((运算式))</code>或<code>$[运算式]</code>，推荐使用。2.运算符及其优先级。3.变量测试与内容替换。</p>
<a id="more"></a>
<h1>数值运算</h1>
<ul>
<li><strong>方法1：declare声明变量类型</strong>
<ul>
<li>用法：<code>declare +/-选项 变量名</code>
<ul>
<li><code>-</code>给变量设定类型属性</li>
<li><code>+</code>取消变量的类型属性</li>
<li><code>i</code>将变量声明为整数型integer</li>
<li><code>x</code>将变量声明为环境变量</li>
<li><code>p</code>显示指定变量的被声明的类型</li>
</ul>
</li>
<li>示例：<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-5-Shell%E5%9F%BA%E7%A1%80-Bash%E8%BF%90%E7%AE%97%E7%AC%A6/1.declare%E5%A3%B0%E6%98%8E%E7%A4%BA%E4%BE%8B.jpg" alt="declare声明示例"></li>
</ul>
</li>
<li><strong>方法2：expr或let数值运算工具</strong><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">a</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">b</span>=<span class="number">5</span></span><br><span class="line"><span class="attr">c</span>=$(expr <span class="variable">$a</span> + <span class="variable">$b</span>)</span><br><span class="line"><span class="comment"># c的值是a和b的和。注意`+`号左右两侧必须有空格。</span></span><br></pre></td></tr></table></figure>
</li>
<li><strong>方法3：<code>$((运算式))</code>或<code>$[运算式]</code></strong> <strong>✥✥✥</strong><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-5-Shell%E5%9F%BA%E7%A1%80-Bash%E8%BF%90%E7%AE%97%E7%AC%A6/2.%E6%9C%80%E5%B8%B8%E7%94%A8%E8%BF%90%E7%AE%97%E7%A4%BA%E4%BE%8B.jpg" alt="最常用运算示例"></li>
</ul>
<h1>运算符</h1>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-5-Shell%E5%9F%BA%E7%A1%80-Bash%E8%BF%90%E7%AE%97%E7%AC%A6/3.%E8%BF%90%E7%AE%97%E7%AC%A6.jpg" alt="运算符"></p>
<ul>
<li>示例<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-5-Shell%E5%9F%BA%E7%A1%80-Bash%E8%BF%90%E7%AE%97%E7%AC%A6/4.%E8%BF%90%E7%AE%97%E7%AC%A6%E8%AE%A1%E7%AE%97%E7%A4%BA%E4%BE%8B.jpg" alt="运算符计算示例"></li>
</ul>
<h1>变量测试与内容替换</h1>
<ul>
<li>变量置换表<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-5-Shell%E5%9F%BA%E7%A1%80-Bash%E8%BF%90%E7%AE%97%E7%AC%A6/5.%E5%8F%98%E9%87%8F%E7%BD%AE%E6%8D%A2%E8%A1%A8.jpg" alt="变量置换表"></li>
<li>作用：通过x的值判断y是否存在。不需要记住，能够看懂就可以。</li>
<li>示例<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-5-Shell%E5%9F%BA%E7%A1%80-Bash%E8%BF%90%E7%AE%97%E7%AC%A6/6.%E5%8F%98%E9%87%8F%E7%BD%AE%E6%8D%A2%E7%A4%BA%E4%BE%8B.jpg" alt="变量置换示例"></li>
</ul>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Shell</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux_10.3-Shell基础-Bash基本功能</title>
    <url>/2020/06/02/10-3shelljichubashjibengongneng/</url>
    <content><![CDATA[<p><strong>摘要</strong>: Shell基础 10.3Bash基本功能：历史命令与补全；别名与快捷键；输入输出重定向；多命令顺序执行与管道符；通配符和其他特殊符号。</p>
<a id="more"></a>
<h1>历史命令与补全</h1>
<ul>
<li><strong>查看历史命令保存文件</strong>，<code>vi .bash_history</code>。</li>
<li><strong>用法</strong>：<code>history 选项 历史命令保存文件名</code>
<ul>
<li><code>-c</code>，清空历史命令。</li>
<li><code>-w</code>，把缓存中的历史命令写入历史命令保存文件。</li>
</ul>
</li>
<li><strong>历史命令保存数目</strong>：默认会保存1000条，可以再环境变量配置文件/etc/profile中找到HISTSIZE=？进行修改。PS：我的在这个文件中未找到，但是在<code>vi /home/qiime2/.bashrc</code>中找到了。</li>
<li><strong>历史命令的调用</strong>：
<ul>
<li>使用上、下箭头调用以前的历史命令</li>
<li>使用<code>!n</code>重复执行第n条历史命令</li>
<li>使用<code>!!</code>重复执行上一条命令</li>
<li>使用<code>!字符串</code>重复执行最后一条以该子串开头的命令</li>
</ul>
</li>
<li><strong>命令补全</strong>：<code>tab键</code>，按一下、两下，看一下区别。</li>
</ul>
<h1>别名与快捷键</h1>
<ul>
<li><strong>查询命令别名</strong>：<code>alias</code></li>
<li><strong>设定命令别名</strong>：<code>alias 别名='原命令'</code></li>
<li><strong>让别名永久生效</strong>：<code>vi /home/qiime2/.bashrc</code>，写入当前用户的环境变量文件中。</li>
<li><strong>删除别名</strong>：<code>unalias 别名</code></li>
<li><strong>Bash常用快捷键</strong>：蓝色的一定要记住。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/1.bash%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE.jpg" alt="bash常用快捷键"></li>
</ul>
<h1>输入输出重定向</h1>
<ul>
<li><strong>标准输入输出</strong><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/2.%E6%A0%87%E5%87%86%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA.jpg" alt="标准输入输出"></li>
<li><strong>输出重定向</strong><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/3.%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91.jpg" alt="输出重定向"> <img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/3.%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%912.jpg" alt="输出重定向2"></li>
<li><strong>输入重定向</strong><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/4.%E8%BE%93%E5%85%A5%E9%87%8D%E5%AE%9A%E5%90%91.jpg" alt="输入重定向"></li>
<li><strong>示例</strong><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/5.%E7%A4%BA%E4%BE%8B.jpg" alt="示例"></li>
</ul>
<h1>多命令顺序执行与管道符</h1>
<ul>
<li><strong>多命令顺序执行</strong>
<ul>
<li><strong>多命令执行符</strong>：<code>;</code>、<code>&amp;&amp;</code>、<code>||</code><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/6.%E5%A4%9A%E5%91%BD%E4%BB%A4%E9%A1%BA%E5%BA%8F%E6%89%A7%E8%A1%8C.jpg" alt="多命令顺序执行"></li>
<li><strong>dd命令</strong>：不同于cp只能复制文件，dd可以复制特殊文件，也可以复制分区，甚至硬盘。<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/7.dd%E5%91%BD%E4%BB%A4.jpg" alt="dd命令"></li>
<li>示例<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/8.%E5%A4%9A%E5%91%BD%E4%BB%A4%E9%A1%BA%E5%BA%8F%E6%89%A7%E8%A1%8C%E7%A4%BA%E4%BE%8B.jpg" alt="示例"></li>
</ul>
</li>
<li><strong>管道符</strong>
<ul>
<li>格式：<code>命令1 | 命令2</code> 命令1的<strong>正确输出</strong>作为命令2的操作对象</li>
<li>示例：
<ul>
<li><code>ls -l /etc | more</code> more本来是输出文件的，加了管道符之后它输出的就是管道符前面的内容。</li>
<li><code>ls -l | grep 'zhangsan'</code>
<ul>
<li>grep的用法<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/9.grep%E7%94%A8%E6%B3%95.jpg" alt="grep用法"></li>
</ul>
</li>
</ul>
</li>
<li>图示<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/10.%E7%AE%A1%E9%81%93%E7%AC%A6%E7%A4%BA%E4%BE%8B.jpg" alt="管道符示例"></li>
</ul>
</li>
</ul>
<h1>通配符和其他特殊符号</h1>
<ul>
<li><strong>通配符</strong><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/11.%E9%80%9A%E9%85%8D%E7%AC%A6.jpg" alt="通配符"></li>
<li><strong>通配符示例</strong><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/12.%E9%80%9A%E9%85%8D%E7%AC%A6%E7%A4%BA%E4%BE%8B.jpg" alt="通配符示例"></li>
<li><strong>其他特殊符号</strong><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/13.%E5%85%B6%E4%BB%96%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7.jpg" alt="其他特殊符号"></li>
<li><strong>其他特殊符号示例</strong><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-3-Shell%E5%9F%BA%E7%A1%80-Bash%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD/14.%E5%85%B6%E4%BB%96%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E7%A4%BA%E4%BE%8B.jpg" alt="其他特殊符号示例"></li>
</ul>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Shell</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux_10.4-Shell基础-Bash变量</title>
    <url>/2020/06/02/10-4shelljichubashbianliang/</url>
    <content><![CDATA[<p><strong>摘要</strong>: Bash变量设置原则和变量分类（用户自定义变量/本地变量、环境变量、位置参数变量和预定义变量）。</p>
<a id="more"></a>
<h1>Bash变量</h1>
<ul>
<li><strong>变量设置规则</strong>
<ul>
<li>不能以数字开头</li>
<li>在bash中，变量的默认类型都是字符串型，如果要进行数值运算，则必须指定变量类型为数值型。</li>
<li>等号连接，等号左右两侧不能有空格。</li>
<li>变量名有空格的话，需要用引号括起来。</li>
<li>在变量的值中，可以使用<code>\</code>转义符。</li>
<li>如果需要增加变量的值，那么可以进行变量值的叠加。不过变量需要用双引号包含<code>&quot;$变量名&quot;</code>或用<code>${变量名}</code>包含。</li>
<li>如果是把命令的结果作为变量值赋予变量，则需要使用<code>反引号或$()</code>包含命令。</li>
<li>环境变量名建议大写，便于区分。</li>
</ul>
</li>
<li><strong>变量分类</strong>
<ul>
<li>用户自定义变量</li>
<li>环境变量</li>
<li>位置参数变量</li>
<li>预定义变量</li>
</ul>
</li>
</ul>
<h2 id="用户自定义变量-本地变量">用户自定义变量/本地变量</h2>
<ul>
<li>变量定义：<code>name=&quot;li si&quot;</code></li>
<li>变量叠加：<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">aa</span>=123</span><br><span class="line"><span class="attribute">aa</span>=<span class="string">"<span class="variable">$aa</span>"</span>456</span><br><span class="line"><span class="attribute">aa</span>=<span class="variable">$&#123;aa&#125;</span>789</span><br></pre></td></tr></table></figure>
</li>
<li>变量调用：<code>echo $name</code></li>
<li>变量查看：<code>set</code></li>
<li>变量删除：<code>unset 变量名</code></li>
</ul>
<h2 id="环境变量">环境变量</h2>
<ul>
<li><strong>定义</strong>：用户自定义变量/本地变量只是在当前的shell中生效，而环境变量会在当前shell和这个shell的子shell当中生效。如果把环境变量写入相应的配置文件，那么这个环境变量就会在所有的shell中生效。</li>
<li><strong>设置环境变量</strong>：<code>export 变量名=变量值</code></li>
<li><strong>查询环境变量</strong>：<code>env</code> 这里是只查环境变量，<code>set</code>是列出所有的变量。</li>
<li><strong>删除变量</strong>：<code>unset 变量名</code></li>
<li><strong>系统常见环境变量</strong>
<ul>
<li><strong><code>PATH</code></strong>
<ul>
<li><u>系统查找命令的路径：<code>echo $PATH</code></u></li>
<li><u>PATH变量叠加：<code>PATH=&quot;$PATH&quot;:/root/sh</code></u></li>
</ul>
</li>
<li><code>PS1</code> 定义系统提示符的变量 <img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-4-Shell%E5%9F%BA%E7%A1%80-Bash%E5%8F%98%E9%87%8F/1.%E7%B3%BB%E7%BB%9F%E6%8F%90%E7%A4%BA%E7%AC%A6.jpg" alt="定义系统提示符的变量"></li>
</ul>
</li>
</ul>
<p>其他</p>
<blockquote>
<p>查看已经安装的shell：<code>cat /etc/shells</code><br>
安装csh：<code>apt-get install csh</code><br>
查看进程树：<code>pstree</code></p>
</blockquote>
<h2 id="位置参数变量">位置参数变量</h2>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-4-Shell%E5%9F%BA%E7%A1%80-Bash%E5%8F%98%E9%87%8F/2.%E4%BD%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%98%E9%87%8F.jpg" alt="位置参数变量"><br>
示例<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-4-Shell%E5%9F%BA%E7%A1%80-Bash%E5%8F%98%E9%87%8F/3.%E4%BD%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%98%E9%87%8F%E7%A4%BA%E4%BE%8B.jpg" alt="位置参数变量示例"></p>
<h2 id="预定义变量">预定义变量</h2>
<ul>
<li>预定义变量<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-4-Shell%E5%9F%BA%E7%A1%80-Bash%E5%8F%98%E9%87%8F/4.%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F.jpg" alt="预定义变量">
<ul>
<li><code>$$</code>和<code>$!</code><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-4-Shell%E5%9F%BA%E7%A1%80-Bash%E5%8F%98%E9%87%8F/5.%E5%BD%93%E5%89%8D%E5%92%8C%E5%90%8E%E5%8F%B0%E8%BF%9B%E7%A8%8B%E5%8F%B7.jpg" alt="当前和后台进程号"><code>&amp;</code>表示放入后台运行</li>
</ul>
</li>
<li>接收键盘输入
<ul>
<li>用法：<code>read 选项 变量名</code>
<ul>
<li><code>-p</code>提示信息：在等待read输入时，输出提示信息</li>
<li><code>-t</code>秒数：read命令会一直等待用户输入，使用此选项可以指定等待时间</li>
<li><code>-n</code>字符数：read命令只接收指定的字符数，就会执行</li>
<li><code>-s</code>隐藏输入的数据，适用于机密信息的输入</li>
</ul>
</li>
<li>示例：使用<code>sh 脚本名</code>很可能是被拒绝的，可以使用绝对路径来运行脚本。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/10-4-Shell%E5%9F%BA%E7%A1%80-Bash%E5%8F%98%E9%87%8F/6.%E6%8E%A5%E6%94%B6%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5%E7%A4%BA%E4%BE%8B.jpg" alt="当前和后台进程号"></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Shell</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux_11.2-Shell编程-字符截取命令</title>
    <url>/2020/12/14/11-2-Shell-zifujiequmingling/</url>
    <content><![CDATA[<p><strong>摘要</strong>：介绍了字符截取命令<code>cut</code>、<code>printf</code>、<code>awk</code>和<code>sed</code>的使用。</p>
<a id="more"></a>
<h1>cut字段提取命令</h1>
<p>能够识别的制表符和分隔符，不能识别空格。<br>
<code>cut 选项 文件名</code></p>
<ul>
<li><code>-f</code>：提取第几列</li>
<li><code>-d</code>: 按照指定分隔符分隔列<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cut</span> -f <span class="number">1</span> test.txt</span><br><span class="line"><span class="built_in">cut</span> -f <span class="number">1</span>,<span class="number">3</span> test.txt</span><br><span class="line">echo $PATH | <span class="type">cut</span> -d <span class="string">":"</span> -f <span class="number">2</span></span><br><span class="line"><span class="built_in">cut</span> -f <span class="number">2</span> test.txt | <span class="type">grep</span> <span class="string">"limin"</span>|<span class="type">grep</span> -v <span class="string">"liming"</span> #提取包含limin但不会包含liming第二列</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1>printf命令</h1>
<p>后面不能直接加文件名，但可以<code>printf &quot;%s&quot; $(cat test.txt)</code>.<br>
<code>printf 输出类型输出格式 输出内容</code></p>
<ul>
<li><code>%ns</code>：输出字符串，n是数字代表输出几个字符。</li>
<li><code>%ni</code>：输出整数，n是数字代表输出几个数字。</li>
<li><code>%m.nf</code>: 输出浮点数，m代表总的位数，n代表小数位数。<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">printf <span class="string">'%s %s %s\n'</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1>awk命令</h1>
<p>同cut，截取符合条件的列。差别在于awk可识别空格。<br>
<code>awk '条件1{动作1}条件2{动作2}...'</code> 文件名</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">df -h | awk '&#123;printf $<span class="number">5</span> <span class="string">"<span class="subst">\n</span>"</span>&#125;'</span><br><span class="line">df -h|awk ' &#123;printf $<span class="number">1</span> <span class="string">"<span class="subst">\t</span>"</span> $<span class="number">5</span> <span class="string">"<span class="subst">\n</span>"</span>&#125;'|grep <span class="string">"100%"</span></span><br><span class="line">df -h|awk ' &#123;printf $<span class="number">5</span>&#125;'|cut -d <span class="string">"%"</span> -f <span class="number">10</span></span><br><span class="line">awk ' &#123;printf $<span class="number">1</span> <span class="string">"<span class="subst">\t</span>"</span> $<span class="number">3</span> <span class="string">"<span class="subst">\n</span>"</span>&#125;' test.txt</span><br></pre></td></tr></table></figure>
<h1>sed命令</h1>
<p>sed主要是用来将数据进行选取、替换、删除和新增的命令。不仅可修改文件，可以从管道符接收数据进行修改。<br>
<code>sed 选项 ‘动作’ 文件名</code></p>
<ul>
<li><code>-n</code>：一般sed命令会把所有数据都输出到屏幕，加入此选择，则只把经过sed命令处理的行输出到屏幕。</li>
<li><code>-e</code>：允许对输入数据应用多条sed命令编辑。</li>
<li><code>-i</code>: 用sed的修改结果直接修改读取数据的文件，而不是由屏幕输出。<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">sed -n '4p' test.txt <span class="meta">#只输出第四行</span></span><br><span class="line">df -h <span class="string">| sed -n '2p'</span></span><br><span class="line">sed '1,2d' test.txt <span class="meta">#删除1-2行的数据，不改变源文件</span></span><br><span class="line">sed '2a hello' test.txt <span class="meta">#在第二行后面添加hello，不改变源文件</span></span><br><span class="line">sed '2i hello' test.txt <span class="meta">#在第二行前面插入hello，不改变源文件</span></span><br><span class="line">sed '2c <span class="number">34444444444444</span>444' test.txt <span class="meta">#替换第二行整行</span></span><br><span class="line">sed '3s/N/F/g' test.txt <span class="meta">#将第三行中的N替换成F</span></span><br><span class="line">sed -i '3s/N/F/g' test.txt <span class="meta">#将第三行中的N替换成F，加入-i后会修改源文件。</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Shell</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux_11.1-Shell编程-正则表达式</title>
    <url>/2020/12/14/11-1shell-zhengzebiaodashi/</url>
    <content><![CDATA[<p><strong>摘要</strong>：介绍了<code>*</code>、<code>.</code>、<code>^</code>、<code>$</code>、<code>[]</code>、<code>\</code>、<code>\{n\}</code>、<code>\{n,\}</code>、<code>\{n,m\}</code>在正则表达式中的含义和使用。</p>
<a id="more"></a>
<h1>正则表达式与通配符</h1>
<ul>
<li>正则表达式是用来在文件中匹配符合条件的字符串的，而通配符是用来在系统中搜索符合条件的文件名。</li>
<li>正则是包含匹配（有就会列出），而通配符是完全匹配（必须是一模一样的）。</li>
</ul>
<h1>基础正则表达式</h1>
<ul>
<li>
<p><code>*</code>: 前一个字符匹配0次或任意多次</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">grep <span class="string">"a*"</span> <span class="keyword">test</span>.txt <span class="comment">#匹配所有内容，包括空白行，这样写没有任何意义</span></span><br><span class="line">grep <span class="string">"aa*"</span> <span class="keyword">test</span>.txt <span class="comment">#匹配至少包含有一个a的行</span></span><br><span class="line">grep <span class="string">"aaa*"</span> <span class="keyword">test</span>.txt <span class="comment">#匹配至少有两个连续a的字符串</span></span><br><span class="line">grep <span class="string">"aaaa*"</span> <span class="keyword">test</span>.txt <span class="comment">#匹配至少有三个跨不需要a的字符串</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><code>.</code>: 匹配除了换行符外任意一个字符</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">grep <span class="string">"s..d"</span> <span class="keyword">test</span>.txt <span class="comment">#匹配在s和d这两个字母之间一定有两个字符的单词</span></span><br><span class="line">grep <span class="string">"s.*d"</span> <span class="keyword">test</span>.txt <span class="comment">#匹配在s和d之间有任意字符</span></span><br><span class="line">grep <span class="string">".*"</span> <span class="keyword">test</span>.txt <span class="comment">#匹配所有内容</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><code>^</code>: 匹配行首</p>
</li>
<li>
<p><code>$</code>：匹配行尾</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">grep <span class="string">"^M"</span> <span class="keyword">test</span>.txt <span class="comment">#匹配以M为首的行</span></span><br><span class="line">grep <span class="string">"e$"</span> <span class="keyword">test</span>.txt <span class="comment">#匹配以e结尾的行</span></span><br><span class="line">grep <span class="string">"^$"</span> <span class="keyword">test</span>.txt -n <span class="comment">#匹配空白行</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><code>[]</code>: 匹配中括号中指定的任意一个字符，只匹配一个字符。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">grep <span class="string">"s[ao]id"</span> <span class="keyword">test</span>.txt</span><br><span class="line">grep <span class="string">"[0-9]"</span> <span class="keyword">test</span>.txt</span><br><span class="line">grep <span class="string">"^[a-z]"</span> <span class="keyword">test</span>.txt</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><code>\</code>: 用于取消将特殊符号的含义取消</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">grep <span class="string">"\.$"</span> <span class="keyword">test</span>.txt <span class="comment">#匹配以.结尾的行</span></span><br><span class="line">grep <span class="string">".$"</span> <span class="keyword">test</span>.txt <span class="comment">#匹配有结尾的任意一行，除了空白行</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><code>\{n\}</code>: 代表其前面的字符恰好出现n次</p>
</li>
<li>
<p><code>\{n,\}</code>: 代表其前面的字符至少出现n次</p>
</li>
<li>
<p><code>\{n,m\}</code>: 代表其前面的字符至少出现n次，至多出现m次。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">grep <span class="string">"a\&#123;3\&#125;"</span> <span class="keyword">test</span>.txt</span><br><span class="line">grep <span class="string">"[0-9]\&#123;3\&#125;"</span> <span class="keyword">test</span>.txt</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>学习视频</p>
<blockquote>
<p>史上最牛的Linux视频课程👉 P11.1</p>
</blockquote>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Shell</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux_11.5-Shell编程-流程控制</title>
    <url>/2020/12/15/11-5-Shell-liuchengkongzhi/</url>
    <content><![CDATA[<p><strong>摘要</strong>：介绍了<code>if</code>、<code>case</code>、<code>for</code>以及<code>while</code>和<code>until</code>循环。</p>
<a id="more"></a>
<h1>if语句</h1>
<h2 id="单分支if条件语句">单分支if条件语句</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ 条件判断式 ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    程序</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">rate=$(df -h | grep <span class="string">"/dev/sda1"</span> | awk <span class="string">'&#123;printf $5&#125;'</span>|cut -d <span class="string">"%"</span> -f 1)</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$rate</span> -ge 80 ]</span><br><span class="line">	<span class="keyword">then</span></span><br><span class="line">  		<span class="built_in">echo</span> <span class="string">"Warning! /dev/sda1 is full!!!"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h2 id="双分支if条件语句">双分支if条件语句</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ 条件判断式 ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    条件成立时，执行的程序</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    条件不成立时，执行的另一个程序</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h2 id="多分支if条件语句">多分支if条件语句</h2>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ 条件判断式<span class="number">1</span> ]</span><br><span class="line">  then</span><br><span class="line">    条件<span class="number">1</span>成立时，执行程序<span class="number">1</span></span><br><span class="line">elif [ 条件判断式<span class="number">2</span> ]</span><br><span class="line">  then</span><br><span class="line">    条件<span class="number">2</span>成立时，执行程序<span class="number">2</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    条件都不成立时，执行此程序</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h1>case语句</h1>
<h2 id="多分支case条件语句">多分支case条件语句</h2>
<p>case语句和if…elif…else语句一样都是多分支条件语句，不过和if多分支条件语句不同的是，case语句只能判断一种条件关系，而if语句可以判断多种条件关系。</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">case $变量名 in</span><br><span class="line">  <span class="string">"值1"</span>)</span><br><span class="line">      如果变量的值等于值<span class="number">1</span>，则执行程序<span class="number">1</span></span><br><span class="line">      ;;</span><br><span class="line">  <span class="string">"值2"</span>)</span><br><span class="line">      如果变量的值等于值<span class="number">2</span>，则执行程序<span class="number">2</span></span><br><span class="line">      ;;</span><br><span class="line">  *)</span><br><span class="line">      如果变量的值都不是以上的值，则执行此程序</span><br><span class="line">      ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"if you want to guangzhou please input 1"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"if you want to shenzhen please input 2"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"if you want to nanjing please input 3"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"Please choose 1/2/3"</span> cho</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$cho</span> <span class="keyword">in</span></span><br><span class="line">	1)</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"you will fly to guangzhou"</span></span><br><span class="line"> 		;;</span><br><span class="line">	2)</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"you will fly to shenzhen"</span></span><br><span class="line">		;;</span><br><span class="line">	3) 	</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"you will fly to nanjing"</span></span><br><span class="line">		;;</span><br><span class="line">	*)</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"you choose to stay at home"</span></span><br><span class="line">		;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>
<h1>for循环</h1>
<h2 id="语法1">语法1</h2>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> 变量<span class="keyword">in</span>值<span class="number">1</span>值<span class="number">2</span>值<span class="number">3</span></span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">    程序</span><br><span class="line">  done</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> 1 2 3 4 5</span><br><span class="line">	<span class="keyword">do</span> 	</span><br><span class="line">		<span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">	<span class="keyword">done</span></span><br><span class="line"><span class="comment">#输出结果为1 2 3 4 5</span></span><br></pre></td></tr></table></figure>
<h2 id="语法2">语法2</h2>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">for <span class="comment">(( 初始值;循环控制条件;变量变化 )</span>)</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">    程序</span><br><span class="line">  <span class="keyword">do</span><span class="symbol">ne</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((i=1;i&lt;=100;i=i+1))</span><br><span class="line">	<span class="keyword">do</span> 	</span><br><span class="line">		m=$(( 3+<span class="variable">$i</span>))</span><br><span class="line">	<span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$m</span>"</span></span><br><span class="line"></span><br><span class="line">chmod u+x test.sh</span><br><span class="line">./test.sh <span class="comment">#或bash test.sh</span></span><br></pre></td></tr></table></figure>
<h1>while循环与until循环</h1>
<p>while循环是不定循环，也称作条件循环。只要条件判断式成立，循环就会一直继续，直到条件判断式不成立，循环才会停止。这就和for的固定循环不太一样了。</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>/<span class="keyword">until</span> [ 条件判断式 ]</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">    程序</span><br><span class="line">  done</span><br></pre></td></tr></table></figure>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">m</span>=1</span><br><span class="line"><span class="attribute">n</span>=5</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$m</span> -le 100 ] #相当于until [ <span class="variable">$m</span> -gt 100 ]</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">		<span class="attribute">m</span>=$(($m+1))</span><br><span class="line">		<span class="attribute">m</span>=$(($m+n))</span><br><span class="line">	done</span><br><span class="line">echo <span class="variable">$m</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Shell</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux_11.3-Shell编程-字符处理命令</title>
    <url>/2020/12/15/11-3-Shell-zifuchulimingling/</url>
    <content><![CDATA[<p><strong>摘要</strong>：介绍了排序命令<code>sort</code>和统计命令<code>wc</code>的使用。</p>
<a id="more"></a>
<h1>排序命令sort</h1>
<p><code>sort 选项 文件名</code></p>
<ul>
<li><code>-f</code>：忽略大小写</li>
<li><code>-n</code>: 以数值型进行排序，默认使用字符串型排序</li>
<li><code>-r</code>：反向排序</li>
<li><code>-t</code>：指定分隔符，默认是分隔符是制表符</li>
<li><code>-k n[,m]</code>：按照指定的字段范围排序。从第n字段开始，m字段结束（默认到行尾）</li>
</ul>
<h1>统计命令wc</h1>
<p><code>wc 选项 文件名</code></p>
<ul>
<li><code>-l</code>：只统计行</li>
<li><code>-w</code>：只统计单词</li>
<li><code>-m</code>：只统计字符</li>
</ul>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Shell</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>16S_LEfSe - identifying biomarker</title>
    <url>/2020/07/14/16S-LEfSe/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This document shows the use of LEfSe to identify biomarker among different treatments.</p>
<a id="more"></a>
<h1>Introduction</h1>
<p>“LDA Effect Size (LEfSe) (Segata et. al 2010) is An algorithm for High-Dimensional biomarker discovery and explanation that <u>identifies genomic features (genes, pathways, or taxa) characterizing the differences between two or more biological conditions (or classes, see figure below)</u>. It emphasizes both statistical significance and biological relevance, allowing researchers to identify differentially abundant features that are also consistent with biologically meaningful categories (subclasses). LEfSe first robustly identifies features that are statistically different among biological classes. It then performs additional tests to assess whether these differences are consistent with respect to expected biological behavior.”<br>
“Specifically, we first use the <u>non-parametric factorial Kruskal-Wallis (KW) sum-rank test to detect features with significant differential abundance with respect to the class of interest; biological significance is subsequently investigated using a set of pairwise tests among subclasses using the (unpaired) Wilcoxon rank-sum test</u>. As a last step, LEfSe uses <u>Linear Discriminant Analysis</u> to estimate the effect size of each differentially abundant feature and, if desired by the investigator, to perform dimension reduction.”&quot;</p>
<h1>Online platform</h1>
<p>Galaxy: <a href="http://huttenhower.sph.harvard.edu/galaxy" target="_blank" rel="noopener">http://huttenhower.sph.harvard.edu/galaxy</a></p>
<h1>Data</h1>
<p>total relative abundance table: <code>feature-table-relative.txt</code><br>
taxonomy file: <code>taxonomy.tsv</code><br>
mapping file:  <code>mapping.txt</code><br>
=&gt; integrate the above files into <a href="https://bitbucket.org/biobakery/biobakery/raw/tip/demos/biobakery_demos/data/lefse/input/hmp_small_aerobiosis.txt" target="_blank" rel="noopener">LEfSe format</a></p>
<h1>LEfSe tutorial</h1>
<p>LEfSe tutorial: <a href="https://bitbucket.org/biobakery/biobakery/wiki/lefse" target="_blank" rel="noopener">https://bitbucket.org/biobakery/biobakery/wiki/lefse</a></p>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Metabarcoding</category>
      </categories>
      <tags>
        <tag>16S</tag>
        <tag>LEfSe</tag>
      </tags>
  </entry>
  <entry>
    <title>16S_PICRUSt2 - predicting functional abundances based on marker gene sequences</title>
    <url>/2020/07/15/16S-PICRUSt2/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> Tool for functional abundances prediction of marker gene sequences.s</p>
<a id="more"></a>
<h1>Introduction</h1>
<p>PICRUSt2 (Phylogenetic Investigation of Communities by Reconstruction of Unobserved States) is a software for predicting functional abundances based only on marker gene sequences.<br>
<u>“Function” usually refers to gene families such as KEGG orthologs and Enzyme Classification numbers, but predictions can be made for any arbitrary trait.</u> Similarly, <u>predictions are typically based on 16S rRNA gene sequencing data</u>, but other marker genes can also be used.<br>
PICRUSt2 includes these and other improvements over the original version:</p>
<ul>
<li>Allow users to predict functions for any <strong>16S</strong> sequences. <u>Representative sequences from OTUs or amplicon sequence variants (e.g. DADA2 and deblur output)</u> can be used as input by taking a sequence placement approach</li>
<li>Database of reference genomes used for prediction has been expanded by &gt;10X.</li>
<li>Addition of hidden-state prediction algorithms from the castor R package.</li>
<li>Allows output of MetaCyc ontology predictions that will be comparable with common shotgun metagenomics outputs.</li>
<li>Inference of pathway abundances now relies on MinPath, which makes these predictions more stringent.</li>
</ul>
<p><strong>Methods:</strong> sequence placement, hidden state prediction, metagenome prediction, infer pathway abundances.<br>
<strong>input files:</strong> ASV sequence file and abundance table.<br>
<strong>output files:</strong> gene family and pathway abundances.</p>
<h1>Installation</h1>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">conda create -n picrust2 -c bioconda -c conda-forge picrust2=<span class="number">2.3</span><span class="number">.0</span>_b</span><br><span class="line">conda activate picrust2</span><br></pre></td></tr></table></figure>
<h1>Data</h1>
<p>total absolute abundance table: <code>feature-table.biom</code><br>
represent sequences: <code>dna-sequences.fasta</code></p>
<h1>Run</h1>
<h2 id="Sequence-placement">Sequence placement</h2>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">place_seqs<span class="selector-class">.py</span> -s results/dna-sequences<span class="selector-class">.fasta</span> -o placed_seqs<span class="selector-class">.tre</span> -<span class="selector-tag">p</span> <span class="number">13</span> --intermediate placement_working</span><br></pre></td></tr></table></figure>
<p><strong>output files</strong></p>
<ul>
<li><code>placed_seqs.tre</code> - Tree of reference and study 16S sequences</li>
</ul>
<h2 id="Hidden-state-prediction">Hidden state prediction</h2>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">hsp<span class="selector-class">.py</span> -<span class="selector-tag">i</span> <span class="number">16</span>S -t placed_seqs<span class="selector-class">.tre</span> -o marker_nsti_predicted<span class="selector-class">.tsv</span><span class="selector-class">.gz</span> -<span class="selector-tag">p</span> <span class="number">13</span> -n</span><br><span class="line">hsp<span class="selector-class">.py</span> -<span class="selector-tag">i</span> EC -t placed_seqs<span class="selector-class">.tre</span> -o EC_predicted<span class="selector-class">.tsv</span><span class="selector-class">.gz</span> -<span class="selector-tag">p</span> <span class="number">13</span></span><br><span class="line">hsp<span class="selector-class">.py</span> -<span class="selector-tag">i</span> KO -t placed_seqs<span class="selector-class">.tre</span> -o KO_predicted<span class="selector-class">.tsv</span><span class="selector-class">.gz</span> -<span class="selector-tag">p</span> <span class="number">13</span></span><br></pre></td></tr></table></figure>
<p><strong>output files</strong></p>
<ul>
<li><code>marker_nsti_predicted.tsv.gz</code> - Predicted 16S copy numbers and NSTI per ASV.</li>
<li><code>EC_predicted.tsv.gz</code> - Predicted EC number copy numbers per ASV.</li>
<li><code>KO_predicted.tsv.gz</code> - As EC_predicted.tsv.gz above, but for KO predictions.</li>
</ul>
<h2 id="Metagenome-prediction">Metagenome prediction</h2>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">metagenome_pipeline<span class="selector-class">.py</span> -<span class="selector-tag">i</span> results/feature_table/feature-<span class="selector-tag">table</span><span class="selector-class">.biom</span> \</span><br><span class="line">                       -m marker_nsti_predicted<span class="selector-class">.tsv</span><span class="selector-class">.gz</span> \</span><br><span class="line">                       -f EC_predicted<span class="selector-class">.tsv</span><span class="selector-class">.gz</span> \</span><br><span class="line">                       -o EC_metagenome_out</span><br><span class="line">metagenome_pipeline<span class="selector-class">.py</span> -<span class="selector-tag">i</span> results/feature_table/feature-<span class="selector-tag">table</span><span class="selector-class">.biom</span> \</span><br><span class="line">                       -m marker_nsti_predicted<span class="selector-class">.tsv</span><span class="selector-class">.gz</span> \</span><br><span class="line">                       -f KO_predicted<span class="selector-class">.tsv</span><span class="selector-class">.gz</span> \</span><br><span class="line">                       -o KO_metagenome_out</span><br></pre></td></tr></table></figure>
<p><strong>output files</strong></p>
<ul>
<li><code>EC_metagenome_out</code> - Folder containing unstratified EC number metagenome predictions (pred_metagenome_unstrat.tsv.gz), sequence table normalized by predicted 16S copy number abundances (seqtab_norm.tsv.gz), and the per-sample NSTI values weighted by the abundance of each ASV (weighted_nsti.tsv.gz).</li>
<li><code>KO_metagenome_out</code> - As EC_metagenome_out above, but for KO metagenomes.</li>
</ul>
<p>#Infer pathway abundances</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">pathway_pipeline<span class="selector-class">.py</span> -<span class="selector-tag">i</span> EC_metagenome_out/pred_metagenome_unstrat<span class="selector-class">.tsv</span><span class="selector-class">.gz</span> -o pathways_out --intermediate minpath_working -<span class="selector-tag">p</span> <span class="number">13</span></span><br></pre></td></tr></table></figure>
<p><strong>output files</strong></p>
<ul>
<li><code>pathways_out</code> - <u>Folder containing predicted pathway abundances and coverages per-sample, based on predicted EC number abundances.</u></li>
</ul>
<h2 id="Add-descriptions">Add descriptions</h2>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">add_descriptions<span class="selector-class">.py</span> -<span class="selector-tag">i</span> EC_metagenome_out/pred_metagenome_unstrat<span class="selector-class">.tsv</span><span class="selector-class">.gz</span> -m ec -o EC_metagenome_out/pred_metagenome_unstrat_descrip<span class="selector-class">.tsv</span>.gz</span><br><span class="line">add_descriptions<span class="selector-class">.py</span> -<span class="selector-tag">i</span> KO_metagenome_out/pred_metagenome_unstrat<span class="selector-class">.tsv</span><span class="selector-class">.gz</span> -m KO -o KO_metagenome_out/pred_metagenome_unstrat_descrip<span class="selector-class">.tsv</span>.gz</span><br><span class="line">add_descriptions<span class="selector-class">.py</span> -<span class="selector-tag">i</span> pathways_out/path_abun_unstrat<span class="selector-class">.tsv</span><span class="selector-class">.gz</span> -m METACYC -o pathways_out/path_abun_unstrat_descrip<span class="selector-class">.tsv</span>.gz</span><br></pre></td></tr></table></figure>
<p>Ref:</p>
<blockquote>
<p>picrust2: <a href="https://github.com/picrust/picrust2/wiki" target="_blank" rel="noopener">https://github.com/picrust/picrust2/wiki</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Metabarcoding</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>16S</tag>
        <tag>PICRUSt2</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux_13.1-Linux系统管理-进程管理</title>
    <url>/2020/12/15/13-1-linuxxitongguanli/</url>
    <content><![CDATA[<p><strong>摘要</strong>：查看和杀死进程以及剔除用户。</p>
<a id="more"></a>
<p>进程管理的作用</p>
<ul>
<li>判断服务器健康状态</li>
<li>查看系统中所有进程</li>
<li>杀死进程</li>
</ul>
<p>命令</p>
<ul>
<li><code>ps -le</code>：查看系统中所有进程 #PID进程编号；TTY进程的使用终端，tty1-tty7本地的6个字符界面终端+1个图形终端，pts/0-255代表虚拟终端；TIME占用的cpu的运算时间。</li>
<li><code>top</code>：查看健康状态。理解前面五行的意思。</li>
<li><code>kill -1/9/15 pid号</code>：杀死进程 #<code>kill -l</code>注意1（重启进程）,9（强制终止进程）,15（正常结束进程的信号）</li>
<li><code>killall [选项][信号] 进程名</code>: 杀死所有进程</li>
<li><code>w</code>:看终端号</li>
<li><code>pkill</code>：按终端号剔除用户</li>
</ul>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>16S_relative abundance barplot</title>
    <url>/2020/07/14/16S-relativeabundancebarplot/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This document shows the use of R packages (reshape2, ggplot2) to plot relative abundance barplot. Files used here are absolute abundance table at phylum level and mapping file.</p>
<a id="more"></a>
<h1>Data</h1>
<p>absolute abundance table at phylum level: <code>feature-table-phylum.txt</code><br>
mapping file: <code>mapping.txt</code></p>
<h1>Import Data</h1>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">otu&lt;-<span class="keyword">read</span>.<span class="keyword">table</span>("feature-table-phylum.txt",head=T,<span class="keyword">row</span>.names=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<h1>Deal with data</h1>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">#calculate relative abundance</span><br><span class="line">otu1&lt;- otu</span><br><span class="line">otu1[<span class="string">'sum'</span>, ] &lt;- colSums(otu1)</span><br><span class="line">otu1&lt;-t(otu1)</span><br><span class="line">otu1&lt;-<span class="keyword">as</span>.data.frame(otu1)</span><br><span class="line">otu2&lt;-otu1/otu1$sum</span><br><span class="line">otu2&lt;-otu2[,-ncol(otu2)]</span><br><span class="line">rowSums(otu2)</span><br><span class="line">otu2&lt;-t(otu2)</span><br><span class="line">#sort</span><br><span class="line">otu2 &lt;- otu2[order(rowSums(otu2), decreasing = T), ]</span><br><span class="line"></span><br><span class="line">#select top10，divide others into “Others”</span><br><span class="line">otu2_top10 &lt;- otu2[<span class="number">1</span>:<span class="number">10</span>,]</span><br><span class="line">otu2_top10&lt;-<span class="keyword">as</span>.data.frame(otu2_top10)</span><br><span class="line">otu2_top10[<span class="string">'Others'</span>,] &lt;- <span class="number">1</span> - colSums(otu2_top10)</span><br><span class="line"></span><br><span class="line">#save data</span><br><span class="line">write.csv(otu2_top10, <span class="string">'otu2_top10.csv'</span>, quote = FALSE)</span><br><span class="line"></span><br><span class="line">#adjust data sort</span><br><span class="line">library(reshape2)</span><br><span class="line">otu2_top10$Taxonomy &lt;- factor(rownames(otu2_top10), levels = rev(rownames(otu2_top10)))</span><br><span class="line">otu2_top10 &lt;- melt(otu2_top10, id = <span class="string">'Taxonomy'</span>)</span><br><span class="line"></span><br><span class="line">#add group</span><br><span class="line">map&lt;-read.table(<span class="string">"mapping.txt"</span>,head=T)</span><br><span class="line">map&lt;-map[,c(<span class="number">1</span>,<span class="number">3</span>)]</span><br><span class="line">names(map)[<span class="number">1</span>] &lt;- <span class="string">'variable'</span></span><br><span class="line">otu2_top10 &lt;- merge(otu2_top10, map, by = <span class="string">'variable'</span>)</span><br></pre></td></tr></table></figure>
<h1>Barplot</h1>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">library(ggplot2)    </span><br><span class="line">p &lt;- ggplot(otu2_top10, aes(variable, <span class="number">100</span><span class="operator"> * </span>value, fill = Taxonomy)) +</span><br><span class="line">  geom<span class="constructor">_col(<span class="params">position</span> = '<span class="params">stack</span>', <span class="params">width</span> = 0.6)</span> +</span><br><span class="line">  labs(x = '', y = 'Relative <span class="constructor">Abundance(%)</span>') +</span><br><span class="line">  theme(axis.text = element<span class="constructor">_text(<span class="params">size</span> = 7)</span>,axis.title = element<span class="constructor">_text(<span class="params">size</span> = 8)</span>) +</span><br><span class="line">  theme(legend.text = element<span class="constructor">_text(<span class="params">size</span> = 8)</span>)</span><br><span class="line">p</span><br><span class="line"></span><br><span class="line">#set color</span><br><span class="line">p1 &lt;- p +</span><br><span class="line">  scale<span class="constructor">_fill_manual(<span class="params">values</span> =  <span class="params">rev</span>(<span class="params">c</span>('<span class="params">blue</span>', '<span class="params">orange</span>', '<span class="params">green</span>', '<span class="params">yellow</span>', '<span class="params">red</span>', '<span class="params">hotpink</span>', '<span class="params">cyan</span>','<span class="params">purple</span>', '<span class="params">burlywood1</span>', '<span class="params">skyblue</span>', '<span class="params">gray</span>')</span>)) +</span><br><span class="line">  theme(panel.grid = element<span class="constructor">_blank()</span>, panel.background = element<span class="constructor">_rect(<span class="params">color</span> = '<span class="params">black</span>', <span class="params">fill</span> = '<span class="params">transparent</span>')</span>) +</span><br><span class="line">  theme(legend.title = element<span class="constructor">_blank()</span>)</span><br><span class="line">p1</span><br><span class="line"></span><br><span class="line">#set group</span><br><span class="line">p2 &lt;- p1 +</span><br><span class="line">  facet<span class="constructor">_wrap(~<span class="params">group2</span>, <span class="params">scales</span> = '<span class="params">free_x</span>', <span class="params">nrow</span> = 1)</span> +</span><br><span class="line">  theme(strip.text = element<span class="constructor">_text(<span class="params">size</span> = 8)</span>)</span><br><span class="line">p2</span><br><span class="line"></span><br><span class="line">ggsave('relativeabundancebarplot.png', p2, width = <span class="number">8</span>, height = <span class="number">6</span>)</span><br></pre></td></tr></table></figure>
<p>Ref:</p>
<blockquote>
<p>在R中绘制物种堆叠柱状图的方法示例: <a href="http://wap.sciencenet.cn/blog-3406804-1166733.html" target="_blank" rel="noopener">http://wap.sciencenet.cn/blog-3406804-1166733.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Metabarcoding</category>
      </categories>
      <tags>
        <tag>16S</tag>
        <tag>Rstats</tag>
        <tag>Rplot</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux_11.4-Shell编程-条件判断</title>
    <url>/2020/12/15/11-4-Shell-tiaojianpanduan/</url>
    <content><![CDATA[<p><strong>摘要</strong>：条件判断（<code>test</code> 或 <code>[ ]</code>)，介绍了按照文件类型、文件权限进行判断，两个文件、两个整数之间进行比较，以及字符串的判断和多重条件判断。</p>
<a id="more"></a>
<h1>按照文件类型进行判断</h1>
<ul>
<li><code>-d</code>: 判断文件是否存在，并且是否为目录文件（是目录为真）</li>
<li><code>-e</code>: 判断文件是否存在（存在为真）</li>
<li><code>-f</code>: 判断文件是否存在，并且是否为普通文件（是普通文件为真）</li>
</ul>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">test </span>-e biosoft/ #或 [ -e biosoft/ ] #注意后者的空格</span><br><span class="line">echo $? #显示0则文件存在，非0则文件不存在</span><br><span class="line">[ -e biosoft/ ] &amp;&amp; echo "yes" || echo "no" #存在即输出yes</span><br></pre></td></tr></table></figure>
<h1>按照文件权限进行判断</h1>
<ul>
<li><code>-r</code>：判断文件是否存在，并且是否该文件拥有读权限（有读权限为真）</li>
<li><code>-w</code>：判断文件是否存在，并且是否该文件拥有写权限（有写权限为真）</li>
<li><code>-x</code>：判断文件是否存在，并且是否该文件拥有执行权限（有执行权限为真）</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ -x test.txt ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"yes"</span> || <span class="built_in">echo</span> <span class="string">"no"</span></span><br></pre></td></tr></table></figure>
<h1>两个文件之间进行比较</h1>
<ul>
<li><code>文件1 -nt 文件2</code>：判断文件1的修改时间是否比文件2的新（如果新则为真）</li>
<li><code>文件1 -ot 文件2</code>：判断文件1的修改时间是否比文件2的旧（如果旧则为真）</li>
<li><code>文件1 -ef 文件2</code>：判断文件1是否和文件2的Inode号一致，可以理解为两个文件是否为同一个文件，这个判断用于判断硬链接是很好的方法。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ biosoft/ -nt test.txt ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"yes"</span> || <span class="built_in">echo</span> <span class="string">"no"</span></span><br><span class="line">[ biosoft/ -ot test.txt ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"yes"</span> || <span class="built_in">echo</span> <span class="string">"no"</span></span><br><span class="line">[ biosoft/ -ef test.txt ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"yes"</span> || <span class="built_in">echo</span> <span class="string">"no"</span></span><br><span class="line">ll -i biosoft/ <span class="comment">#查看inode号</span></span><br></pre></td></tr></table></figure>
<h1>两个整数之间比较</h1>
<ul>
<li><code>整数1 -eq 整数2</code>：判断整数1是否和整数2相等（相等为真）</li>
<li><code>整数1 -ne 整数2</code>：判断整数1是否和整数2不等（不等为真）</li>
<li><code>整数1 -gt 整数2</code>：判断整数1是否大于整数2（大于为真）</li>
<li><code>整数1 -lt 整数2</code>：判断整数1是否小于整数2（小于为真）</li>
<li><code>整数1 -ge 整数2</code>：判断整数1是否大于等于整数2（大于等于为真）</li>
<li><code>整数1 -le 整数2</code>：判断整数1是否小于等于整数2（小于等于为真）</li>
</ul>
<h1>字符串的判断</h1>
<ul>
<li><code>-z</code>: 判断字符串是否为空（为空返回真）</li>
<li><code>-n</code>: 判断字符串是否为非空（非空返回真）</li>
<li><code>字串1 == 字串2</code>: 判断字符串1是否和字符串2相等（相等返回真）</li>
<li><code>字串1 != 字串2</code>: 判断字符串1是否和字符串2不等（不等返回真）</li>
</ul>
<h1>多重条件判断</h1>
<ul>
<li><code>判断1 -a 判断2</code>：逻辑与，判断1和判断2都成立，结果为真</li>
<li><code>判断1 -o 判断2</code>：逻辑或，判断1和判断2有一个成立，结果为真</li>
<li><code>!判断</code>：逻辑非，使原始的判断式取反</li>
</ul>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Shell</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>16S_visulisation of common/unique OTUs using Venn chart and UpSet chart</title>
    <url>/2020/07/14/16S-vennandupset/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This document shows the use of R packages (VennDiagram, UpSetR) to plot venn diagram and upset chart. Files used here are feature table obtained from qiime2 and mapping file.</p>
<a id="more"></a>
<h1>Data</h1>
<p>total absolute abundance table:  <code>feature-table.txt</code><br>
mapping file:  <code>mapping.txt</code></p>
<h1>Import data</h1>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">otu&lt;-<span class="keyword">read</span>.<span class="keyword">table</span>("feature-table.txt",head=T, <span class="keyword">row</span>.names=<span class="number">1</span>)</span><br><span class="line">map&lt;-<span class="keyword">read</span>.<span class="keyword">table</span>("mapping.txt",head=T,<span class="keyword">row</span>.names=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<h1>Deal with data</h1>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># merge data</span></span><br><span class="line">otu_t = t(otu)</span><br><span class="line">otu_t2 = merge(map, otu_t, <span class="attribute">by</span>=<span class="string">"row.names"</span>)</span><br><span class="line"><span class="comment"># delete non-group information</span></span><br><span class="line">otu_t2 = otu_t2[,-c(4:17)]</span><br><span class="line">otu_t2 = otu_t2[,-c(1:2)]</span><br><span class="line"><span class="comment"># calculate mean of per group</span></span><br><span class="line">otu_mean = aggregate(otu_t2[,-1], <span class="attribute">by</span>=otu_t2[1], <span class="attribute">FUN</span>=mean)</span><br><span class="line">rownames(otu_mean)&lt;-otu_mean<span class="variable">$group2</span></span><br><span class="line">otu_mean&lt;-otu_mean[,-1]</span><br><span class="line"><span class="attribute">otu_mean_t</span>=t(otu_mean)</span><br><span class="line"><span class="comment"># set values&gt;0 as 1</span></span><br><span class="line">otu_mean_t[otu_mean_t&gt;0]=1</span><br><span class="line"><span class="comment"># save data</span></span><br><span class="line">write.table(otu_mean_t,<span class="string">"totalabundancevenn.txt"</span>, <span class="attribute">sep</span>=<span class="string">"\t"</span>, <span class="attribute">quote</span>=F)</span><br></pre></td></tr></table></figure>
<h1>Venn diagram</h1>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">library(VennDiagram)</span><br><span class="line">otu_mean_t&lt;-as.data.frame(otu_mean_t) <span class="comment">#data.frame</span></span><br><span class="line">p1 &lt;- venn.diagram(</span><br><span class="line">  <span class="comment">#extract the rowname of otu==1 in different groups</span></span><br><span class="line">  <span class="attr">x=list(D1=row.names(otu_mean_t[otu_mean_t$D1==1,]),</span></span><br><span class="line">         <span class="attr">D2=row.names(otu_mean_t[otu_mean_t$D2==1,]),</span></span><br><span class="line">         <span class="attr">D3=row.names(otu_mean_t[otu_mean_t$D3==1,]),</span></span><br><span class="line">         <span class="attr">D4=row.names(otu_mean_t[otu_mean_t$D4==1,]),</span></span><br><span class="line">         <span class="attr">D5=row.names(otu_mean_t[otu_mean_t$D5==1,])),</span></span><br><span class="line">  <span class="comment">#don't set filename and `imagetype`</span></span><br><span class="line">  <span class="attr">filename</span> = NULL, <span class="attr">lwd</span> = <span class="number">3</span>, <span class="attr">alpha</span> = <span class="number">0.6</span>,</span><br><span class="line">  <span class="comment">#the color of font</span></span><br><span class="line">  label.<span class="attr">col</span> = <span class="string">"white"</span>, <span class="attr">cex</span> = <span class="number">1.5</span>,</span><br><span class="line">  <span class="comment">#the color of different groups</span></span><br><span class="line">  <span class="attr">fill</span> = c(<span class="string">"dodgerblue"</span>, <span class="string">"goldenrod1"</span>, <span class="string">"darkorange1"</span>, <span class="string">"seagreen3"</span>,<span class="string">"red"</span>),</span><br><span class="line">  cat.<span class="attr">col</span> = c(<span class="string">"dodgerblue"</span>, <span class="string">"goldenrod1"</span>, <span class="string">"darkorange1"</span>, <span class="string">"seagreen3"</span>,<span class="string">"red"</span>),</span><br><span class="line">  <span class="comment">#font</span></span><br><span class="line">  <span class="attr">fontfamily</span> = <span class="string">"serif"</span>, <span class="attr">fontface</span> = <span class="string">"bold"</span>,</span><br><span class="line">  cat.<span class="attr">fontfamily</span> = <span class="string">"serif"</span>,cat.<span class="attr">fontface</span> = <span class="string">"bold"</span>,</span><br><span class="line">  <span class="attr">margin</span> = <span class="number">0.05</span>)</span><br><span class="line"><span class="comment">#plot</span></span><br><span class="line">grid.draw(p1)</span><br></pre></td></tr></table></figure>
<h1>UpSet plot</h1>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="meta">#plot UpSet</span></span><br><span class="line">library(UpSetR)</span><br><span class="line">p2 &lt;-upset(<span class="keyword">otu_mean_t</span>, sets = colnames(<span class="keyword">otu_mean_t</span>),order.by = <span class="string">"freq"</span>,<span class="built_in">point</span>.<span class="built_in">size</span>=<span class="number">1.5</span>,<span class="built_in">line</span>.<span class="built_in">size</span>=<span class="number">0.5</span>)</span><br><span class="line">p2</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Metabarcoding</category>
      </categories>
      <tags>
        <tag>16S</tag>
        <tag>Rstats</tag>
        <tag>Rplot</tag>
      </tags>
  </entry>
  <entry>
    <title>16S_alpha diversity analysis</title>
    <url>/2020/07/10/16s-alphadiversity/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This document shows the use of R packages (ape, vegan, picante, ggplot2, ggpubr and patchwork) to analyse and visualise feature table and rooted tree files obtained from qiime2. The analysis include alpha diversity index (richness, Chao1, ACE, Shannon, Simpson, Pielou, goods_coverage, and PD_whole_tree) and significance test (t test, ANOVA, ANCOVA, wilcox test, TukeyHSD test and kruskal-Wallis test) among different groups. The drawing of barplot and boxplot is also introduced.</p>
<a id="more"></a>
<h1>Data</h1>
<p>total absolute abundance table: <code>feature-table.txt</code><br>
mapping file: <code>mapping.txt</code><br>
rooted tree file: <code>root_tree.nwk</code><br>
The number of samples is less than 50, and the samples are independent.</p>
<h1>Import data</h1>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">otu&lt;-<span class="keyword">read</span>.<span class="keyword">table</span>("feature-table.txt",head=T,<span class="keyword">row</span>.names=<span class="number">1</span>)</span><br><span class="line">otu&lt;-t(otu)</span><br><span class="line">library(ape)</span><br><span class="line">tree&lt;-<span class="keyword">read</span>.tree("root_tree.nwk")</span><br></pre></td></tr></table></figure>
<h1>Alpha diversity index</h1>
<figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="title">library</span>(vegan)</span><br><span class="line"><span class="title">library</span>(picante)</span><br><span class="line"><span class="title">alpha</span> &lt;- function(x, tree = <span class="type">NULL</span>, base = exp(<span class="number">1</span>)) &#123;</span><br><span class="line">  est &lt;- estimateR(x)</span><br><span class="line">  <span class="type">Richness</span> &lt;- est[<span class="number">1</span>, ]</span><br><span class="line">  <span class="type">Chao1</span> &lt;- est[<span class="number">2</span>, ]</span><br><span class="line">  <span class="type">ACE</span> &lt;- est[<span class="number">4</span>, ]</span><br><span class="line">  <span class="type">Shannon</span> &lt;- diversity(x, index = 'shannon', base = base)</span><br><span class="line">  <span class="type">Simpson</span> &lt;- diversity(x, index = 'simpson')    #<span class="type">Gini</span>-<span class="type">Simpson</span> 指数</span><br><span class="line">  <span class="type">Pielou</span> &lt;- <span class="type">Shannon</span> / log(<span class="type">Richness</span>, base)</span><br><span class="line">  goods_coverage &lt;- <span class="number">1</span> - rowSums(x == <span class="number">1</span>) / rowSums(x)</span><br><span class="line">  result &lt;- <span class="class"><span class="keyword">data</span>.frame(<span class="type">Richness</span>, <span class="type">Shannon</span>, <span class="type">Simpson</span>, <span class="type">Pielou</span>, <span class="type">Chao1</span>, <span class="type">ACE</span>, <span class="title">goods_coverage</span>)</span></span><br><span class="line">  <span class="keyword">if</span> (!is.null(tree)) &#123;</span><br><span class="line">    <span class="type">PD_whole_tree</span> &lt;- pd(x, tree, include.root = <span class="type">FALSE</span>)[<span class="number">1</span>]</span><br><span class="line">    names(<span class="type">PD_whole_tree</span>) &lt;- '<span class="type">PD_whole_tree'</span></span><br><span class="line">    result &lt;- cbind(result, <span class="type">PD_whole_tree</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">alpha_all</span>&lt;-alpha(otu,tree,base=exp(<span class="number">1</span>))</span><br><span class="line"><span class="title">write</span>.csv(alpha_all, 'alpha_diversity_index.csv', quote = <span class="type">FALSE</span>)</span><br></pre></td></tr></table></figure>
<h1>Merge data</h1>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">alpha_all<span class="variable">$sampleID</span>&lt;-rownames(alpha_all)</span><br><span class="line">env&lt;-read.table(<span class="string">"mapping.txt"</span>,<span class="attribute">head</span>=T)</span><br><span class="line">merge_data &lt;- merge(alpha_all,env,<span class="attribute">by</span>=<span class="string">"sampleID"</span>)</span><br></pre></td></tr></table></figure>
<h1>Significance test</h1>
<h2 id="Two-groups">Two groups</h2>
<h3 id="Test-for-normal-distribution">Test for normal distribution</h3>
<h4 id="way1-qqplot">way1: qqplot</h4>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">library</span><span class="params">(ggplot2)</span></span></span><br><span class="line">Shannon&lt;-merge_data<span class="variable">$Shannon</span></span><br><span class="line">shannon&lt;-as<span class="selector-class">.data</span>.frame(Shannon)</span><br><span class="line"><span class="function"><span class="title">ggplot</span><span class="params">(shannon,aes(sample=Shannon)</span></span>)+geom_qq()+geom_qq_line(distribution=qnorm)</span><br></pre></td></tr></table></figure>
<h4 id="way2-Shapiro-Wilk-test-50-samples">way2: Shapiro-Wilk test (&lt;50 samples)</h4>
<p>If the p-value &gt; 0.05, then the data is normally distributed.</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">shapiro.<span class="keyword">test</span>(merge_data<span class="variable">$Shannon</span>)</span><br></pre></td></tr></table></figure>
<h3 id="Test-for-homogeneity-of-variance">Test for homogeneity of variance</h3>
<p>If the p-value &gt; 0.05, then meet the assumption of homogeneity of variance.</p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="title">var</span>.test(<span class="type">Shannon</span>~group1,<span class="class"><span class="keyword">data</span>=merge_data)</span></span><br></pre></td></tr></table></figure>
<h3 id="Significance-test">Significance test</h3>
<h4 id="parametric-test-t-test">parametric test: t test</h4>
<p>If the p-value &lt; 0.05, then a significant difference exists.</p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="title">t</span>.test(<span class="type">Shannon</span>~group1,<span class="class"><span class="keyword">data</span>=merge_data)</span></span><br></pre></td></tr></table></figure>
<h4 id="nonparametric-test-wilcox-test">nonparametric test: wilcox test</h4>
<p>Wicoxon rank sum test (MANN-WHITNEY U TEST)<br>
If the p-value &lt; 0.05, then a significant difference exists.</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">wilcox.<span class="keyword">test</span>(Shannon~group1,merge_data)</span><br></pre></td></tr></table></figure>
<h2 id="More-than-two-groups">More than two groups</h2>
<h3 id="Test-for-normal-distribution-2">Test for normal distribution</h3>
<p>see the way in Two groups.</p>
<h3 id="Test-for-homogeneity-of-variance-2">Test for homogeneity of variance</h3>
<p>If the p-value &gt; 0.05, then meet the assumption of homogeneity of variance.</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">bartlett.<span class="keyword">test</span>(Shannon~group2,merge_data)</span><br></pre></td></tr></table></figure>
<h3 id="Significance-test-2">Significance test</h3>
<h4 id="parametric-test">parametric test</h4>
<h5 id="ANOVA-TukeyHSD-test">ANOVA &amp; TukeyHSD test</h5>
<p>If ANOVA reports a P value &lt;0.05, you reject the null hypothesis that all the data are sampled with the same mean.</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">fit&lt;-aov(<span class="name">Shannon</span>~group2,merge_data)</span><br><span class="line">summary(<span class="name">fit</span>)</span><br></pre></td></tr></table></figure>
<p>If the p-value of Tukey HSD test &lt; 0.05, a significant difference exists.</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">tuk &lt;- TukeyHSD(<span class="name">fit</span>, conf.level = <span class="number">0.95</span>)</span><br><span class="line">plot(<span class="name">tuk</span>)</span><br><span class="line">tuk</span><br></pre></td></tr></table></figure>
<h5 id="ANCOVA">ANCOVA</h5>
<p><strong>Homogeneity of regression slopes</strong><br>
If p-value &gt;0.05, then meet the assumption of homogeneity of regression slopes.</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">summary(<span class="name">aov</span>(<span class="name">Shannon</span>~group2*dist_coast_m,merge_data))</span><br></pre></td></tr></table></figure>
<p><strong>ANCOVA</strong><br>
If the p-value &lt; 0.05, a significant difference exists.</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">fit&lt;-aov(<span class="name">Shannon</span>~dist_coast_m+group2,merge_data) #write the factor variable in the latter</span><br><span class="line">summary(<span class="name">fit</span>)</span><br></pre></td></tr></table></figure>
<h4 id="nonparametric-test-Kruskal-Wallis-test-Wilcox-test">nonparametric test: Kruskal-Wallis test &amp; Wilcox test</h4>
<p>If the p-value of kruskal-wallis &lt;0.05, you reject the null hypothesis that all the data are sampled with the same mean.<br>
If the p-value of wilcox test &lt; 0.05, a significant difference exists.</p>
<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">kruskal.test(Shannon~group2,merge_data)</span><br><span class="line">wmc(Shannon~group2,data=merge_data,<span class="function"><span class="keyword">method</span> = "<span class="title">holm</span>")</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>wmc</p>
</blockquote>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Nonparametric pairwise multiple comparisons using the Wilcoxon Signed Rank Test</span></span><br><span class="line"><span class="comment"># Probability values are adjusted using the p.adjust function</span></span><br><span class="line">wmc &lt;- function(formula, data, <span class="attribute">exact</span>=<span class="literal">FALSE</span>, <span class="attribute">sort</span>=<span class="literal">TRUE</span>, <span class="attribute">method</span>=<span class="string">"holm"</span>)&#123;</span><br><span class="line"></span><br><span class="line">  # setup</span><br><span class="line">  df &lt;- model.frame(formula, data)</span><br><span class="line">  y &lt;- df[[1]]</span><br><span class="line">  x &lt;- as.factor(df[[2]])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  # reorder levels of x by median y</span><br><span class="line">  <span class="keyword">if</span>(sort)&#123;</span><br><span class="line">    medians &lt;- aggregate(y, <span class="attribute">by</span>=list(x), <span class="attribute">FUN</span>=median)[2]</span><br><span class="line">    index &lt;- order(medians)</span><br><span class="line">    x &lt;- factor(x, levels(x)[index])</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  groups &lt;- levels(x)</span><br><span class="line">  k &lt;- length(groups)</span><br><span class="line"></span><br><span class="line">  # summary statistics</span><br><span class="line">  stats &lt;- function(z)(c(N = length(z), Median = median(z), MAD = mad(z)))</span><br><span class="line">  sumstats &lt;- t(aggregate(y, <span class="attribute">by</span>=list(x), <span class="attribute">FUN</span>=stats)[2])</span><br><span class="line">  rownames(sumstats) &lt;- c(<span class="string">"n"</span>, <span class="string">"median"</span>, <span class="string">"mad"</span>)</span><br><span class="line">  colnames(sumstats) &lt;- groups</span><br><span class="line">  cat(<span class="string">"Descriptive Statistics\n\n"</span>)</span><br><span class="line">  <span class="builtin-name">print</span>(sumstats)</span><br><span class="line"></span><br><span class="line">  # multiple comparisons</span><br><span class="line">  mc &lt;- data.frame(Group.<span class="attribute">1</span>=character(0),</span><br><span class="line">                   Group.<span class="attribute">2</span>=character(0),</span><br><span class="line">                   <span class="attribute">W</span>=numeric(0),</span><br><span class="line">                   p.<span class="attribute">unadj</span>=numeric(0),</span><br><span class="line">                   <span class="attribute">p</span>=numeric(0),</span><br><span class="line">                   <span class="attribute">stars</span>=character(0),</span><br><span class="line">                   <span class="attribute">stringsAsFactors</span>=<span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line">  # perform Wilcoxon test</span><br><span class="line">  row &lt;- 0</span><br><span class="line">  <span class="keyword">for</span>(i <span class="keyword">in</span> 1:k)&#123;</span><br><span class="line">    <span class="keyword">for</span>(j <span class="keyword">in</span> 1:k)&#123;</span><br><span class="line">      <span class="keyword">if</span> (j &gt; i)&#123;</span><br><span class="line">        row &lt;- row + 1</span><br><span class="line">        y1 &lt;- y[<span class="attribute">x</span>==groups[i]]</span><br><span class="line">        y2 &lt;- y[<span class="attribute">x</span>==groups[j]]</span><br><span class="line">        test &lt;- wilcox.test(y1, y2, <span class="attribute">exact</span>=exact)</span><br><span class="line">        mc[row,1] &lt;- groups[i]</span><br><span class="line">        mc[row,2] &lt;- groups[j]</span><br><span class="line">        mc[row,3] &lt;- test<span class="variable">$statistic</span></span><br><span class="line">        mc[row,4] &lt;- test<span class="variable">$p</span>.value</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  mc<span class="variable">$p</span> &lt;- p.adjust(mc<span class="variable">$p</span>.unadj, <span class="attribute">method</span>=method)</span><br><span class="line"></span><br><span class="line">  # <span class="builtin-name">add</span> stars</span><br><span class="line">  mc<span class="variable">$stars</span> &lt;- <span class="string">" "</span></span><br><span class="line">  mc<span class="variable">$stars</span>[mc<span class="variable">$p</span> &lt;   .1] &lt;- <span class="string">"."</span></span><br><span class="line">  mc<span class="variable">$stars</span>[mc<span class="variable">$p</span> &lt;  .05] &lt;- <span class="string">"*"</span></span><br><span class="line">  mc<span class="variable">$stars</span>[mc<span class="variable">$p</span> &lt;  .01] &lt;- <span class="string">"**"</span></span><br><span class="line">  mc<span class="variable">$stars</span>[mc<span class="variable">$p</span> &lt; .001] &lt;- <span class="string">"***"</span></span><br><span class="line">  names(mc)[6] &lt;- <span class="string">" "</span></span><br><span class="line"></span><br><span class="line">  cat(<span class="string">"\nMultiple Comparisons (Wilcoxon Rank Sum Tests)\n"</span>)</span><br><span class="line">  cat(paste(<span class="string">"Probability Adjustment = "</span>, method, <span class="string">"\n\n"</span>, <span class="attribute">sep</span>=<span class="string">""</span>))</span><br><span class="line">  <span class="builtin-name">print</span>(mc[-4], <span class="attribute">right</span>=<span class="literal">TRUE</span>)</span><br><span class="line">  cat(<span class="string">"---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n"</span>)</span><br><span class="line">  return(invisible(<span class="literal">NULL</span>))</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1>Visualization</h1>
<h2 id="single-index">single index</h2>
<h3 id="barplot">barplot</h3>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">Shannon_mean&lt;-aggregate(<span class="name">merge_data</span>$Shannon,by=list(<span class="name">merge_data</span>$group2),FUN=mean)</span><br><span class="line">Shannon_sd&lt;-aggregate(<span class="name">merge_data</span>$Shannon,by=list(<span class="name">merge_data</span>$group2),FUN=sd)</span><br><span class="line">dat &lt;- merge(<span class="name">Shannon_mean</span>, Shannon_sd, by = 'Group.<span class="number">1</span>')</span><br><span class="line">names(<span class="name">dat</span>) &lt;- c('group2', 'mean', 'sd')</span><br><span class="line">dat &lt;- cbind(<span class="name">dat</span>, sign = c('a','a','a','a','a')) #obtained from the above test</span><br><span class="line">library(<span class="name">ggplot2</span>)</span><br><span class="line">ggplot(<span class="name">dat</span>, aes(<span class="name">group2</span>, mean)) +</span><br><span class="line">  geom_col(<span class="name">aes</span>(<span class="name">fill</span> = group2), width = <span class="number">0.4</span>, show.legend = FALSE) +</span><br><span class="line">  geom_errorbar(<span class="name">aes</span>(<span class="name">ymax</span> = mean + sd, ymin = mean - sd), width = <span class="number">0.15</span>, size = <span class="number">0.5</span>) +</span><br><span class="line">  geom_text(<span class="name">aes</span>(<span class="name">label</span> = sign, y = mean +sd + <span class="number">0.5</span>)) +</span><br><span class="line">  theme(<span class="name">panel</span>.grid = element_blank(), panel.background = element_rect(<span class="name">color</span> = 'black', fill = 'transparent'), plot.title = element_text(<span class="name">hjust</span> = <span class="number">0.5</span>)) +</span><br><span class="line">  labs(<span class="name">x</span> = 'Group', y = 'Shannon', title = 'Wilcox test')</span><br></pre></td></tr></table></figure>
<h3 id="boxplot">boxplot</h3>
<h4 id="use-ggplot2">use ggplot2</h4>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">ggplot(<span class="name">merge_data</span>)+geom_boxplot(<span class="name">aes</span>(<span class="name">x=group2</span>,y=Shannon))</span><br><span class="line">ggplot(<span class="name">merge_data</span>)+geom_boxplot(<span class="name">aes</span>(<span class="name">x=group2</span>,y=Shannon,fill=group1))</span><br><span class="line">#add significnace</span><br><span class="line">ggplot(<span class="name">merge_data</span>,aes(<span class="name">x=group2</span>,y=Shannon))+geom_boxplot(<span class="name">aes</span>(<span class="name">fill=group2</span>))+stat_compare_means(<span class="name">method=</span><span class="string">"kruskal.test"</span>)</span><br><span class="line">#facet_wrap</span><br><span class="line">ggplot(<span class="name">merge_data</span>)+geom_boxplot(<span class="name">aes</span>(<span class="name">x=group2</span>,y=Shannon,fill=group1))+facet_wrap(~group1,scale=<span class="string">"free"</span>)</span><br><span class="line">#add error bar</span><br><span class="line">ggplot(<span class="name">merge_data</span>,aes(<span class="name">x=group2</span>,y=Shannon))+stat_boxplot(<span class="name">geom=</span><span class="string">"errorbar"</span>,width=0.<span class="number">15</span>)+geom_boxplot(<span class="name">aes</span>(<span class="name">fill=group2</span>))+facet_wrap(~group1,scale=<span class="string">"free"</span>)</span><br><span class="line">#add point</span><br><span class="line">ggplot(<span class="name">merge_data</span>,aes(<span class="name">x=group2</span>,y=Shannon))+stat_boxplot(<span class="name">geom=</span><span class="string">"errorbar"</span>,width=0.<span class="number">15</span>)+geom_boxplot(<span class="name">aes</span>(<span class="name">fill=group2</span>),outlier.color=<span class="string">"red"</span>)+facet_wrap(~group1,scale=<span class="string">"free"</span>)+geom_dotplot(<span class="name">binaxis=</span><span class="string">"y"</span>,stackdir=<span class="string">"center"</span>,position=<span class="string">"jitter"</span>,dotsize=0.<span class="number">4</span>)</span><br></pre></td></tr></table></figure>
<h4 id="use-ggpubr">use ggpubr</h4>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">library(<span class="name">ggpubr</span>)</span><br><span class="line">ggboxplot(<span class="name">merge_data</span>,<span class="string">"group2"</span>,<span class="string">"Shannon"</span>,color=<span class="string">"group2"</span>,palette=<span class="string">"jama"</span>,add=<span class="string">"jitter"</span>)+stat_compare_means(<span class="name">method=</span><span class="string">"kruskal.test"</span>)</span><br></pre></td></tr></table></figure>
<h2 id="multiple-indexes">multiple indexes</h2>
<h3 id="barplot-2">barplot</h3>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">merge_data1&lt;-merge_data[,-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">theme &lt;- theme(panel.<span class="attr">background</span> = element_blank(), <span class="comment"># 去掉背景格子</span></span><br><span class="line">               <span class="comment"># 显示x平行网格线</span></span><br><span class="line">               panel.grid.major.<span class="attr">y</span> = element_line(<span class="attr">colour</span> = <span class="string">"black"</span>),</span><br><span class="line">               <span class="comment"># 显示x轴坐标</span></span><br><span class="line">               axis.line.<span class="attr">x</span> = element_line(<span class="attr">colour</span> = <span class="string">"black"</span>),</span><br><span class="line">               axis.line.<span class="attr">y</span> = element_line(<span class="attr">colour</span> = <span class="string">"black"</span>),</span><br><span class="line">               axis.title.<span class="attr">x</span> = element_blank()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">p &lt;- list()</span><br><span class="line">for (i <span class="keyword">in</span> colnames(merge_data1)[<span class="number">1</span>:<span class="number">8</span>])&#123;</span><br><span class="line">  p[[i]] &lt;- ggplot(<span class="attr">data</span> = merge_data1, aes_string(<span class="attr">x</span> = <span class="string">"group1"</span>,</span><br><span class="line">                                                 <span class="attr">y</span> = i)) +</span><br><span class="line">    geom_col(aes(<span class="attr">fill=group2))</span> +</span><br><span class="line">    theme</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">##devtools::install_github("thomasp85/patchwork")</span></span><br><span class="line">library(patchwork)</span><br><span class="line">multiplot&lt;-wrap_plots(p, <span class="attr">nrow</span> = <span class="number">2</span>) + plot_annotation(<span class="attr">tag_levels</span> = 'a')</span><br><span class="line">multiplot</span><br></pre></td></tr></table></figure>
<h3 id="boxplot-2">boxplot</h3>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">merge_data1&lt;-merge_data[,-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">theme &lt;- theme(panel.<span class="attr">background</span> = element_blank(), <span class="comment"># 去掉背景格子</span></span><br><span class="line">               <span class="comment"># 显示x平行网格线</span></span><br><span class="line">               panel.grid.major.<span class="attr">y</span> = element_line(<span class="attr">colour</span> = <span class="string">"black"</span>),</span><br><span class="line">               <span class="comment"># 显示x轴坐标</span></span><br><span class="line">               axis.line.<span class="attr">x</span> = element_line(<span class="attr">colour</span> = <span class="string">"black"</span>),</span><br><span class="line">               axis.line.<span class="attr">y</span> = element_line(<span class="attr">colour</span> = <span class="string">"black"</span>),</span><br><span class="line">               axis.title.<span class="attr">x</span> = element_blank()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">p &lt;- list()</span><br><span class="line">for (i <span class="keyword">in</span> colnames(merge_data1)[<span class="number">1</span>:<span class="number">8</span>])&#123;</span><br><span class="line">  p[[i]] &lt;- ggplot(<span class="attr">data</span> = merge_data1, aes_string(<span class="attr">x</span> = <span class="string">"group2"</span>,</span><br><span class="line">                                                  <span class="attr">y</span> = i)) +</span><br><span class="line">    geom_jitter(aes(<span class="attr">color</span> = group1)) +</span><br><span class="line">    geom_boxplot(aes(<span class="attr">fill</span> = sites), <span class="attr">width</span> = .<span class="number">2</span>, <span class="attr">position</span> = position_nudge(<span class="attr">x</span> = - <span class="number">0.01</span>),</span><br><span class="line">                 <span class="attr">fill</span> = <span class="string">"white"</span>, <span class="attr">size</span> = <span class="number">0.8</span>) + stat_compare_means(<span class="attr">method="kruskal.test",cex=2.5)</span></span><br><span class="line">    theme</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">##devtools::install_github("thomasp85/patchwork")</span></span><br><span class="line">library(patchwork)</span><br><span class="line">multiplot&lt;-wrap_plots(p, <span class="attr">nrow</span> = <span class="number">2</span>) + plot_annotation(<span class="attr">tag_levels</span> = 'a')</span><br><span class="line">multiplot</span><br></pre></td></tr></table></figure>
<p>Ref:</p>
<blockquote>
<p>基于OTU的alpha多样性指数计算和可视化：<a href="https://www.jianshu.com/p/343b31082428" target="_blank" rel="noopener">https://www.jianshu.com/p/343b31082428</a><br>
R-t检验：<a href="https://www.jianshu.com/p/fa636135628a" target="_blank" rel="noopener">https://www.jianshu.com/p/fa636135628a</a><br>
R-非参数检验： <a href="https://www.jianshu.com/p/ece7c8848fd9" target="_blank" rel="noopener">https://www.jianshu.com/p/ece7c8848fd9</a><br>
多组间差异分析之方差分析（ANOVA）在R中实现:<a href="http://blog.sciencenet.cn/blog-3406804-1190969.html" target="_blank" rel="noopener">http://blog.sciencenet.cn/blog-3406804-1190969.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Metabarcoding</category>
      </categories>
      <tags>
        <tag>16S</tag>
        <tag>Rstats</tag>
        <tag>Rplot</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.12.我在三十岁的第一年 I&amp;II</title>
    <url>/2020/04/15/2020-12-wozaisanshisuidenayinian/</url>
    <content><![CDATA[<p><strong>摘要：</strong> 原文摘录 &amp; 我的书评。| 韩寒监制，“ONE·一个”超高人气长篇小说。都市白领陈苏，努力奋斗到三十岁，拥有的技能是用”海明威撩汉子。她渴望真爱，却经历无数“狗血”：一身少爷病的前男友，不缺钱还很努力的90后“高富帅”，与现代文明格格不入的相亲对象… 难道女人上了年纪，连爱的资格都要随时间流逝？她努力工作，却遭遇职场歧视，始终打不破阶层天花板。想维系友谊，却发现女朋友一旦结婚就是友谊的终结。过着人人羡慕的优质中产生活的表姐张小菲，因遭遇婚姻危机而陷入困境。过着活色生香的独立女强人闺蜜，也因一场与明星的爱恋而丧失自我。但三十岁的好事，就是在反复失败中获得的历练。即使没能赢得一切，每一次从失落中站起来，都会更加认定一件事：没有比走到三十岁更好的事。</p>
<a id="more"></a>
<h3 id="原文摘录">原文摘录</h3>
<h4 id="我在三十岁的第一年i">我在三十岁的第一年i</h4>
<ul>
<li>三十岁啊，你自己的感觉不重要，但是，赢很重要。</li>
<li>Do you want the truth or something beautiful</li>
<li>婚姻的意义吗？陪伴</li>
<li>你来人间一趟，你要看看太阳，和你的心上人，一起走在街上。</li>
<li>我努力地想要不普通，好多年后知道，普通，根本就是一种不可改变的命运。</li>
<li>有时候不需要考虑生命的意义，只需要做一件最正确的事。</li>
</ul>
<h4 id="我在三十岁的第一年II">我在三十岁的第一年II</h4>
<ul>
<li>没有什么假装谈恋爱，也没有什么奉命去复婚，人所有一切的行动，不过是遵循内心最强烈的愿望。</li>
<li>我内心有一种很强烈的感觉，当人知道自己想要什么的时候，这个东西一定会出现。因为世界上稀里糊涂活着的人，真的太多了。</li>
<li>和唐德在一起，我再也不需要费尽心机逗自己开心了，再也不需要牢牢记住每一本书、每一部电影里最扣人心弦的部分，去尝试触动另一个人。 爱情让人变得像个傻子。两个无知无畏的傻子。</li>
<li>三十岁后外表上的变化，只跟财力有关。看起来年轻、滋润的人，多半是因为充裕的经济条件，跟结没结过婚、生没生过小孩，都关系不大。</li>
<li>原来和自己一样大的人，并非无趣，也不一定世故，有着平凡普通的一面，却也不乏闪光点。</li>
<li>当松开这条枷锁才发现，人类其实是不需要设限的，爱和自由，跟年龄无关，是任何时候都可以奋力追求的宝藏。</li>
</ul>
<h3 id="我的书评">我的书评</h3>
<ul>
<li>I有点狗血；II还不错，所有人的结局我都喜欢。</li>
<li>人生没有终结点，哪一个年纪，都可以重新来过。</li>
<li>昨天可能劳累加上又喝了点酒，看完书后想法超多，自己的感情啊，然后给朋友Z巴巴巴巴发了一堆消息，她回“？？？”，其实我也没搞明白我想要说什么，或者做了什么决定。因为我决定要开心、要好好经营的感情，对方那人的回应并不让我感到开心，他可能也不开心吧，不合适，可是俩人都吊着，也不分道扬镳。你不要怕啊，不合适就算，你看张小菲、你看陈苏、你再看看胡容，大家都有好生活和好去处。</li>
</ul>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.10.我决定活得有趣</title>
    <url>/2020/03/25/2020-10-wojuedinghuodeyouqu/</url>
    <content><![CDATA[<p><strong>摘要</strong>：原文摘录 &amp; 我的书评。| 当一个人活得有趣，也就活得通透了。蔡澜不仅会吃，会玩，更会享受人生。把生命中的事情都简单一点考虑，生活就会比较开心。多旅行、多阅读、多经历，对生活保持好奇，喜欢的事，加以研究，别的事就不必去理它。珍惜每一刻应得的享受，把人生充分地活足了它。他说，平稳的人生，一定闷。我受不了闷，我决定活得有趣。《我决定活得有趣》是最有趣味的生活家蔡澜的生活艺术，他会告诉你什么酒性烈，什么茶品味好，无聊苦闷时写写字、做做饭就好，选女朋友和选衣服领带一样，品味很重要，看似随意的漫谈，实则充满了人生智慧。生活目的就是要尽兴，要永远保持对生活的好奇心，永远有一分任性，生活才会永远有趣。</p>
<a id="more"></a>
<h3 id="原文摘录">原文摘录</h3>
<h4 id="我活着，我活过">我活着，我活过</h4>
<ul>
<li>只有娱乐圈中的人，才明白蜡烛要烧，点两头更明亮的道理。一刹那的光辉，总比一辈子平庸好。</li>
</ul>
<h4 id="有时不妨问问自己">有时不妨问问自己</h4>
<ul>
<li><u>一切基本功都没有捷径。</u></li>
<li>你忘记了刚才提到胡适先生说的话吗？先学会了，方有批评的资格。</li>
<li>爱到浓时，只想和这个人二十四小时长相厮守，大家就结婚了。</li>
</ul>
<h4 id="请不要压抑人的天性">请不要压抑人的天性</h4>
<ul>
<li>有些着迷了一辈子，有些只是吸引了一阵子。</li>
</ul>
<h4 id="我们这辈人最幸福的事情">我们这辈人最幸福的事情</h4>
<ul>
<li>我们得到的多，失去的也不少。</li>
</ul>
<h4 id="等到你成熟时，就会起变化">等到你成熟时，就会起变化</h4>
<ul>
<li>基本训练，总是刻板，所有基础，没有一样是有趣的。等到你成熟时，就会起变化。</li>
<li><code> ‘有时不知道要写些什么才好’</code><br>
<code> ‘我也是一样呀’我说，‘所以要不停地观察人生，不断地把主题储藏起来。’</code></li>
</ul>
<h4 id="美人在每一阶段都好看">美人在每一阶段都好看</h4>
<ul>
<li>美人在每一阶段都好看</li>
</ul>
<h4 id="当成玩的，什么事都可以做">当成玩的，什么事都可以做</h4>
<ul>
<li>大可不必，当成玩的，什么事都可以做。</li>
</ul>
<h4 id="大吃大喝也是对生命的尊重">大吃大喝也是对生命的尊重</h4>
<ul>
<li><u>我想，能出人头地的，都要在年轻时有苦行僧的经历，所得到的，才能珍惜。对于人生，才更能享受。</u></li>
</ul>
<h4 id="有一技之长多好">有一技之长多好</h4>
<ul>
<li>有一技之长，至少老了可以摆摆摊写挥春，不必去当看更。</li>
</ul>
<h4 id="他在每个时代，都玩得尽心尽力">他在每个时代，都玩得尽心尽力</h4>
<ul>
<li>每一个时代，他都玩得尽心尽力，成为专家为止。但是，一个时代结束，就从不回头；所收集的，也一件不留。这是他的个性。</li>
</ul>
<h4 id="老人与猫">老人与猫</h4>
<ul>
<li><code>‘怎么一养就养那么多？’我问。</code><br>
<code>‘一只只来，一只只去。’他说，‘我并没有养，只是拿东西给它们吃。我是主人，它们是客人。‘养’字，太伟大，是它们来陪我罢了。’</code></li>
</ul>
<h4 id="好人也是可爱到了极点">好人也是可爱到了极点</h4>
<ul>
<li>‘和当店学徒一样，师父先让他们看真货，看多了，就知道什么是假的。’棠哥说。</li>
</ul>
<h4 id="跋·以“真”为生命真谛，只求心中真喜欢">跋·以“真”为生命真谛，只求心中真喜欢</h4>
<ul>
<li><u>“凡事都要试，不试，绝无成功可能，试了，成功和失败，一半一半机会。”</u></li>
</ul>
<h4 id="人生真好玩儿">人生真好玩儿</h4>
<ul>
<li><u>年轻人，总要有点理想，总要有点抱负，总要有点想做的事情，要做就尽量去做吧！</u></li>
</ul>
<h4 id="你不给我别的机会，那就从中找到别的乐趣">你不给我别的机会，那就从中找到别的乐趣</h4>
<ul>
<li>‘都是对生活好奇的人’</li>
</ul>
<h3 id="我的书评">我的书评</h3>
<ul>
<li>之前会有突然被感动或者突然寂寞的想结婚的时刻，但是过一段时间便后悔了。现在想长长久久的相处，彼此坚定的选择，陪伴着走剩下的人生，是你就好，结婚是附带的事情。</li>
<li>第一眼就喜欢的事物真的会惦记很久，哪怕得到了后觉得不如想象的好，但是仍然还是比其他的要喜欢，这份心情，可以持续很久。</li>
<li>爱情是一见钟情还是习惯？一见钟情后的习惯大多是爱情；习惯不见得是爱情，可能只是一个关于爱情的故事。</li>
<li>经历和感悟。</li>
<li>要主动，要去问、去做、去试，成功了最好，大不了就算，忌瞎想。</li>
</ul>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>16S_alpha rarefaction curves</title>
    <url>/2020/07/13/16s-alphararefactioncrves/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This document shows the use of R packages (ape, vegan, picante, doBy, ggplot2, BiodiversityR) to plot alpha rarefaction curves and rank-abundance curves. Files used here are feature table and rooted tree files obtained from qiime2.</p>
<a id="more"></a>
<h1>Data</h1>
<p>total abosolute abundance table: <code>feature-table.txt</code><br>
rooted tree: <code>rooted-tree.nwk</code></p>
<h1>Import data</h1>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">otu&lt;-<span class="keyword">read</span>.<span class="keyword">table</span>("feature-table.txt",head=T,<span class="keyword">row</span>.names=<span class="number">1</span>)</span><br><span class="line">otu&lt;-t(otu)</span><br><span class="line">library(ape)</span><br><span class="line">tree&lt;-<span class="keyword">read</span>.tree("root_tree.nwk")</span><br></pre></td></tr></table></figure>
<h1>Definite function</h1>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">library(vegan)</span><br><span class="line">library(picante)</span><br><span class="line">#calculate alpha diversity <span class="meta">index</span></span><br><span class="line">alpha_index &lt;- functi<span class="meta">on(</span><span class="meta">x</span>, method = <span class="string">'richness'</span>, tree = <span class="meta">NULL</span>, base =<span class="meta"> exp(</span>1)) &#123;</span><br><span class="line">  <span class="meta">if</span> (method == <span class="string">'richness'</span>) result &lt;- rowSums(<span class="meta">x</span> &gt; 0)    #丰富度指数</span><br><span class="line">  <span class="meta">else</span> <span class="meta">if</span> (method == <span class="string">'chao1'</span>) result &lt;- estimateR(<span class="meta">x</span>)[2, ]    #Chao1 指数</span><br><span class="line">  <span class="meta">else</span> <span class="meta">if</span> (method == <span class="string">'ace'</span>) result &lt;- estimateR(<span class="meta">x</span>)[4, ]    #ACE 指数</span><br><span class="line">  <span class="meta">else</span> <span class="meta">if</span> (method == <span class="string">'shannon'</span>) result &lt;- diversity(<span class="meta">x</span>, <span class="meta">index</span> = <span class="string">'shannon'</span>, base = base)    #Shannon 指数</span><br><span class="line">  <span class="meta">else</span> <span class="meta">if</span> (method == <span class="string">'simpson'</span>) result &lt;- diversity(<span class="meta">x</span>, <span class="meta">index</span> = <span class="string">'simpson'</span>)    #Gini-Simpson 指数</span><br><span class="line">  <span class="meta">else</span> <span class="meta">if</span> (method == <span class="string">'pielou'</span>) result &lt;- diversity(<span class="meta">x</span>, <span class="meta">index</span> = <span class="string">'shannon'</span>, base = base) /<span class="meta"> log(</span>estimateR(<span class="meta">x</span>)[1, ], base)    #Pielou 均匀度</span><br><span class="line">  <span class="meta">else</span> <span class="meta">if</span> (method == <span class="string">'gc'</span>) result &lt;- 1 - rowSums(<span class="meta">x</span> == 1) / rowSums(<span class="meta">x</span>)    #goods_coverage</span><br><span class="line">  <span class="meta">else</span> <span class="meta">if</span> (method == <span class="string">'pd'</span> &amp; !is.<span class="meta">null</span>(tree)) &#123;    #PD_whole_tree</span><br><span class="line">    pd &lt;- pd(<span class="meta">x</span>, tree, include.root = FALSE)</span><br><span class="line">    result &lt;- pd[ ,1]</span><br><span class="line">    names(result) &lt;- rownames(pd)</span><br><span class="line">  &#125;</span><br><span class="line">  result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#stats alpha diversity <span class="meta">index</span> <span class="meta">in</span> different rarefaction gradients according to step</span><br><span class="line">alpha_curves &lt;- functi<span class="meta">on(</span><span class="meta">x</span>, step, method = <span class="string">'richness'</span>, rare = <span class="meta">NULL</span>, tree = <span class="meta">NULL</span>, base =<span class="meta"> exp(</span>1)) &#123;</span><br><span class="line">  x_nrow &lt;- nrow(<span class="meta">x</span>)</span><br><span class="line">  <span class="meta">if</span> (is.<span class="meta">null</span>(rare)) rare &lt;- rowSums(<span class="meta">x</span>) <span class="meta">else</span> rare &lt;- rep(rare, x_nrow)</span><br><span class="line">  alpha_rare &lt;- <span class="meta">list</span>()</span><br><span class="line"></span><br><span class="line">  for (i <span class="meta">in</span> 1:x_nrow) &#123;</span><br><span class="line">    step_num &lt;- seq(0, rare[i], step)</span><br><span class="line">    <span class="meta">if</span> <span class="meta">(max(</span>step_num) &lt; rare[i]) step_num &lt;- c(step_num, rare[i])</span><br><span class="line"></span><br><span class="line">    alpha_rare_i &lt;- <span class="meta">NULL</span></span><br><span class="line">    for (step_num_n <span class="meta">in</span> step_num) alpha_rare_i &lt;- c(alpha_rare_i, alpha<span class="meta">_index(</span><span class="meta">x</span> = rrarefy(<span class="meta">x</span>[i, ], step_num_n), method = method, tree = tree, base = base))</span><br><span class="line">    names(alpha_rare_i) &lt;- step_num</span><br><span class="line">    alpha_rare &lt;- c(alpha_rare, <span class="meta">list</span>(alpha_rare_i))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  names(alpha_rare) &lt;- rownames(<span class="meta">x</span>)</span><br><span class="line">  alpha_rare</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1>Alpha rarefaction curves</h1>
<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">richness_curves&lt;-alpha_curves(otu,<span class="keyword">step</span>=<span class="number">1000</span>,<span class="function"><span class="keyword">method</span>="<span class="title">richness</span>",<span class="title">base</span>=<span class="title">exp</span><span class="params">(1)</span>)</span></span><br><span class="line"><span class="function"><span class="title">plot_richness</span> &lt;- <span class="title">data</span>.<span class="title">frame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">for</span> <span class="params">(i <span class="keyword">in</span> names(richness_curves)</span>) <span class="comment">&#123;</span></span></span><br><span class="line"><span class="function"><span class="comment">  richness_curves_i &lt;- (richness_curves[[i]])</span></span></span><br><span class="line"><span class="function"><span class="comment">  richness_curves_i &lt;- data.frame(rare = names(richness_curves_i), alpha = richness_curves_i, sample = i, stringsAsFactors = FALSE)</span></span></span><br><span class="line"><span class="function"><span class="comment">  plot_richness &lt;- rbind(plot_richness, richness_curves_i)</span></span></span><br><span class="line"><span class="function"><span class="comment">&#125;</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">rownames</span><span class="params">(plot_richness)</span> &lt;- <span class="title">NULL</span></span></span><br><span class="line"><span class="function"><span class="title">plot_richness</span>$<span class="title">rare</span> &lt;- <span class="title">as</span>.<span class="title">numeric</span><span class="params">(plot_richness$rare)</span></span></span><br><span class="line"><span class="function"><span class="title">plot_richness</span>$<span class="title">alpha</span> &lt;- <span class="title">as</span>.<span class="title">numeric</span><span class="params">(plot_richness$alpha)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(ggplot2)</span></span></span><br><span class="line"><span class="function"><span class="title">ggplot</span><span class="params">(plot_richness, aes(rare, alpha, color = sample)</span>) +</span></span><br><span class="line"><span class="function">  <span class="title">geom_line</span><span class="params">()</span> +</span></span><br><span class="line"><span class="function">  <span class="title">labs</span><span class="params">(x = <span class="string">'Number of sequences'</span>, y = <span class="string">'Richness'</span>, color = NULL)</span> +</span></span><br><span class="line"><span class="function">  <span class="title">theme</span><span class="params">(panel.grid = element_blank()</span>, <span class="title">panel</span>.<span class="title">background</span> = <span class="title">element_rect</span><span class="params">(fill = <span class="string">'transparent'</span>, color = <span class="string">'black'</span>)</span>, <span class="title">legend</span>.<span class="title">key</span> = <span class="title">element_rect</span><span class="params">(fill = <span class="string">'transparent'</span>)</span>) +</span></span><br><span class="line"><span class="function">  <span class="title">geom_vline</span><span class="params">(xintercept = min(rowSums(otu)</span>), <span class="title">linetype</span> = 2) +</span></span><br><span class="line"><span class="function">  <span class="title">scale_x_continuous</span><span class="params">(breaks = seq(0, 30000, 5000)</span>, <span class="title">labels</span> = <span class="title">as</span>.<span class="title">character</span><span class="params">(seq(0, 30000, 5000)</span>))</span></span><br><span class="line"><span class="function"><span class="title">ggsave</span><span class="params">("observed_otus_rarefaction_curves.png", height = 5, width = 8)</span></span></span><br></pre></td></tr></table></figure>
<p><strong>calculate several times to get the mean and sd, then plot.</strong></p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">#repeat sampling <span class="number">5</span> times</span><br><span class="line">plot_richness &lt;- data.frame<span class="literal">()</span></span><br><span class="line"></span><br><span class="line">for (n <span class="keyword">in</span> <span class="number">1</span>:<span class="number">5</span>) &#123;</span><br><span class="line">  richness_curves &lt;- alpha<span class="constructor">_curves(<span class="params">otu</span>, <span class="params">step</span> = 1000, <span class="params">method</span> = '<span class="params">richness</span>')</span></span><br><span class="line"></span><br><span class="line">  for (i <span class="keyword">in</span> names(richness_curves)) &#123;</span><br><span class="line">    richness_curves_i &lt;- (richness_curves<span class="literal">[[<span class="identifier">i</span>]</span>])</span><br><span class="line">    richness_curves_i &lt;- data.frame(rare = names(richness_curves_i), alpha = richness_curves_i, sample = i, stringsAsFactors = FALSE)</span><br><span class="line">    plot_richness &lt;- rbind(plot_richness, richness_curves_i)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#calculate mean <span class="keyword">and</span> sd (using summary<span class="constructor">By()</span> <span class="keyword">in</span> package doBy)</span><br><span class="line">library(doBy)</span><br><span class="line">plot_richness_stat &lt;- summary<span class="constructor">By(<span class="params">alpha</span><span class="params">~sample</span>+<span class="params">rare</span>, <span class="params">plot_richness</span>, FUN = <span class="params">c</span>(<span class="params">mean</span>, <span class="params">sd</span>)</span>)</span><br><span class="line">plot_richness_stat$rare &lt;- <span class="keyword">as</span>.numeric(plot_richness_stat$rare)</span><br><span class="line">plot_richness_stat<span class="literal">[<span class="identifier">which</span>(<span class="identifier">plot_richness_stat$rare</span> <span class="operator">==</span> <span class="number">0</span>),'<span class="identifier">alpha</span>.<span class="identifier">sd</span>']</span> &lt;- NA</span><br><span class="line"></span><br><span class="line">#plot</span><br><span class="line">ggplot(plot_richness_stat, aes(rare, alpha.mean, color = sample)) +</span><br><span class="line">  geom<span class="constructor">_line()</span> +</span><br><span class="line">  geom<span class="constructor">_point()</span> +</span><br><span class="line">  geom<span class="constructor">_errorbar(<span class="params">aes</span>(<span class="params">ymin</span> = <span class="params">alpha</span>.<span class="params">mean</span> - <span class="params">alpha</span>.<span class="params">sd</span>, <span class="params">ymax</span> = <span class="params">alpha</span>.<span class="params">mean</span> + <span class="params">alpha</span>.<span class="params">sd</span>)</span>, width = <span class="number">500</span>) +</span><br><span class="line">  labs(x = 'Number <span class="keyword">of</span> sequences', y = 'Richness', color = NULL) +</span><br><span class="line">  theme(panel.grid = element<span class="constructor">_blank()</span>, panel.background = element<span class="constructor">_rect(<span class="params">fill</span> = '<span class="params">transparent</span>', <span class="params">color</span> = '<span class="params">black</span>')</span>, legend.key = element<span class="constructor">_rect(<span class="params">fill</span> = '<span class="params">transparent</span>')</span>) +</span><br><span class="line">  geom<span class="constructor">_vline(<span class="params">xintercept</span> = <span class="params">min</span>(<span class="params">rowSums</span>(<span class="params">otu</span>)</span>), linetype = <span class="number">2</span>) +</span><br><span class="line">  scale<span class="constructor">_x_continuous(<span class="params">breaks</span> = <span class="params">seq</span>(0, 30000, 5000)</span>, labels = <span class="keyword">as</span>.character(seq(<span class="number">0</span>, <span class="number">30000</span>, <span class="number">5000</span>)))</span><br></pre></td></tr></table></figure>
<h1>Rank-abundance curves</h1>
<figure class="highlight processing"><table><tr><td class="code"><pre><span class="line">library(BiodiversityR)</span><br><span class="line"></span><br><span class="line">#stats（<span class="built_in">sort</span> the otu using rankabundance() in R <span class="keyword">package</span> BiodiversityR)</span><br><span class="line">otu_relative &lt;- otu / rowSums(otu)</span><br><span class="line">rank_dat &lt;- data.frame()</span><br><span class="line"><span class="keyword">for</span> (i in rownames(otu_relative)) &#123;</span><br><span class="line">  rank_dat_i &lt;- data.frame(rankabundance(<span class="built_in">subset</span>(otu_relative, rownames(otu_relative) == i), digits = <span class="number">4</span>))[<span class="number">1</span>:<span class="number">2</span>]</span><br><span class="line">  rank_dat_i$sample &lt;- i</span><br><span class="line">  rank_dat &lt;- rbind(rank_dat, rank_dat_i)</span><br><span class="line">&#125;</span><br><span class="line">rank_dat &lt;- <span class="built_in">subset</span>(rank_dat, rank_dat$abundance != <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">#plot</span><br><span class="line">ggplot(rank_dat, aes(rank, <span class="built_in">log</span>(abundance, <span class="number">10</span>), <span class="built_in">color</span> = sample)) +</span><br><span class="line">  geom_line() +</span><br><span class="line">  labs(x = <span class="string">'OTUs rank'</span>, y = <span class="string">'Relative adundance (%)'</span>, <span class="built_in">color</span> = NULL) +</span><br><span class="line">  theme(panel.grid = element_blank(), panel.<span class="built_in">background</span> = element_rect(<span class="built_in">fill</span> = <span class="string">'transparent'</span>, <span class="built_in">color</span> = <span class="string">'black'</span>), legend.<span class="built_in">key</span> = element_rect(<span class="built_in">fill</span> = <span class="string">'transparent'</span>)) +</span><br><span class="line">  scale_y_continuous(breaks = <span class="number">0</span>:<span class="number">-5</span>, labels = c(<span class="string">'100'</span>, <span class="string">'10'</span>, <span class="string">'1'</span>, <span class="string">'0.1'</span>, <span class="string">'0.01'</span>, <span class="string">'0.001'</span>), limits = c(<span class="number">-5</span>, <span class="number">0</span>))</span><br></pre></td></tr></table></figure>
<p>Ref:</p>
<blockquote>
<p>R语言绘制Alpha多样性稀释曲线与Rank-abundance曲线 : <a href="http://blog.sciencenet.cn/home.php?mod=space&amp;uid=3406804&amp;do=blog&amp;id=1184055" target="_blank" rel="noopener">blog.sciencenet.cn/home.php?mod=space&amp;uid=3406804&amp;do=blog&amp;id=1184055</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Metabarcoding</category>
      </categories>
      <tags>
        <tag>16S</tag>
        <tag>Rstats</tag>
        <tag>Rplot</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.1.按自己的意愿过一生</title>
    <url>/2020/03/10/2020-1-anzijideyiyuanguoyisheng/</url>
    <content><![CDATA[<p><strong>摘要</strong>：原文摘录。| 简介：在她的第五本著作《按自己的意愿过一生》中，王潇以真诚诙谐的口吻，毫无保留地分享自己的亲身经历。从初入职场的学生到身经百战的职业经理人，从坚定的“灭绝组”成员到与真爱喜结良缘，从万人之上的《时尚COSMO》总编辑到事必躬亲的品牌创始人，王潇以一颗真诚、勇敢、坚韧的心，在多重身份之间游刃有余。最重要的是，作为女人，她从未有一天向现实妥协，从未有一秒背叛过自己。你，也同样可以！</p>
<a id="more"></a>
<h3 id="前言-如果你是我的同类">前言 如果你是我的同类</h3>
<ul>
<li>按自己的意愿过一生：热血，用一辈子去赢得做自己的权利。</li>
</ul>
<h3 id="Part1-她看上去得到了计划中的一切">Part1 她看上去得到了计划中的一切</h3>
<ul>
<li>观摩活法 → 研究自己 → 发现意义 → 踏上征程 → 循环往复</li>
<li>核心素质：“心里有数，情绪稳定。”</li>
</ul>
<h4 id="一生的计划">一生的计划</h4>
<ul>
<li>“写下愿望只是给自己在远处摆上一个灯塔，而愿望里真正发生作用的部分是这样的：“为了实现以上的计划，从明天起，我要做到的是：xxxx。””</li>
<li>我没有资格评价任何人的人生目标，但我敬仰对自己的欲望和能力深刻了解，并使命必达的人。</li>
<li>生活的现状是所有外力和内力共同选择的合力，是所有变量叠加经过意志决定后的共同结果。</li>
</ul>
<h4 id="高冷之家">高冷之家</h4>
<ul>
<li>“自证自信，心里有数，情绪稳定就好。”</li>
<li>追问的思维过程会使人开智。</li>
</ul>
<h4 id="我的大学">我的大学</h4>
<ul>
<li>“别忘了我想去的地方，别忘了我想成为很厉害的人。”</li>
</ul>
<h4 id="幸福偶像">幸福偶像</h4>
<ul>
<li>“也是三十岁以后，我才明白，无论是择业道路，还是恋爱道路，都比不上<strong>自我发现</strong>的道路艰难和漫长。”</li>
</ul>
<h3 id="Part2-不要温和地走进那个行业">Part2 不要温和地走进那个行业</h3>
<ul>
<li>“与其说是那些时刻召唤了人们，我宁愿相信是人们通过漫长的执念召唤出了那些瞬间。”</li>
</ul>
<h4 id="创业七年·前传">创业七年·前传</h4>
<ul>
<li>“勤出门，积极友善地对待过往友人，告诉他们你在做什么，以及，做一个胆子大的人。”</li>
</ul>
<h4 id="创业七年·朝霞、包裹和我">创业七年·朝霞、包裹和我</h4>
<ul>
<li>“如果我是大多数，我会怎么解决？如果我是极少数的人，我应该怎么解决？”</li>
</ul>
<h4 id="创业七年·幂次法则">创业七年·幂次法则</h4>
<ul>
<li>幂次法则，即80/20法则。要做那20%，需要做一些事情，而这些事情通常具有两个重要的特点：1）scalable可扩展，即病毒式放大，可做乘法；2）self-reinforcing自我强化，即正向循环，马太效应。</li>
<li>“有些事是不能慢的，要杀伐决断，立即行动；有些事是不能快的，要沉静谦卑，酝酿等待。往前走，得失取舍，时间看得见。”</li>
</ul>
<h4 id="创业七年·趁早">创业七年·趁早</h4>
<ul>
<li>“真要分析什么是这个时代人们的刚需，我坚定认为，在保暖之后，对自我安全感的需求，真的是刚需中的刚需。”</li>
</ul>
<h3 id="Part3-你什么都没有错，只是太弱">Part3 你什么都没有错，只是太弱</h3>
<ul>
<li>“命运要我蛰伏，我就蛰伏。耐住寂寞，回山洞里，把功练成。”</li>
</ul>
<h4 id="好，我等着">好，我等着</h4>
<ul>
<li>座右铭“时间看得见”</li>
<li>“人的一切痛苦，本质上是对自己无能的愤怒。”</li>
</ul>
<h4 id="不分男女，只分强弱">不分男女，只分强弱</h4>
<ul>
<li>杀死两个自己，“一个自己还相信有侥幸的机会主义；另一个还等待大手的赏识和扶持。”</li>
<li>“人一定要想清三个问题：第一你有什么，第二你要什么，第三你能兑换什么。”</li>
</ul>
<h4 id="走出这步">走出这步</h4>
<ul>
<li>lean in 向前一步</li>
<li>“拒绝只站在信息流和产品线的末端，我除了点赞还要发声，除了体验还要参与改进。”</li>
<li>“投资的问题，就是你把生命及一切资源如何分配的问题。”</li>
</ul>
<h3 id="Part4-看，真爱">Part4 看，真爱</h3>
<ul>
<li>“生活越难，我就越想你；见的人越多，我就越想你。”</li>
</ul>
<h4 id="最深的懂">最深的懂</h4>
<ul>
<li>价值观：“在有限的时间里，你认为什么是最宝贵的，你才会选择去做什么。”</li>
</ul>
<h4 id="黑猫少女">黑猫少女</h4>
<ul>
<li>“人生并不是都能计划的！”</li>
<li>“除了先天的亲人，我们后半生的许多福祉，需要来自后天的亲人，你得张开怀抱，在茫茫人海找到他们。有了他们，挫折来的时候，你会比一个人时多出许多力量。”</li>
</ul>
<h3 id="Part5-不然生活多无趣，不是吗？">Part5 不然生活多无趣，不是吗？</h3>
<ul>
<li>“活时尽兴，去无所羁。”</li>
</ul>
<h4 id="我的21公里">我的21公里</h4>
<ul>
<li>“马拉松真正的意义，一定是那极限之后的路程，因为人会碰触到他的边界。”</li>
</ul>
<h4 id="极少数的阿姨">极少数的阿姨</h4>
<ul>
<li>“人会从令自己心动的榜样上看到理想的未来模型，这种天然的向往一经认出，根本无法抵御，就像当初看到那个令人心动的初恋对象。你爱上一个理想形象，因为你爱上那样理想中的自己；那么有一天，如果你发现，你从未活成那个样子，或者你再也没有机会活成那个样子了，才是对此生绝望的心死。真正的衰老，应该是从那刻之后到来。”</li>
</ul>
<h4 id="一颗灵药">一颗灵药</h4>
<ul>
<li>“我们无论现在处于人生的哪个阶段，本质都是向死而生。常说的惜命，就是珍惜仅有一次的生命机会，惜命不是以养生和延长寿命为第一目标，活到淋漓，活够本儿才是真正的惜命。”</li>
<li>“在什么样的条件下，灵药会生效呢？需要四个条件：第一，尝试世间的活法，了解自己的天赋和兴趣，找到这颗药。第二，倒一杯水。第三，按时服药。第四，等待药效发作的时间。四个条件缺一不可。”</li>
</ul>
<h4 id="遗愿清单">遗愿清单</h4>
<ul>
<li>方法论：“天台俯瞰，临终遐想，追悼大会。”</li>
<li>“People just associate it with dying. They don’t realize it’s actually a way to live.”</li>
</ul>
<p><strong><center>As long as you are dreaming, believing and doing, you can go anywhere and achieve anything.&quot;</center></strong></p>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.13.永不言弃：特朗普自述</title>
    <url>/2020/05/02/2020-13-nevergiveup/</url>
    <content><![CDATA[<p><strong>摘要：</strong> 原文摘录 &amp; 我的书评。| 在漫长的从商生涯中，特朗普遭遇过无数高潮和低谷。在《永不放弃》中，这位全世界最有名气的生意人将向你真诚地讲述发生在他自己身上的挑战、低谷和斗争，以及他是如何将所有这些挫折转化为成功的。特朗普化腐朽为神奇的故事众所周知。他在早期从事房地产时就明白，每项过程都会遇到无法预计的延期、阻碍和问题。他对逆境毫无畏惧，总是做好了充分的应对准备。这样的态度能够给你克服困难的力量，并最终帮助你取得成功。本书每一章都包含了一个特朗普职业生涯中的励志故事及其心得，其智慧的行事哲学将帮助你更好地处理自身的缺点和失败。通过对自己各种戏剧性的故事讲述，特朗普给出了职场成功的几点经典建议：1.从失败与挫折中伺机反击；2.将巨大的挑战转化为更大的机遇；3.将敌人与对手变成朋友和盟友；4.利用暂时的失败激励自己，让自己变得更强大。相信自己，尤其是在面对风险和恐惧的时候，这是帮助你战胜逆境、实现梦想的金钥匙。有创新意识的生意人都应该知道，逆境与成功总是相伴而行的。</p>
<a id="more"></a>
<h1>原文摘录</h1>
<h2 id="引言">引言</h2>
<ul>
<li>人生教会了我一点，那就是 <strong>不要长时间地陷于消极沮丧的状态</strong>。</li>
<li>很多事情往往是因为你过于情绪化了，所以会让你变得抓狂，其实面对它们的时候既不要感到猝不及防，也不要把它们看成是难以逾越的高山峻岭，<strong>要学会冷静客观地看待事物</strong>。</li>
</ul>
<h2 id="人生的最低谷以及我是如何抗争的–数十亿美元的亏空无底洞">人生的最低谷以及我是如何抗争的–数十亿美元的亏空无底洞</h2>
<ul>
<li><strong>关注解决之道，而不要抱怨出现的问题。</strong></li>
</ul>
<h2 id="失败的阴霾总会消退–圆满和东山再起的艺术">失败的阴霾总会消退–圆满和东山再起的艺术</h2>
<ul>
<li><strong>内在的信念往往是人们分出伯仲高下的隐形分水岭。</strong></li>
<li>总而言之，尽力去争取圆满，相信自己，让生命之花绚烂绽放，坚强一些，坚持到底。不要指望别人来帮你，而是靠你自己。做到这些，我相信成功会永远伴随着你，即使当你的外在环境看起来并不优越时。</li>
</ul>
<h2 id="有人曾跟我说拍《飞黄腾达》是错误的–倾听别人的意见，但也要相信自己的直觉">有人曾跟我说拍《飞黄腾达》是错误的–倾听别人的意见，但也要相信自己的直觉</h2>
<ul>
<li>如果你遇到需要让你投入更多时间的情形，你不妨尝试一下，让自己渐入佳境。你最后都会为自己每天的成就而感到惊讶。</li>
</ul>
<h2 id="这是小意外还是大灾难？–准备好迎接意想不到的突发情况">这是小意外还是大灾难？–准备好迎接意想不到的突发情况</h2>
<ul>
<li>有的时候，如果你把所有可能出现的问题都考虑到了之后，你就不妨可以去想想可能会出现什么好事了。</li>
</ul>
<h2 id="我喜欢好好打拼–特朗普苏荷区酒店式公寓">我喜欢好好打拼–特朗普苏荷区酒店式公寓</h2>
<ul>
<li><strong>“对你所做的事要做到无所不知”</strong></li>
</ul>
<h2 id="牢记“9·11”事件–只要你永不放弃，就能回报社会">牢记“9·11”事件–只要你永不放弃，就能回报社会</h2>
<ul>
<li>如果知道自己越成功就能够回报社会越多，这的确是一种催人奋进的健康动力。如果你永不放弃，那么总有一天你也能回报社会，这值得我们铭记在心。</li>
</ul>
<h2 id="准备好应对不期而遇的问题–让特朗普大厦拔地而起">准备好应对不期而遇的问题–让特朗普大厦拔地而起</h2>
<ul>
<li>学会了长久等待的价值，也明白了如果你对某件事情拥有激情，那么没有得到任何鼓励也不会让你气馁。</li>
</ul>
<h2 id="别人常问我的问题">别人常问我的问题</h2>
<ul>
<li><u>一个人要想成功，最关键的是做好哪几步呢？ 做好准备工作。换而言之，对于你的目标要做到知其周祥，预见你将要面对的困难，并把你在每方面需要作出的努力都作好充分地了解。和所有你能找到的专家进行交谈。你可能会成功，也有可能会失败。但是既然已经要面对困难的话，那就不要因为你的疏忽大意而让自己遭遇到更多的不幸。</u></li>
<li><u>什么让你最快乐？ 表现出色，尽到全力，干好工作而且感觉很好。与人分享成功，回报社会。和感觉好的事物（家人等）在一起。</u></li>
</ul>
<h2 id="和抱怨者割席而坐–你可以给自己带来好运">和抱怨者割席而坐–你可以给自己带来好运</h2>
<ul>
<li>只要你发现运气需要靠自己去营造的话，那么就会拥有一种全新的视角。因此只要你踏实工作，开开心心，好运自然会常相伴。</li>
</ul>
<h2 id="勇气并非躲避恐惧，而是克服恐惧">勇气并非躲避恐惧，而是克服恐惧</h2>
<ul>
<li><strong>“他都没有怎么尝试过在公开场合进行演讲，却跟我讲自己不擅长。”</strong></li>
<li><strong>一定要让自己保持思路开阔，能够虚心接纳各种解决方案。这种态度可以让你避免陷入思维陷阱并帮助你找到对策。</strong></li>
</ul>
<h2 id="充满激情：这是愚公移山的唯一通途">充满激情：这是愚公移山的唯一通途</h2>
<ul>
<li>当你面对这种情形时，你首先就要 <strong>考虑自己为什么要做眼下的事</strong>。在前进途中，我们总会遇到这样那样的磕磕碰碰，但只要你能提醒自己时刻不忘原先的初衷，那么就会给自己在前进的道路上点亮一盏明灯。</li>
</ul>
<h2 id="如果面对严峻的问题，那就从中挖掘巨大的机遇">如果面对严峻的问题，那就从中挖掘巨大的机遇</h2>
<ul>
<li>如果你一次可以实现两个甚至多个目标，为什么只达成一个呢？</li>
<li>不是一切事情都会遂愿，你往往要多走几部棋，才会走出一步好棋。</li>
</ul>
<h2 id="拥有国际化思维">拥有国际化思维</h2>
<ul>
<li>追赶潮流会浪费你的时间，相反，做事富有预见性能帮你省下很多时间。</li>
</ul>
<h1>我的书评</h1>
<p>这本书是从五月份开始看的，然后书本内容（可能是翻译问题或者本身就这样？）和新冠期间特朗普的大众印象让我觉得“我在干嘛？我从这本书里得到了什么？我为什么要继续看下去？”，一拖就拖到了现在，终于看完了。<br>
问我有什么想法，嗯…  我喜欢冒险的人  他是敢于冒险的人<br>
祝他好运！</p>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.2.生吞</title>
    <url>/2020/03/10/2020-2-shengtun/</url>
    <content><![CDATA[<p><strong>摘要</strong>：原文摘录 &amp; 我的书评。| 故事梗概：2003年冬，十七岁少女黄姝惨遭奸杀，全身赤裸被弃尸于一幢烂尾楼前的雪坑。大雪覆盖了胴体也掩盖了重要线索，作案手法和动机成迷。十年后，又一具少女尸体被剥光衣服丢进雪坑，作案手段完全复刻，可昔日重大嫌疑人却早已去世，追查此案的老刑警冯国金再次坠入迷雾。随着尘封旧案重见天日，一段深埋在五个少男少女间的残酷青春往事浮出水面……</p>
<a id="more"></a>
<h3 id="原文摘录">原文摘录</h3>
<h4 id="楔子">楔子</h4>
<ul>
<li>我的人生似乎一直在重复犯类似的错误，当时看着没多重大，等发现时已经满盘皆输。</li>
<li>但我们谁也不知道，至少我不知道，人生到底从哪一步开始走错，以至于多年后的我们形同陌路，相遇离别都像发生在梦里。</li>
</ul>
<h4 id="无人认领">无人认领</h4>
<ul>
<li>精神病也知道害怕，我三姨夫就是精神病，自己做了错事，清醒过来也知道跑。</li>
<li>因为无视是逃避痛苦的最好方法，后来的许多年里，我都是如此面对人生中那些险些要我命的痛苦的。</li>
<li>本来就是这个样子，你不用明白。</li>
<li>唯一能证明我们仍不过是孩子的理由是，只有孩子，才会把“未来”跟“美好”误解为同一个意思。</li>
<li>家教、乔丹鞋、美国，这些词语听起来都距离我那么遥远，就像我跟黄姝之间一样。好在那些我并不眼馋，不是所有遥不可及的东西都非要碰一碰，不属于你自有道理。</li>
</ul>
<h4 id="有光为证">有光为证</h4>
<ul>
<li>无缘由地彼此憎恨，或许也是人身为群居动物的天性之一。</li>
<li>要是人心也能像河，不管费多少年，只要一堆一块地拼命捞，就能把所有秽物都澄干净了，该多好。</li>
<li>有时我盯着她多看几眼，仿佛能看到我自己，只有为人父母才会了解生活真正的艰辛，否则你这一生所受用的善恶，始终缺一角。</li>
<li>人性的最初，都是非黑即白，两者势均力敌，终己一生像在打一场灵魂的争夺战。</li>
</ul>
<h4 id="天理">天理</h4>
<ul>
<li>这个世界，坏人都抓不过来，好人还跟着犯错，你叫我怎么办？</li>
</ul>
<h4 id="尾声">尾声</h4>
<ul>
<li>为了照亮她的生命，你将自己付之一炬。</li>
</ul>
<h3 id="我的书评">我的书评</h3>
<p>五人中，论彼此的真心，真的只有秦理和黄姝是连在一起的。<br>
我们在自己的人生中，多多少少做错了一些事情，逃过了命运的大锤，却始终逃不过做决定那刻的纠结与经年累月的悔恨。<br>
我一直以为，冯雪娇会有什么牵连，可说到底，她也不过是有点嫉妒心的朋友。<br>
王頔，像极了被社会压迫又努力往上爬的/众人/。你原本可以有不同的选择，不至于抱着自己的女儿想起那句“爸爸没本事”。可我也为你想不到更好的结局了，可能大家都一样平常吧。</p>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.14.笑场</title>
    <url>/2020/09/14/2020-14-xiaochang/</url>
    <content><![CDATA[<p><strong>摘要：</strong> 原文摘录 &amp; 我的书评。| 李诞的奇思妙想集。看似天马行空、光怪陆离的故事中蕴含引人反复玩味的道理，从不同角色的口中描绘出一幅荒诞而又耐人寻味的人生浮世绘。文风简练犀利，冷幽默十足，文艺不矫情，睿智不做作。</p>
<a id="more"></a>
<h1>原文摘录</h1>
<h2 id="序">序</h2>
<ul>
<li>“我不是那种这辈子非要做成什么事儿的人，基本上什么事儿我都不想做，但做的话会认真。”</li>
</ul>
<h2 id="扯经">扯经</h2>
<ul>
<li>“师父，你法名为什么叫空舟？” “大方丈说我度不了人，也难自度，所以赐名空舟，由我自横。” “那我还跟着你干吗…” “你执念太重，跟着谁也到不了彼岸，不如索性和我负负得正。” “为什么啊？” “你看，你总问为什么。”</li>
<li>“师父，好大风雨。” “澈丹，少做感慨。”</li>
<li>“小北，我觉得我对世界缺少热爱，总是不太高兴，见到风和日丽不高兴、高山流水不高兴、推杯换盏不高兴、读万卷书不高兴、行万里路不高兴，我见到大部分人也不高兴，我问师父我是不是出了什么问题，我师父让我来找你，可是你也不高兴。可是我师父是对的。”</li>
<li>“小北，我似乎从来没有过为了什么一定要怎么怎么样的时候，从来没有那么热烈过，即使是给你写的情书，也是压着手腕写的。小北，我是说，话不能说得太满，人活得也不能太满了。当然你很好，你这样理直气壮的很好，我喜欢你这样，但是我不行，我就做你的退路好了。”</li>
</ul>
<h2 id="奇趣">奇趣</h2>
<h3 id="两个乘客">两个乘客</h3>
<ul>
<li>人生下来就是没有退路的过程，死不叫退路。</li>
</ul>
<h3 id="赐予者">赐予者</h3>
<ul>
<li>相比起来，一个伤了心的女人则乏味得多，这个世界上到处都是伤心的女人。</li>
</ul>
<h3 id="卖灯婆">卖灯婆</h3>
<ul>
<li>她想，绕了一圈，还是做了跟大家一样的人。又想，不知道大家绕了几圈。</li>
</ul>
<h3 id="可是我想去罗马">可是我想去罗马</h3>
<ul>
<li>三年前写的话：“你知道吗？我年轻的时候想做许多事，我想恋爱、吸毒、周游世界，就是人们年轻的时候都想做的那些事。你知道最令人烦恼的部分是什么吗？就是我现在正是年轻的时候，可实际上我什么都不想做。我只是觉得要对年轻有个交代才说了那些蠢话。我在等着年轻过去。”</li>
</ul>
<h3 id="青蛙又做错了什么">青蛙又做错了什么</h3>
<ul>
<li>是个励志故事，最励志的部分就是这其实根本不需要那么励志。不需要热泪热血，不需要在温水中一跃而起，要的是一点儿一点儿的消耗。</li>
<li>“好好过日子”这种行为最励志，最可怕。</li>
</ul>
<h1>我的书评</h1>
<p>有人选择卖煎饼<br>
有人选择卖煎饼熟练了后在更多的地方卖煎饼<br>
有人选择在更多的地方卖煎饼后再卖些其他的<br>
有人不断拓展业务<br>
有人只卖煎饼<br>
有一天这俩人见面了<br>
“给我来张煎饼”</p>
<p>他抽上了烟<br>
他摊完煎饼后同样抽上了烟</p>
<p>抑或</p>
<p>“尝尝，我摊的煎饼我老婆可爱吃了，大家也都说好。”<br>
“好。好！”</p>
<p>生活只需要那么一个人<br>
没有那个人也没关系<br>
你要有那股劲</p>
<p>微笑 祝好</p>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.3.你当像鸟飞往你的山</title>
    <url>/2020/03/10/2020-3-educated/</url>
    <content><![CDATA[<p><strong>摘要</strong>：原文摘录 &amp; 我的书评。| 作者说：人们只看到我的与众不同—一个十七岁前从未踏入教室的大山女孩，却戴上一顶学历的高帽，熠熠生辉。只有我知道自己的真面目—不上学，不就医，是父亲要我们坚持的忠诚与真理。父亲不允许我们拥有自己的声音，我们的意志是他眼中的恶魔。哈佛大学，剑桥大学，哲学硕士，历史博士…我知道，像我这样从垃圾堆里爬出来的无知女孩，能取得如今的成就，应当感激涕零才对。但我丝毫提不起热情。那是教育给我的新世界，那是我生命的无限可能。</p>
<a id="more"></a>
<h3 id="原文摘录">原文摘录</h3>
<h4 id="引语">引语</h4>
<ul>
<li>过去总是美好的，因为一个人从来都意识不到当时的情绪；它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。— 弗吉尼亚·伍尔夫</li>
</ul>
<h4 id="择善">择善</h4>
<ul>
<li>弃恶择善</li>
</ul>
<h4 id="助产士">助产士</h4>
<ul>
<li>有时上帝召唤他们回家，任何人都无能为力。</li>
</ul>
<h4 id="奶油色鞋子">奶油色鞋子</h4>
<ul>
<li>母亲常把自己描述成一个讨好者，说她无法阻止自己去猜测别人想要她成为什么样的人，也无法阻止自己极不情愿地强迫自己做出改变。</li>
<li>双相情感障碍：抑郁和躁郁。</li>
</ul>
<h4 id="阿帕奇女人">阿帕奇女人</h4>
<ul>
<li>我说得对吧，没有比现实生活更有意思的了。</li>
<li>人们共同或者独自做出的那些决定，聚合起来，制造了每一桩单独事件。沙粒不可计数，叠压成沉积物，然后成为岩石。</li>
</ul>
<h4 id="诚实的污垢">诚实的污垢</h4>
<ul>
<li>泰勒步入了一片虚空，我不知道他为什么这么做，他也不知道。他无法解释这个信念从何而来，也无法解释它是如何发出明亮的光来穿透那黑暗的不确定。但我一直猜想那来自他脑海中的音乐，来自我们其他人听不到的充满希望的曲调，来自他买三角学书和收藏铅笔屑时一直哼唱的秘密旋律。</li>
</ul>
<h4 id="大小盾牌">大小盾牌</h4>
<ul>
<li>爸爸活在对时间的恐惧中，他感觉时间在他身后紧追不舍。</li>
<li>询问身体的需要，由它自己回答。</li>
</ul>
<h4 id="沉默的教堂">沉默的教堂</h4>
<ul>
<li>泰勒现在是局外人了。他已离家那么久了，已被归为不能分享我们秘密的一类人中。这件事我们也该向他隐瞒。</li>
</ul>
<h4 id="我来自爱达荷州">我来自爱达荷州</h4>
<ul>
<li>我想要的没人能给，因为我想要重塑自我。</li>
</ul>
<h4 id="迷途的骑士">迷途的骑士</h4>
<ul>
<li>金钱的最大优势：考虑金钱以外的事情的能力。</li>
</ul>
<h4 id="假如我是女人">假如我是女人</h4>
<ul>
<li>先找出你的能力所在，然后再决定你是谁。</li>
<li>证明我就是我声称的那个人。</li>
</ul>
<h4 id="卖花女">卖花女</h4>
<ul>
<li>我能在风中站稳，是因为我不是努力尝试站在风中，我说，“风就是风。人能受得了地面上的阵阵狂风，所以也能禁得住高空的风。它们没有区别。不同的是头脑中怎么想。”</li>
</ul>
<h4 id="全能上帝之手">全能上帝之手</h4>
<ul>
<li>积极自由是自制，由自我掌控的自我统治。他解释说，拥有积极自由就是控制自己的思想，从非理性的恐惧和信仰中解放出来，从上瘾、迷信和所有其他形式的自我强迫中解脱出来。</li>
</ul>
<h3 id="我的书评">我的书评</h3>
<p>人物传记，也并非人物传记，有一些虚构的成分，但家庭的大背景是真实的，也就无可厚非了。<br>
其实这本书读完后我没有什么想法，更多的想的是原生家庭的桎梏（观念冲突）。不论年纪或者学历，我们多多少少总会与父母发生冲突，其中有一些会双方磨合或者一方妥协；另一些便使家庭分崩离析，成员天各一方抑或老死不相往来了。家庭成员之间的相处，其实也是很大的学问，可我们总是把这些作为所属物或者理所当然，投放了太少真实的自己在上面，却希望他们真正的理解自己且按照期望的方式爱自己。大家的成长不一定是同步的，我们需要更多的沟通。<br>
最近在看《我要快乐，不必正常》（Why be happy when you could be normal?），有意无意的总会比较一下两位作者。其实觉得Tara蛮幸运的，她的哥哥姐姐们用自己的人生向她展示了走这条路是什么样的、走另一条路又是什么样的，她并没有太强的个人意识，而是被事物裹挟着走出了家庭（并没有完全走出家庭的思想），走到了受教育的现在的自己，现在或许不一样了。而Jeanette自我意识很强，她清楚的知道什么是自己想要的，理性、果敢，与此同时，也免不了面对不想要的东西（养母）时的冷淡。我不知道哪种性格是好的，但是面对两难抉择的时候，请选择“我要快乐”。</p>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.6.当我谈跑步时，我谈些什么</title>
    <url>/2020/03/10/2020-6-dangwopaobushi/</url>
    <content><![CDATA[<p><strong>摘要</strong>：原文摘录 &amp; 我的书评。| 村上25年跑步与人生历程全纪录，内地销量突破30万册，令无数人爱上跑步，从此改变生活方式！《当我谈跑步时，我在谈什么》是村上春树最受欢迎的随笔集。开始作家生涯之际，村上春树也开始长跑。从夏威夷的考艾岛，到马萨诸塞的剑桥；从村上市的铁人三项赛，到希腊马拉松长跑古道，他永远在奔跑。“痛楚难以避免，而磨难可以选择。”每当村上长跑时，脑海里就反复出现这句话。积极地选择磨难，就是将人生的主动权握在自己手中。他将这些年来在路上一面奔跑，一面思索的东西集结成书，诚实地书写跑步，诚实地书写人生。</p>
<a id="more"></a>
<h3 id="原文摘录">原文摘录</h3>
<h4 id="作为选择对象的磨难">作为选择对象的磨难</h4>
<ul>
<li>萨摩赛特·毛姆写道：“任何一把剃刀都自有其哲学。”大约是说，无论何等微不足道的举动，只要日日坚持，从中总会产生出某些类似客观认知的东西来。</li>
<li>Pain is inevitable. Suffering is optional.</li>
</ul>
<h4 id="谁能够笑话米克·贾格尔呢">谁能够笑话米克·贾格尔呢</h4>
<ul>
<li>欧内斯特·海明威好像也说过类似的话：<strong>持之以恒，不乱节奏。</strong> 这对长期作业实在至为重要。一旦节奏得以设定，其余的问题便可以迎刃而解。然而要让惯性的轮子以一定的速度准确无误地旋转起来，对待持之以恒，何等小心翼翼也不为过。</li>
</ul>
<h4 id="人是如何成为跑步小说家的">人是如何成为跑步小说家的</h4>
<ul>
<li><strong>勤勉耐劳，不惜体力，从前也罢现在也罢，都是我仅有的可取之处。</strong></li>
<li>我的运动神经和反射神经并不是太出色，不擅长那些速战速决型的体育项目，但是长距离的跑步和游泳与我的性情相符。</li>
<li>速度与距离姑且不问，我先做到坚持每天跑步，尽量不间断。</li>
<li><strong>‘人生中’容易看清红灯就足够幸运了。</strong></li>
</ul>
<h4 id="在盛夏的雅典跑第一个四十二公里">在盛夏的雅典跑第一个四十二公里</h4>
<ul>
<li>从一次失败中汲取教训，运用在下一次机会中。还有能力坚持这种生活方式时，我会一直这样做。</li>
</ul>
<h4 id="即便那时的我有一条长长的马尾辫子">即便那时的我有一条长长的马尾辫子</h4>
<ul>
<li>人总有一日会走下坡路。不管愿意与否，伴随着时间的流逝，肉体总会消亡。一旦肉体消亡，精神也将日暮途穷。此事我心知肚明，却想把那个岔口（即我的活力被毒素击败与凌驾的岔口）向后推迟，哪怕只是一丁半点。</li>
</ul>
<h4 id="已经无人敲桌子，无人扔杯子了">已经无人敲桌子，无人扔杯子了</h4>
<ul>
<li>“我不是人，是一架纯粹的机器，所以什么也无须感觉，唯有向前奔跑。”</li>
<li>“不管奔跑速度降低了多少，我都不能走，这是原则。违背了自己定下的原则，哪怕只有一次，以后就将违背更多的原则，想跑完这场比赛就难上加难了。”</li>
</ul>
<h4 id="纽约的秋日">纽约的秋日</h4>
<ul>
<li>“该做的都做了，怎么胡思乱想也于事无补，只有坐待那一天的到来。”</li>
</ul>
<h4 id="至死都是十八岁">至死都是十八岁</h4>
<ul>
<li>然而人生中，事情的发展不会那么尽遂人意。在我们人生的某个时间点，正希求一个一目了然的结论时，家门口响起的咚咚敲门声，往往来自手拿坏消息的送信人。不说“总是如此”，然而经验之谈，坏消息远比好消息多。</li>
</ul>
<h4 id="至少是跑到了最后">至少是跑到了最后</h4>
<ul>
<li>付出时间是最好的捷径。</li>
<li>假如有我的墓志铭，而且上面的文字可以自己选择，我愿意它是这么写的：</li>
</ul>
<blockquote>
<p>村上春树<br>
作家（兼跑者）<br>
1949-20xx<br>
他至少是跑到了最后</p>
</blockquote>
<h3 id="我的书评">我的书评</h3>
<ul>
<li>“天赋、集中力和耐力”
<ul>
<li>勤勉耐劳，不惜体力。</li>
<li>持之以恒，保持节奏。</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.4.我要快乐，不必正常</title>
    <url>/2020/03/10/2020-4-whyhappywhenyoucouldbenormal/</url>
    <content><![CDATA[<p><strong>摘要</strong>：原文摘录 &amp; 我的书评。| 简介：照自己的意愿活得头破血流，也好过听从别人的安排，虚张声势地过浅薄生活。我在家里住了16年，父亲不在工厂轮班，就在教堂。母亲整夜醒着，终日抑郁。我上学，去教堂，跑进山间，秘密地读书。我自幼便学会隐蔽。藏匿我的心。掩饰我的想法。我母亲不热爱生活。她不信有任何事会使生活变得更好。她曾对我说，宇宙是一个浩瀚的垃圾桶。我想了一会儿之后，问她桶盖是关着还是开着。“关着的，”她说，“没人逃得了。”我就是没法活在一个合上盖子的浩瀚的垃圾桶里。</p>
<a id="more"></a>
<h3 id="原文摘录">原文摘录</h3>
<h4 id="错误的婴儿床">错误的婴儿床</h4>
<ul>
<li>我花了很长时间去学会如何爱—付出爱与接受爱。</li>
<li>人才是问题，你如何爱另一个人？你如何相信另一个人爱你？</li>
</ul>
<h4 id="给所有人的忠告：诞生">给所有人的忠告：诞生</h4>
<ul>
<li>我想要的都切实存在，只要我敢去寻找…</li>
<li>追求快乐</li>
</ul>
<h4 id="太初有道">太初有道</h4>
<ul>
<li>我们总是以为，彻底改变之必需—神迹—在别处，但它往往就在我们身边。有时候它就是我们，是我们自己。</li>
</ul>
<h4 id="家">家</h4>
<ul>
<li>他们会变老，但无法长大。长大需要爱。</li>
<li>你不快乐。事情变得更糟。</li>
<li>我觉得我只是不知道该怎么做。</li>
</ul>
<h4 id="教堂">教堂</h4>
<ul>
<li>但她从未理解，她活着的时候，能量也可以是她自身真正的本质。她无须受困于质量。</li>
</ul>
<h4 id="天启">天启</h4>
<ul>
<li>文特森太太说，“可以正常的话，你为什么要快乐呢？”</li>
</ul>
<h4 id="英国文学A至Z">英国文学A至Z</h4>
<ul>
<li>身份认同与自我定义</li>
<li>烦恼只是被归错了位置的东西</li>
<li>无论对错，就是这条路了，我们在路上。</li>
</ul>
<h4 id="就是这条路">就是这条路</h4>
<ul>
<li>人类意识转向集体责任是真正的进步；我们理解了我们不仅对国旗和国家、对孩子和家庭负有义务，也对彼此负有义务。</li>
</ul>
<h4 id="夜海航行">夜海航行</h4>
<ul>
<li>我说了小时候没人搂抱我们的事。我说的是“我们”，而非“你”。她牵起我的手。她此前从未这么做过；大多时候她走在后面，连珠炮似的讲话。我们俩坐下，哭了。我说：“我们将学会如何去爱。”</li>
</ul>
<h4 id="约定始于过去">约定始于过去</h4>
<ul>
<li>你需要紧紧抓住某个人。某个会紧紧抓住你的人。</li>
<li>我和苏茜坐在房间里。她爱我。我想要接受。我想要好好去爱。我回想着过去两年，以及我如何竭尽全力溶解我那钙化的心灵边缘。</li>
<li>要是我们能早一点做对的事情就好了，不过我们到底还是做了对的事，这很好，让人高兴。</li>
</ul>
<h4 id="奇妙相见">奇妙相见</h4>
<ul>
<li>我同她一样，永远不能接受缩水的生活。她转向内部，我转向外部。</li>
<li>无论有多困难，也要置身于感受中，不要把感受推开。</li>
</ul>
<h4 id="尾声">尾声</h4>
<ul>
<li>我发现自己不喜欢安批评文特森太太。温太太是个怪物，但她是我的怪物。</li>
</ul>
<h3 id="我的书评">我的书评</h3>
<p>虽然都是极端宗教分子的父母与受教育的自己的矛盾故事，<br>
你当像鸟飞往你的山，更多强调教育；<br>
我要快乐，不必正常，更多强调自我意识（爱人与被爱）。<br>
我更喜欢此书，有太多的地方可以探讨了：你是谁？你先天的是什么？你能感受和给予的是什么？你快乐吗？你正常吗？你爱你自己吗？…<br>
遇到自己觉得很难的事情、想不明白的事情，不犯大的错误地前提下，就先勇敢的做吧，然后多看书，或许这些事情在几十年、几百年前就有人经历，且他们给出了自己的答案，我相信你也可以。<br>
最重要的，希望你快乐!</p>
<h3 id="其他">其他</h3>
<ul>
<li>有时间看一下/艾米莉·狄金森/相关。</li>
</ul>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令1.文件处理命令</title>
    <url>/2020/06/02/4-1wenjianchulimingling/</url>
    <content><![CDATA[<p><strong>摘要</strong>: linux常用命令👉目录处理命令(ls, mkdir, cd, pwd, rm, cp, mv)，文件处理命令(touch, cat, more, less, head, tail)和链接命令(ln)。</p>
<a id="more"></a>
<h1>目录处理命令</h1>
<h2 id="ls，list显示"><code>ls</code>，list<a href="https://www.cnblogs.com/bydzhangxiaowei/p/8136335.html" target="_blank" rel="noopener">显示</a></h2>
<ul>
<li><code>ls -a</code> #显示所有文件，包括隐藏文件</li>
<li><code>ls -l</code> #详细信息显示
<ul>
<li><code>-rw-r--r--</code> #共十个字符
<ul>
<li>第一个字符<code>-</code>，表示文件类型。（-二进制文件，d目录，l软链接文件)</li>
<li>后面九个字符<code>rw-r--r--</code>，表示权限。（r可读，w可写，x可执行）分成三部分，分别对应（u所有者，g所属组，o其他人）</li>
</ul>
</li>
</ul>
</li>
<li><code>ls -d</code> #查看目录属性，即显示当前目录本身，而不显示它的文件。</li>
</ul>
<h2 id="mkdir，make-directories创建目录"><code>mkdir</code>，make directories创建目录</h2>
<ul>
<li><code>mkdir zhangsan</code> #创建一个目录</li>
<li><code>mkdir -p lisi/children</code> #创建一个目录及下面的子目录，用到<code>-p</code>，递归创建</li>
</ul>
<h2 id="cd，change-directory切换目录"><code>cd</code>，change directory切换目录</h2>
<ul>
<li><code>cd lisi</code> #后面直接加上想要切换的目录名</li>
<li><code>cd ..</code> #回到上一级目录</li>
</ul>
<h2 id="pwd，Print-working-directory显示当前目录"><code>pwd</code>，Print working directory显示当前目录</h2>
<h2 id="rm-，remove删除"><code>rm</code> ，remove删除</h2>
<ul>
<li><code>rm -r zhangsan/daughter</code> #递归删除
<ul>
<li><code>-r</code>删除目录</li>
<li><code>-f</code>强制执行</li>
<li><code>-rf</code>强制删除目录或文件</li>
</ul>
</li>
</ul>
<h2 id="cp，copy复制"><code>cp</code>，copy复制</h2>
<ul>
<li><code>cp -r lisi/son zhangsan</code> #递归复制</li>
<li><code>cp -r lisi/son zhangsan/daughter</code> #把lisi的son复制到zhangsan下并改名为daughter，即复制的同时改名</li>
</ul>
<h2 id="mv，move移动或剪切"><code>mv</code>，move移动或剪切</h2>
<ul>
<li><code>mv lisi zhangsan</code> #如果lisi和zhangsan都存在，表示把lisi移动到zhangsan下；如果zhangsan不存在，表示把lisi移动到当前目录并改名为zhangsan。</li>
</ul>
<h1>文件处理命令</h1>
<h2 id="touch，创建文件"><code>touch</code>，创建文件</h2>
<ul>
<li><code>touch file1</code> #不同与目录显示蓝色，文件显示的是白色</li>
</ul>
<h2 id="cat，查看文件"><code>cat</code>，查看文件</h2>
<ul>
<li><code>cat file1</code> #查看文件</li>
</ul>
<h2 id="more，分页显示文件内容"><code>more</code>，分页显示文件内容</h2>
<ul>
<li>空格键，翻页</li>
<li>换行键，一页一页往下翻</li>
</ul>
<h2 id="less，分页显示文件内容"><code>less</code>，分页显示文件内容</h2>
<p>可向上翻页</p>
<ul>
<li><code>/</code>，搜索</li>
</ul>
<h2 id="head，查看文件开头的内容"><code>head</code>，查看文件开头的内容</h2>
<ul>
<li><code>head -n file1</code> #不加<code>-n</code>时默认前十行</li>
</ul>
<h2 id="tail，查看文件末尾的内容"><code>tail</code>，查看文件末尾的内容</h2>
<p>同上</p>
<h1>链接命令</h1>
<h2 id="ln，建立链接"><code>ln</code>，建立链接</h2>
<ul>
<li><code>ln file1 zhangsan/file1.hard</code> #创建file1的硬链接到zhangsan
<ul>
<li>相当于复制了该文件过去，其中某一个变化了，另一个同步更新。</li>
<li>源文件删除后，使用不受影响。</li>
</ul>
</li>
<li><code>ln -s file1 zhangsan/file1.soft</code> #创建file1的软链接到zhangsan。
<ul>
<li>软链接类似windows的快捷方式，只是一个源文件的链接指向。标记为<code>lrwxrwxrwx</code>。</li>
<li>软链接是红色的，有一个箭头指向。</li>
<li>源文件删除后，无法使用。</li>
</ul>
</li>
<li><code>ls -i</code> #除了以上差异，也可通过i节点识别软链接和硬链接。</li>
</ul>
<p>学习视频</p>
<blockquote>
<p><a href="https://www.bilibili.com/video/av18156598" target="_blank" rel="noopener">史上最牛的Linux视频课程</a> 👉 P12-15</p>
</blockquote>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.5.我所理解的生活</title>
    <url>/2020/03/10/2020-5-wosuolijiedeshenghuo/</url>
    <content><![CDATA[<p><strong>摘要</strong>: 原文摘录&amp;我的书评。| 三十岁的男人开始系统地思考关于生活的一切，韩寒难得如此诚恳。第一次向读者展示生活中最真实的韩寒。在《我所理解的生活中》，韩寒讨论民主自由、针砭时弊，谈及感情、家庭、偶像，分享个人成长经历，诚恳地剖析自己。收录注明韩三篇，“谈革命”“说民主”“要自由”。在韩寒迄今为止所有作品中，《我所理解的生活》删减幅度最小。三十岁，韩寒争议不少，成绩更多。诚恳之作《我所理解的生活》，韩寒想说的都在这里了。</p>
<a id="more"></a>
<h2 id="原文摘录">原文摘录</h2>
<h3 id="序-我所理解的生活">序 我所理解的生活</h3>
<ul>
<li>我所理解的生活就是除了造谣以外，去造其他一切东西。</li>
<li>我所理解的生活就是做着自己喜欢的事情，养活自己，养活家人。</li>
<li>我所理解的生活就是和自己喜欢的一切在一起。</li>
</ul>
<h3 id="天下势">天下势</h3>
<p><strong>韩三篇</strong></p>
<ul>
<li>我认为中国人对自由有着自己独特的定义，而自由在中国最没有感染力。</li>
</ul>
<p><strong>就要做个臭公知</strong></p>
<ul>
<li>“人类从历史中唯一得到的教训就是人类从历史中从来没有得到过教训”，来自评论。</li>
</ul>
<p><strong>这一代人（2012版）</strong></p>
<ul>
<li>成功之道有很多未必能展开的东西，而且你也不能将自己的狗屎运赠送给观众，所以看着他人如何成功往往无助于自己的成功，但是听着他人如何失败也许能避免自己的失败。</li>
<li>我举目无友，孤独得像只马桶搋子，打开电脑又写不出一个字，因为我的生活积累用完了。</li>
</ul>
<h3 id="国事">国事</h3>
<p><strong>什邡的释放</strong></p>
<ul>
<li>中国的老百姓和小龙虾很像，最能忍最能扛，在什么样的环境下都能生存，虽然有两只钳子，但常被人在背后捅刀，而且也夹不到对方。一有惊吓，第一反应就是往后退。</li>
</ul>
<p><strong>来，带你在长安街上调个头</strong></p>
<ul>
<li>当特权想惠及更多人时，只不过是特权阶级感到威胁以后的自保罢了。承诺他人能得到什么，最终他人可能什么都得不到，只有限制那些承诺者自己的权力，他人才能得到他们本该得到的一切。</li>
</ul>
<p><strong>答台湾记者问</strong></p>
<ul>
<li>不是每件事都能给人生带来什么，人生的时光，总需要去度过。</li>
<li>在做事情的时候，我希望看得远一些；但在过日子的时候，我希望看得近一些。</li>
<li>能这么问的人都没有决心去自由追逐梦想，有决心的人基本都不问别人。</li>
</ul>
<h3 id="家世">家世</h3>
<p><strong>感情就是爱者不疑，疑者不爱</strong></p>
<ul>
<li>床伴易找，旅伴难寻。能一起旅行的女孩子，比只想着要过夜（甚至连夜都不想过）的伴侣珍贵多了。</li>
</ul>
<p><strong>我不讨好任何人</strong></p>
<ul>
<li>不给社会造成负担，不给父母造成负担，有自己生存的本领。</li>
</ul>
<h3 id="我是">我是</h3>
<p><strong>春萍，我做到了</strong></p>
<ul>
<li>你知道你能做到，别人觉得你也许可以做到，那么，少废话，做到再说，其他的怨气都是虚妄。自己没有展露光芒，就不应该怪别人没有眼光。</li>
</ul>
<p><strong>碎片</strong></p>
<ul>
<li>有一个一直都在的人或事物，总是好的。</li>
</ul>
<p><strong>我最终想要的是一个和谐的人生</strong></p>
<ul>
<li>没什么变化，只是突然有一天，我发现个体都不和我玩了，我只好玩组织。</li>
</ul>
<h3 id="跋-写给每一个自己">跋 写给每一个自己</h3>
<ul>
<li>没人能让所有人满意，所以让自己和你中意的人满意就可以了。你所判定的一切，也许就是你自己内心的投影。人生就是一个不断接纳和抛弃的过程。</li>
</ul>
<h2 id="我的书评">我的书评</h2>
<p>书的内容和我所想的差距有点…大，仿佛看了一场口水仗，但我想这书对韩寒自己来说可能领悟很大吧，人贵在“知自己，自我和谐”。年纪轻轻做到这些真的再珍贵不过了。</p>
<h2 id="其他">其他</h2>
<p>想去台湾，摩托环岛。</p>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令3.文件搜索命令</title>
    <url>/2020/06/02/4-3wenjiansousuomingling/</url>
    <content><![CDATA[<p><strong>摘要</strong>:文件搜索命令👉文件搜索命令(find -name/size/type/user/inum/… -a/r -exec/ok {} ;, locate, grep)，路径查找命令(which, whereis)。</p>
<a id="more"></a>
<h1>文件搜索命令</h1>
<h2 id="find"><code>find</code></h2>
<ul>
<li>语法：<code>find [搜索范围] [匹配条件]</code></li>
</ul>
<p>示例：<br>
<strong>根据文件名</strong>:</p>
<ul>
<li><code>find . -name &quot;zhangsan&quot;</code> #在当前目录下搜索zhangsan的文件</li>
<li><code>find . -name &quot;zhangsan*&quot;</code> #在当前目录下搜索以zhangsan开头的文件</li>
<li><code>find . -name &quot;*zhangsan*&quot;</code> #在当前目录下搜索所有包含zhangsan的文件</li>
<li><code>find . -name &quot;zhangsan?&quot;</code> #在当前目录下搜索以zhangsan开头后面还有一位的文件<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A43.%E6%96%87%E4%BB%B6%E6%90%9C%E7%B4%A2%E5%91%BD%E4%BB%A4/findname.jpg" alt="findname1"><br>
<strong>根据文件大小</strong>:</li>
<li><code>find . -size +204800</code> #204800是数据块。linux中一个数据块是512字节，即0.5k。如果要查找大于100M的文件，1M等于1024K，100M即102400K，即204800个数据块。+号表示大于，—号表示小于，不写表示等于。<br>
<strong>根据所有者</strong>:</li>
<li><code>find . user qiime2</code> #把属于所有者qiime2的文件找出来。<br>
<strong>根据时间属性</strong>:</li>
<li><code>find . -cmin -5</code> #查找5分钟内被修改过属性的文件和目录。<code>cmin</code>表示文件属性即<code>ls -l</code>列出来的内容，<code>amin</code>表示访问时间，<code>mmin</code>表示文件内容。<br>
<strong>综合使用，连接选项</strong>:</li>
<li><code>find . -cmin -5 -a -name &quot;zhangsan?&quot;</code> #<code>a</code>即and，表示两个条件同时满足；<code>o</code>即or，表示两个条件满足任意一个即可。<br>
<strong>按照文件类型</strong>:</li>
<li><code>find . -name &quot;*zhangsan*&quot; -a -type d</code> #<code>-type d</code>表示按照文件类型查找，<code>d</code>表示目录，<code>f</code>表示文件，<code>l</code>表示软链接文件。<br>
<strong>对搜索结果执行操作</strong>:<br>
<code>-exec/-ok   {} \;</code></li>
<li><code>find . -name &quot;*zhangsan*&quot; -a -type f -exec rm -r &quot;zhangsan&quot; {} \;</code> #查找所有包含zhangsan的文件并把其删除。</li>
<li><code>-exec</code>是直接执行，<code>-ok</code>是执行之前再确认一下。<br>
<strong>根据i结点</strong>:</li>
<li><code>find . -inum 59510705 -exec rm -r {} \;</code></li>
<li><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A43.%E6%96%87%E4%BB%B6%E6%90%9C%E7%B4%A2%E5%91%BD%E4%BB%A4/findinum.jpg" alt="findinum"></li>
</ul>
<h2 id="locate"><code>locate</code></h2>
<p>相对<code>find</code>查找速度快；<code>find</code>是实时查找，<code>locate</code>依赖于我们自己的资料库，新建的文件需要更新资料库<code>updatedb</code>之后使用<code>locate</code>才能找到。</p>
<ul>
<li>安装：<code>apt install mlocate</code>,</li>
<li>更新：<code>sudo updatedb</code></li>
<li>语法：<code>locate file.name</code></li>
<li>补充：<code>locate -i file.name</code> 查找时对文件名不区分大小写</li>
</ul>
<h2 id="grep"><code>grep</code></h2>
<ul>
<li><code>grep 关键词 文件名</code> 在文件中查找某个关键词，之后会把这个关键词所在的行列出来。补充：<code>grep -i 关键词 文件名</code> 查找时对文件名不区分大小写</li>
<li><code>grep -v ^# 文件名</code> 其中<code>-v</code>表示排除指定字符串，本条命令中表示排除句首以#开头的行，即注释行。</li>
</ul>
<h2 id="which"><code>which</code></h2>
<p>列出绝对路径以及别名<br>
使用的是ubuntu，只有绝对路径，没有别名。</p>
<h2 id="whereis"><code>whereis</code></h2>
<p>列出绝对路径以及帮助文档所在的路径</p>
<p>学习视频<br>
<a href="https://www.bilibili.com/video/av18156598/?p=19" target="_blank" rel="noopener">史上最牛的Linux视频课程</a>👉 P18-19</p>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.7.练习一个人：当我开始爱自己</title>
    <url>/2020/03/17/2020-7-lainxiyigeren/</url>
    <content><![CDATA[<p><strong>摘要</strong>：原文摘录 &amp; 个人感想。| 简介：独处时一种选择，更是一种能力。孤独原本就是爱与人生的常态。无论单身与否，都不需等别人来成全自己。《练习一个人：当我开始爱自己》记录了作者陶立夏离开熟悉的生活，肆意散漫独居的一年。一个人去了曾经计划的双人游，才明白等待和依赖让自己错过多少美好。放下光鲜安稳的身份，不再计算月薪年薪；安静地投入到喜爱的事物里，却比任何时候更觉坦然。原来爱自己不必假于外物。孤独并不值得歌颂，该歌颂的是接受人生这一真相的自己。练习一个人，发现等待和依靠徒有虚名。自此不会陷于厌倦，也不再责怪生活的遗憾。</p>
<a id="more"></a>
<h3 id="原文摘录">原文摘录</h3>
<h4 id="小宇宙">小宇宙</h4>
<ul>
<li>有个德语单词是Fernweh，无法翻译成对应的中文词语，意思是迫切想要去远方，对从未去过的陌生之地心怀乡愁般的痛楚眷恋。所以我就到处周游。</li>
<li>我也曾以为有人等待的牵挂会是我想要的幸福，却逐渐知道那只是我不切实际的想象。</li>
<li>享受孤独却不觉寂寞，时常厌弃生活但对生活始终赤城。</li>
</ul>
<h4 id="你想要的自由">你想要的自由</h4>
<ul>
<li>我自此再不问自己生命的意义是什么，就像我总在最后一刻才知自己要去向哪里。‘向往’是多么美好的事，‘得到’根本无法与之相提并论。我走过太多弯路，但人生要扼腕的事那么多，那实在算不上什么。</li>
</ul>
<h4 id="山居岁月">山居岁月</h4>
<ul>
<li>此刻的你还好吗，是在过着自己想要的生活吗？</li>
</ul>
<h4 id="有信">有信</h4>
<ul>
<li>我们并不需要成为最优秀最出色的人，只要遇见一个懂你的人就够了。问题在于，很多人错以为后者更加容易。</li>
<li>If equal affection cannot be, let the more loving one be me. 若深情不能对等，愿爱得更多的人是我。</li>
</ul>
<h4 id="一个旅人">一个旅人</h4>
<ul>
<li>‘We fly a little every day, we die a little as well.’ 我们每天飞远一点，我们每天死掉一些。</li>
<li>‘一个理想主义者，应该听从自己的心。’</li>
<li>会议结束我给戴尼尔回短信，问他：“走那么远，累不累？” 他答：“人生那么长的旅程，一走几十年，怕的不是累，是厌倦。”</li>
</ul>
<h4 id="美丽的人">美丽的人</h4>
<ul>
<li>“好好活着。”</li>
<li>“不要难过，我已经很好地活过了。”</li>
</ul>
<h4 id="礼物">礼物</h4>
<ul>
<li>“未来藏在迷雾中，叫人看来胆怯。但当你踏足其中，就会云开雾散。”</li>
</ul>
<h4 id="梧桐花">梧桐花</h4>
<ul>
<li>你还好吗？我也，已经在这人世飘零很久了。</li>
<li>世事轻易，无不可为。只要你，愿意承担。</li>
</ul>
<h4 id="蜗牛">蜗牛</h4>
<ul>
<li>生死由命，若遇意外，就地埋葬。</li>
<li>原来不是所有旅行都有归期，只是我们并不会认真细想这件事，虽然我们总说人生是一次旅行。</li>
</ul>
<h4 id="情书其二">情书其二</h4>
<ul>
<li>少怀想过去，多开拓新的生活。</li>
</ul>
<h4 id="情书其三">情书其三</h4>
<ul>
<li>或许我们都会有那么一刻，为了告别一个人独自远走。</li>
</ul>
<h4 id="薄幸">薄幸</h4>
<ul>
<li>Time cures all.</li>
<li>曾以为那样琐碎的生活是诅咒，到后来才明白是恩赐。</li>
</ul>
<h4 id="病了">病了</h4>
<ul>
<li>你没有事，只是会，一直痛。</li>
</ul>
<h4 id="驿路梨花">驿路梨花</h4>
<ul>
<li>浮生若梦，须知尽欢。</li>
</ul>
<h4 id="长日将尽">长日将尽</h4>
<ul>
<li>中国人说长日将尽，这个英国男人说watching the day die。</li>
</ul>
<h4 id="遥望">遥望</h4>
<ul>
<li>世间本来就有很多没有答案的问题，生活的面目不正是如此吗？</li>
</ul>
<h4 id="双鱼座男人">双鱼座男人</h4>
<ul>
<li>人是有欠有还，才能相逢。</li>
</ul>
<h4 id="射手座男人—住了一辈子酒店的男人">射手座男人—住了一辈子酒店的男人</h4>
<ul>
<li>这不是一个爱情故事，却是一个关于爱的故事。事关那些为爱屈服的人，以及他们为此付出的代价。</li>
<li>First you dream, then you die. So here’s to us, a short life, but an exciting one. 先梦想后死，这就是我们，短暂但精彩的人生。</li>
</ul>
<h4 id="白羊座女人—暗涌">白羊座女人—暗涌</h4>
<ul>
<li>在她和约瑟夫·康奈尔的合影中，康奈尔的双手紧紧扣住她的颈项，而她驯服得像只鸽子，因为他就是边界与依凭。</li>
</ul>
<h4 id="爱是捕风">爱是捕风</h4>
<ul>
<li>从不爱与忘怀之中，才能得到自由。</li>
</ul>
<h4 id="结尾：命运的指纹">结尾：命运的指纹</h4>
<ul>
<li>这一路就是这样，仿佛万水千山走遍，我只是看它一眼，然后转身道别，原路返回。</li>
</ul>
<h3 id="个人感想">个人感想</h3>
<p>二零年之前还是在一个地方待不住的人，迫切想要去很多未曾去过的地方。现在想去的远方近在咫尺，反而不想动了，追逐的东西成了日常的时候，竟然想要一个人和一个家。我想要的幸福是‘安心的不会走的喜欢的人等待的牵挂’。<br>
现在不想恋爱，想一步到位，想找一个坚定地爱我我也坚定地爱着的人，我不需要努力付出什么，你也无需，只要有爱，有一点小小的情趣，我们便可以一起度过余生了。可是不是的，爱情会突如其来，当感觉到‘I fell in love’的时候，我竟然觉得我完了。我还做不到平静的过完自己的人生，这次不知道会不会出发，会走多远，又会不会是一个‘坑’。但是我多么希望，我可以用力的去表达爱，用力的让你感受到‘这个人曾使我感到很快乐’。<br>
朋友说，‘你想要的太多’。其实，我只是还不知道自己真正想要的是什么。而探索的过程，我总是抓着绳子去过河，我怕溺水，而我的游泳能力又不能使我上岸。<br>
或许，我该抓的不是绳子，而是增强游泳技能。<br>
“浮生若梦，须知尽欢。”<br>
“世事轻易，无不可为。只要你，愿意承担。”</p>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令2.权限管理命令</title>
    <url>/2020/06/02/4-2quanxianguanlimingling/</url>
    <content><![CDATA[<p><strong>摘要</strong>:权限管理命令👉改变文件或目录权限(chmod)，改变文件目录的所有者(chown)，显示、设置文件和目录的缺省权限(umask)。</p>
<a id="more"></a>
<h1>权限管理命令</h1>
<h2 id="chmod"><code>chmod</code></h2>
<p>1.改变文件或目录权限，change the permissions mode of a file<br>
2.语法（两种）</p>
<ul>
<li><code>chmod [{ugoa}{+-=}{rwx}] [文件或目录]</code><br>
其中，a表示所有人。
<ul>
<li>示例：<code>chmod g-w zhangsan</code></li>
</ul>
</li>
<li><code>chmod [mode=421] [文件或目录]</code><br>
r/w/x对应的数字4/2/1，可以通过数字及数字和进行控制。
<ul>
<li>示例：<code>chmod 777 zhangsan</code></li>
</ul>
</li>
<li>删除一个文件的前提是对它的目录有w权限</li>
</ul>
<h2 id="chown"><code>chown</code></h2>
<p>1.改变文件或目录的所有者，change file ownership<br>
2.语法<br>
<code>chown [用户] [文件或目录]</code></p>
<ul>
<li>示例：<code>chown lisi zhangsan</code></li>
<li>只有管理员root可以改变文件的所有者</li>
</ul>
<h2 id="umask"><code>umask</code></h2>
<p>1.显示、设置文件的缺省权限，the user file-creation mask<br>
2.语法<br>
<code>umask -S</code> #以rwx形式显示新建文件的缺省权限</p>
<ul>
<li>需要注意的是新建的<strong>文件</strong>都不具有x权限
<ul>
<li>示例1：<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A42.%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/umask.jpg" alt="umask"></li>
</ul>
</li>
<li><code>umask [数字]</code>修改缺省文件的权限<br>
umask的000对应的是目录的777，可以理解为umask是从权限中拿走的位。文件的话就是在目录的基础上在去掉可执行x。<br>
对照表
<table>
<thead>
<tr>
<th style="text-align:left">umask</th>
<th style="text-align:left">目录</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">0</td>
<td style="text-align:left">7</td>
</tr>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">6</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">5</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">3</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">2</td>
</tr>
<tr>
<td style="text-align:left">6</td>
<td style="text-align:left">1</td>
</tr>
<tr>
<td style="text-align:left">7</td>
<td style="text-align:left">0</td>
</tr>
</tbody>
</table>
<ul>
<li>示例2：<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A42.%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/umask1.jpg" alt="umask1"></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.9.我是个年轻人，我心情不太好</title>
    <url>/2020/03/20/2020-9-woshigenianqingrenwoxinqingbutaihao/</url>
    <content><![CDATA[<p><strong>摘要</strong>：原文摘录 &amp; 我的书评。| 简介：我25岁，读着一个硕士，我被时间、空间、意义这些事情烦扰着。我知道的东西多得难以置信，我知道名字，年份。数以百计。我知道谁第一个上的珠穆朗玛峰，我知道谁导演了那些美国最蹩脚的肥皂剧，我知道当空气遇到机翼时，会在机翼上表面形成低气压，就是这玩意儿让飞机飞了起来。我知道亚里士多德讲的话是啥意思。我知道时间在太阳上会走得慢一点，我知道的实在太多了。我拿他们干吗呢？我当然可以去参加“杰帕迪知识竞赛”，奖品是希腊游。双人的。但是我没有女朋友。我只能一个人去。但是我去希腊干什么呢？没有理由相信我在那儿会更开心。要是我能有一种非常靠谱的感觉，觉得一切都会好起来，那该多好。</p>
<a id="more"></a>
<h3 id="原文摘录">原文摘录</h3>
<h4 id="大师">大师</h4>
<ul>
<li>有点禅的意思。只要是求索就永远无法达成。只有在不求索的时候才能达成。</li>
</ul>
<h4 id="怕">怕</h4>
<ul>
<li>把握生活</li>
</ul>
<h4 id="形式">形式</h4>
<ul>
<li>哥哥说是形式，他说内容得我自己创造。</li>
</ul>
<h4 id="1-800-公园">1-800-公园</h4>
<ul>
<li>纽约真大。给我的感觉有点像宇宙给我的感觉，我感到毫无责任。</li>
<li>他问我有没有想过要少思考点东西。哥哥说我多少应该试着做些只需要体验的事情。</li>
</ul>
<h4 id="近">近</h4>
<ul>
<li>你不能既得到一个女孩又不和她在一起。</li>
</ul>
<h4 id="数（复数）">数（复数）</h4>
<ul>
<li>看到了许多东西，我思考也学会了停止思考。最棒的就是我学会了无忧无虑地放空自己的头脑。</li>
</ul>
<h3 id="我的书评">我的书评</h3>
<p>作者不开心时候的碎碎念。我也会不开心，也会碎碎念，后来碎碎念都很少了，不知道为什么。现在开始捡回来，不开心还是会不开心，但也会开心。慢慢都会好起来的，不是吗。<br>
摘录一些这里那里看到的片段：</p>
<ul>
<li>“我的年龄焦虑其实本质上是因为知道自己并没有足够与年龄相匹配的积累，包括能力、阅历、储蓄等各个方面，而不是衰老本身。” @姚一十</li>
<li>“人和人的相遇是很珍贵的。你出现在别人的生命里，要像一份礼物。” 摘自书评BY花厘</li>
</ul>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux_5.文件编辑器vim</title>
    <url>/2020/06/02/5vimchangyongcaozuoheshiyongjiqiao/</url>
    <content><![CDATA[<p><strong>摘要</strong>: Vim常用操作👉Vim工作模式：命令模式(<code>vi filename</code>)，插入模式(<code>a/i/o</code>)，编辑模式(定位：<code>:set no</code>，<code>: n</code>；删除：<code>x/nx</code>,<code>dd/ndd</code>；复制和剪切：<code>yy/dd p/P</code>；替换和取消：<code>r/R u</code>；搜索和搜索替换：<code>/string</code>，<code>n</code>，<code>%s or n1,n2s/old_string/new_string/g</code>)，保存和退出(<code>:wq</code>，<code>ZZ</code>，<code>:q!</code>)。Vim使用技巧👉复制文件内容(<code>:r 文件名</code>)，导入命令执行结果(<code>:r !命令</code>)，定义快捷键(<code>:map 快捷键 触发命令</code>)，连续行注释(<code>:n1,n2s/^/#/g</code>)，替换(<code>:ab mymail nordicorge@hotmail.com</code>)。设置配置文件(<code>vi /home/qiime2/.vimrc</code>)👉在<code>.vimrc</code>中设置好。</p>
<a id="more"></a>
<h1>Vim常用操作</h1>
<h2 id="Vim工作模式">Vim工作模式</h2>
<h3 id="命令模式-进入，vi-filename">命令模式: 进入，<code>vi filename</code></h3>
<h3 id="插入模式-i-a-o开始输入内容，esc键退出。">插入模式: <code>i/a/o</code>开始输入内容，<code>esc键</code>退出。</h3>
<ul>
<li><code>a</code>光标所在字符后插入</li>
<li><code>A</code>光标所在行行尾插入</li>
<li><code>i</code>光标所在字符前插入</li>
<li><code>I</code>光标所在行行首插入</li>
<li><code>o</code>光标下插入新行</li>
<li><code>O</code>光标上插入新行</li>
</ul>
<h3 id="编辑模式-开始输入命令，以回车结束运行">编辑模式: <code>:</code>开始输入命令，以回车结束运行</h3>
<ul>
<li>定位命令
<ul>
<li><code>: set nu</code>设置行号</li>
<li><code>: set nonu</code>取消行号</li>
<li><code>: n</code>到第n行</li>
<li><code>: $</code>移至行尾</li>
<li><code>: 0</code>移至行首</li>
</ul>
</li>
<li>删除命令
<ul>
<li>按<code>x键</code>删除光标所在处字符</li>
<li>按<code>n(数字)+x键</code>删除光标所在处后n个字符</li>
<li>按<code>n(数字)+dd键</code>删除光标所在行，ndd删除n行</li>
<li>按<code>dG</code>删除光标所在行到文件末尾内容</li>
<li>按<code>D</code>删除光标所在行到行尾内容</li>
<li>按<code>: n1,n2d</code>删除指定范围的行,(n1,n2)表示n2及之前的行都删除。</li>
</ul>
</li>
<li>复制和剪切命令
<ul>
<li>按<code>yy</code>复制当前行</li>
<li>按<code>nyy</code>复制当前以下n行</li>
<li>按<code>dd</code>剪切当前行</li>
<li>按<code>ndd</code>剪切当前以下n行</li>
<li>按<code>p</code>和<code>P</code>粘贴在当前光标所在行下或行上</li>
</ul>
</li>
<li>替换和取消命令
<ul>
<li>按<code>r</code>取消光标所在处字符</li>
<li>按<code>R</code>从光标所在处开始替换字符，按<code>esc键</code>结束</li>
<li>按<code>u</code>取消上一步操作</li>
</ul>
</li>
<li>搜索和搜索替换命令
<ul>
<li>按<code>/string</code>搜索指定字符串</li>
<li>按<code>: set ic</code>搜索时忽略大小写；按<code>: set noic</code>搜索时不忽略大小写</li>
<li>按<code>n键</code>搜索指定字符串的下一个出现位置</li>
<li>按<code>: %s/old_string/new_string/g</code>全文替换指定字符串</li>
<li>按<code>: n1,n2s/old_string/new_string/g</code>在一定范围内替换指定字符串</li>
</ul>
</li>
</ul>
<h2 id="保存和退出">保存和退出</h2>
<ul>
<li>按<code>:w</code>保存修改</li>
<li>按<code>:w new_filename</code>另存为指定文件</li>
<li>按<code>:wq</code>保存修改并退出</li>
<li>按<code>ZZ</code>快捷键，保存修改并退出</li>
<li>按<code>:q!</code>不保存修改退出</li>
<li>按<code>:wq!</code>保存修改并退出（文件所有者及root可使用）</li>
</ul>
<h1>Vim使用技巧</h1>
<h2 id="复制文件内容">复制文件内容</h2>
<p>把“文件名”中的内容复制到当前文件中</p>
<ul>
<li>用法：<code>:r 文件名</code></li>
<li>示例：<code>:r /home/qiime2/lisi</code></li>
</ul>
<h2 id="导入命令执行结果">导入命令执行结果</h2>
<p>直接把命令执行的结果导入到当前的文件中</p>
<ul>
<li>用法：<code>:r !命令</code></li>
<li>示例：<code>:r !date</code></li>
</ul>
<h2 id="定义快捷键">定义快捷键</h2>
<ul>
<li>用法：<code>:map 快捷键 触发命令</code></li>
<li>示例：<code>:map ^P I#&lt;ESC&gt;</code>，表示快捷键Ctrl+V+P代表跳到光标所在行的行首加一个#号之后退出。<code>:map ^B 0x</code>，表示快捷键Ctrl+V+B代表跳到光标所在行的行首然后删掉第一个字符。</li>
</ul>
<h2 id="连续行注释">连续行注释</h2>
<p>示例</p>
<ul>
<li><code>:n1,n2s/^/#/g</code>在n1到n4行的行首加上#</li>
<li><code>:n1,n2s/#//g</code>将n1到n4行的#替换为空</li>
<li><code>:n1,n2s/^#//g</code>将n1到n4行行首的#替换为空</li>
</ul>
<h2 id="替换">替换</h2>
<p>示例</p>
<ul>
<li><code>:ab mymail nordicorge@hotmail.com</code>表示输入mymail后回车显示的是nordicorge@hotmail.com</li>
</ul>
<h2 id="设置配置文件">设置配置文件</h2>
<p>配置文件一般放在根目录或访客的目录下，文件名为<code>.vimrc</code>,只有在配置文件中设置好了，再创建文件的时候，输入快捷键或替换等才会统一。</p>
<ul>
<li>用法：<code>vi /root/.vimrc</code>或<code>vi /home/qiime2/.vimrc</code></li>
<li>用法：<code>.vimrc</code>中定义内容时不加冒号:，只写后面的内容。</li>
</ul>
<p>学习视频</p>
<blockquote>
<p><a href="https://www.bilibili.com/video/av18156598/?p=25" target="_blank" rel="noopener">史上最牛的Linux视频课程</a>👉P25-26</p>
</blockquote>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>2020影视清单</title>
    <url>/2020/03/14/MovieList/</url>
    <content><![CDATA[<p><strong>可看：</strong> <strong>电视剧：</strong> 禁忌女孩 2018；恶之花 2020；再次十八岁 2020| <strong>电影：</strong> Nina 2018；误杀瞒天记 2015；调音师 2018；夺冠 2020| <strong>综艺：</strong> 中国有嘻哈GAI部分 2017；脱口秀大会第三季杨笠李雪琴的段子 2020</p>
<a id="more"></a>
<p><em>NOTE</em><br>
★★★★及以上，都值得再看一遍。<strong>片名</strong> 加粗的是感觉比较惊艳的。</p>
<h3 id="电视剧">电视剧</h3>
<table>
<thead>
<tr>
<th style="text-align:left">序号</th>
<th style="text-align:left">评分</th>
<th style="text-align:left">片名</th>
<th style="text-align:left">国家</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">语言</th>
<th style="text-align:left">主演</th>
<th style="text-align:left">播出时间</th>
<th style="text-align:left">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left">李尸朝鲜第二季</td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">古装宫廷/权谋/丧尸</td>
<td style="text-align:left">普通话[译]</td>
<td style="text-align:left">朱智勋、裴斗娜</td>
<td style="text-align:left">2020.01.13</td>
<td style="text-align:left">丧尸</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">拯救少年犯</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">犯罪/教育</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">十个故事</td>
<td style="text-align:left">2002.02</td>
<td style="text-align:left">童年阴影</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">杀死伊芙第三季</td>
<td style="text-align:left">美国/英国</td>
<td style="text-align:left">剧情/惊悚</td>
<td style="text-align:left">中英语[译]</td>
<td style="text-align:left">Jodie Comer &amp; Sandra Oh</td>
<td style="text-align:left">2020.04.12</td>
<td style="text-align:left">ep1</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left"><strong>禁忌女孩</strong></td>
<td style="text-align:left">泰国</td>
<td style="text-align:left">剧情/惊悚</td>
<td style="text-align:left">泰语</td>
<td style="text-align:left">Chicha Amatayakul</td>
<td style="text-align:left">2018.08</td>
<td style="text-align:left">题材; 1-8集</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">萌妃驾到</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">喜剧</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">金晨、汪东城</td>
<td style="text-align:left">2018</td>
<td style="text-align:left">金晨好看</td>
</tr>
<tr>
<td style="text-align:left">6</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">亢奋</td>
<td style="text-align:left">美国</td>
<td style="text-align:left">剧情/悬疑</td>
<td style="text-align:left">英语</td>
<td style="text-align:left">Zendaya &amp; Hunter Schafer</td>
<td style="text-align:left">2019.06.16</td>
<td style="text-align:left">Rules</td>
</tr>
<tr>
<td style="text-align:left">7</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">三十而已</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">都市/情感</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">江疏影、童瑶、毛晓彤</td>
<td style="text-align:left">2020.07.17</td>
<td style="text-align:left">三十岁</td>
</tr>
<tr>
<td style="text-align:left">8</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">以家人之名</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">剧情/家庭</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">谭松韵、宋威龙、张新成</td>
<td style="text-align:left">2020.08.10</td>
<td style="text-align:left">整体还行</td>
</tr>
<tr>
<td style="text-align:left">9</td>
<td style="text-align:left">★★★★★</td>
<td style="text-align:left"><strong>恶之花</strong></td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">剧情</td>
<td style="text-align:left">韩语/中文[译]</td>
<td style="text-align:left">李准基、文彩元</td>
<td style="text-align:left">2020.07.29</td>
<td style="text-align:left">剧情</td>
</tr>
<tr>
<td style="text-align:left">10</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">人间课堂</td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">剧情/犯罪</td>
<td style="text-align:left">韩语/中文[译]</td>
<td style="text-align:left">金东希、朴柱炫</td>
<td style="text-align:left">2020.04.29</td>
<td style="text-align:left">青少年犯罪</td>
</tr>
<tr>
<td style="text-align:left">11</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">传闻中的陈芊芊</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">古装/甜宠/轻喜</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">赵露思、丁禹兮</td>
<td style="text-align:left">2020.05.18</td>
<td style="text-align:left">露思可爱</td>
</tr>
<tr>
<td style="text-align:left">12</td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left">再次十八岁</td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">穿越/现代</td>
<td style="text-align:left">韩语/中文[译]</td>
<td style="text-align:left">金荷娜、李到晛</td>
<td style="text-align:left">2020.09.07</td>
<td style="text-align:left">题材不错</td>
</tr>
<tr>
<td style="text-align:left">13</td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left">Queen’s Gambit</td>
<td style="text-align:left">美国</td>
<td style="text-align:left">剧情</td>
<td style="text-align:left">英文/中文[译]</td>
<td style="text-align:left">Anya Taylor-Joy</td>
<td style="text-align:left">2020.10.23</td>
<td style="text-align:left">成长</td>
</tr>
<tr>
<td style="text-align:left">14</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">哲仁王后</td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">古装/奇幻/爱情/喜剧</td>
<td style="text-align:left">韩语/中文[译]</td>
<td style="text-align:left">申惠善</td>
<td style="text-align:left">2020.12.12</td>
<td style="text-align:left">女主可以的</td>
</tr>
<tr>
<td style="text-align:left">15</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">加油吧威基基</td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">喜剧</td>
<td style="text-align:left">韩语/中文[译]</td>
<td style="text-align:left">金正贤、李伊庚等</td>
<td style="text-align:left">2018.02.05</td>
<td style="text-align:left">看到胡子的片段才看的</td>
</tr>
<tr>
<td style="text-align:left">16</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">我才不要和你做朋友呢</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">奇幻/爱情/校园/喜剧</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">庄达菲等</td>
<td style="text-align:left">2020.05.19</td>
<td style="text-align:left">校园轻喜剧</td>
</tr>
</tbody>
</table>
<h3 id="电影">电影</h3>
<table>
<thead>
<tr>
<th style="text-align:left">序号</th>
<th style="text-align:left">评分</th>
<th style="text-align:left">片名</th>
<th style="text-align:left">国家</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">语言</th>
<th style="text-align:left">主演</th>
<th style="text-align:left">上映日期</th>
<th style="text-align:left">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left"><strong>妮娜</strong></td>
<td style="text-align:left">波兰</td>
<td style="text-align:left">剧情/同性/爱情</td>
<td style="text-align:left">英语[译]</td>
<td style="text-align:left">Julia Kijowska, Eliza Rycembel</td>
<td style="text-align:left">2018.01.28</td>
<td style="text-align:left">Nina &amp; Magda</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">燃烧女子的肖像</td>
<td style="text-align:left">法国</td>
<td style="text-align:left">剧情/同性/历史</td>
<td style="text-align:left">英语[译]</td>
<td style="text-align:left">Noémie Merlant, Adèle Haenel</td>
<td style="text-align:left">2019.09.18</td>
<td style="text-align:left">画面构图</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">隐形人</td>
<td style="text-align:left">澳大利亚/美国/加拿大/英国</td>
<td style="text-align:left">科幻/惊悚/恐怖</td>
<td style="text-align:left">中英双语[译]</td>
<td style="text-align:left">Elisabeth Moss</td>
<td style="text-align:left">2020.01.28</td>
<td style="text-align:left">女主戏，故事不行</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">你能原谅我吗?</td>
<td style="text-align:left">美国</td>
<td style="text-align:left">剧情/传记</td>
<td style="text-align:left">中英语[译]</td>
<td style="text-align:left">Melissa McCarthy</td>
<td style="text-align:left">2018.10.19</td>
<td style="text-align:left">孤僻的中年人的生活</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">★★★★★</td>
<td style="text-align:left"><strong>误杀瞒天记</strong></td>
<td style="text-align:left">印度</td>
<td style="text-align:left">剧情/悬疑/犯罪</td>
<td style="text-align:left">中文[译] 印地语</td>
<td style="text-align:left">Ajay Devgan</td>
<td style="text-align:left">2015.07.31</td>
<td style="text-align:left">编剧高能</td>
</tr>
<tr>
<td style="text-align:left">6</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">真心半解</td>
<td style="text-align:left">美国</td>
<td style="text-align:left">喜剧/爱情/同性</td>
<td style="text-align:left">英语</td>
<td style="text-align:left">Leah Lewis, Alexxis Lemire</td>
<td style="text-align:left">2020.5.01</td>
<td style="text-align:left">短信的暧昧；男一可爱</td>
</tr>
<tr>
<td style="text-align:left">7</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">悲伤逆流成河</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">青春/校园</td>
<td style="text-align:left">中文</td>
<td style="text-align:left">任敏，辛云来</td>
<td style="text-align:left">2018.09.12</td>
<td style="text-align:left">任敏灵气</td>
</tr>
<tr>
<td style="text-align:left">8</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">空房间</td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">爱情/剧情</td>
<td style="text-align:left">中文[译] 韩语</td>
<td style="text-align:left">李丞涓，在熙</td>
<td style="text-align:left">2004.10.15</td>
<td style="text-align:left">金基德</td>
</tr>
<tr>
<td style="text-align:left">9</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">永恒</td>
<td style="text-align:left">泰国</td>
<td style="text-align:left">爱情</td>
<td style="text-align:left">中文[译] 泰语/英语</td>
<td style="text-align:left">Ananda Everingham, Chermarn Boonyasak</td>
<td style="text-align:left">2010.09.16</td>
<td style="text-align:left">泰国</td>
</tr>
<tr>
<td style="text-align:left">10</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">跳出去</td>
<td style="text-align:left">中国香港</td>
<td style="text-align:left">歌舞/喜剧</td>
<td style="text-align:left">中文</td>
<td style="text-align:left">张雨绮</td>
<td style="text-align:left">2009.12.3</td>
<td style="text-align:left">张雨绮</td>
</tr>
<tr>
<td style="text-align:left">11</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">红海行动</td>
<td style="text-align:left">中国大陆</td>
<td style="text-align:left">动作/剧情/战争</td>
<td style="text-align:left">中文</td>
<td style="text-align:left">张译，等</td>
<td style="text-align:left">2018.2.16</td>
<td style="text-align:left">动作片</td>
</tr>
<tr>
<td style="text-align:left">12</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">深海狂鲨2</td>
<td style="text-align:left">美国/南非</td>
<td style="text-align:left">动作/恐怖/科幻</td>
<td style="text-align:left">英语</td>
<td style="text-align:left">Misty Calhoun</td>
<td style="text-align:left">2018</td>
<td style="text-align:left">鲨鱼实验</td>
</tr>
<tr>
<td style="text-align:left">13</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">釜山行</td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">丧尸、灾难</td>
<td style="text-align:left">中文[译]</td>
<td style="text-align:left">孔侑，郑有美</td>
<td style="text-align:left">2016.07.20</td>
<td style="text-align:left">丧尸</td>
</tr>
<tr>
<td style="text-align:left">14</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">受益人</td>
<td style="text-align:left">中国大陆</td>
<td style="text-align:left">剧情/喜剧/爱情</td>
<td style="text-align:left">中文</td>
<td style="text-align:left">大鹏，柳岩</td>
<td style="text-align:left">2019.11.08</td>
<td style="text-align:left">两人都挺好</td>
</tr>
<tr>
<td style="text-align:left">15</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">流感</td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">剧情/冒险/惊悚</td>
<td style="text-align:left">中文[译]</td>
<td style="text-align:left">张赫，秀爱</td>
<td style="text-align:left">2013.08.14</td>
<td style="text-align:left">灾难片</td>
</tr>
<tr>
<td style="text-align:left">16</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">穿制服的姑娘</td>
<td style="text-align:left">西德/法国</td>
<td style="text-align:left">剧情</td>
<td style="text-align:left">德语/英语[译]</td>
<td style="text-align:left">Romy Schneider, Lilli Palmer</td>
<td style="text-align:left">1958.08.28</td>
<td style="text-align:left">饭制剪辑配乐</td>
</tr>
<tr>
<td style="text-align:left">17</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">夏日国度</td>
<td style="text-align:left">英国</td>
<td style="text-align:left">剧情/同性/战争</td>
<td style="text-align:left">中文[译]</td>
<td style="text-align:left">Gemma Arterton</td>
<td style="text-align:left">2020.07.24</td>
<td style="text-align:left">女主的生活方式</td>
</tr>
<tr>
<td style="text-align:left">18</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">暴裂无声</td>
<td style="text-align:left">中国大陆</td>
<td style="text-align:left">犯罪/嫌疑/剧情</td>
<td style="text-align:left">中文</td>
<td style="text-align:left">宋洋</td>
<td style="text-align:left">2017.07</td>
<td style="text-align:left">现实向</td>
</tr>
<tr>
<td style="text-align:left">19</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">印度合伙人</td>
<td style="text-align:left">印度</td>
<td style="text-align:left">剧情/喜剧/爱情</td>
<td style="text-align:left">北印度语/中文[译]</td>
<td style="text-align:left">Akshay Kumar</td>
<td style="text-align:left">2018.01.26</td>
<td style="text-align:left">印度的卫生巾革命</td>
</tr>
<tr>
<td style="text-align:left">20</td>
<td style="text-align:left">★★★★★</td>
<td style="text-align:left"><strong>调音师</strong></td>
<td style="text-align:left">印度</td>
<td style="text-align:left">悬疑/犯罪/喜剧</td>
<td style="text-align:left">印地语/中文[译]</td>
<td style="text-align:left">Ayushmann Khurrana, Tabassum Hashmi</td>
<td style="text-align:left">2018.10.05</td>
<td style="text-align:left">都很好</td>
</tr>
<tr>
<td style="text-align:left">21</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">法医追凶</td>
<td style="text-align:left">印度</td>
<td style="text-align:left">悬疑/惊悚/犯罪</td>
<td style="text-align:left">马拉雅拉姆语/中文[译]</td>
<td style="text-align:left">托维诺·托马斯、玛玛塔·莫汉达斯</td>
<td style="text-align:left">2020.02.28</td>
<td style="text-align:left">逻辑有点问题</td>
</tr>
<tr>
<td style="text-align:left">22</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">女教师</td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">剧情/爱情</td>
<td style="text-align:left">韩语/中文[译]</td>
<td style="text-align:left">金荷娜，柳仁英</td>
<td style="text-align:left">2017.01.04</td>
<td style="text-align:left">金荷娜变化好大</td>
</tr>
<tr>
<td style="text-align:left">23</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">消失的女人</td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">悬疑</td>
<td style="text-align:left">韩语/中文[译]</td>
<td style="text-align:left">严智苑，孔孝真</td>
<td style="text-align:left">2016.11.30</td>
<td style="text-align:left">愿世界多点爱</td>
</tr>
<tr>
<td style="text-align:left">24</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">大赢家</td>
<td style="text-align:left">中国大陆</td>
<td style="text-align:left">警匪/爱情/动作/喜剧</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">大鹏，柳岩</td>
<td style="text-align:left">2020.03.20</td>
<td style="text-align:left">认真的人应该被看见</td>
</tr>
<tr>
<td style="text-align:left">25</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">小萝莉的猴神大叔</td>
<td style="text-align:left">印度</td>
<td style="text-align:left">剧情/音乐剧</td>
<td style="text-align:left">中文[译]</td>
<td style="text-align:left">萨尔曼·汗</td>
<td style="text-align:left">2015.07.17</td>
<td style="text-align:left">印巴冲突</td>
</tr>
<tr>
<td style="text-align:left">26</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">我的个神啊</td>
<td style="text-align:left">印度</td>
<td style="text-align:left">喜剧/爱情/奇幻/宗教</td>
<td style="text-align:left">中文[译]</td>
<td style="text-align:left">阿米尔·汗</td>
<td style="text-align:left">2014.12.19</td>
<td style="text-align:left">印度宗教文化</td>
</tr>
<tr>
<td style="text-align:left">27</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">地球上的星星</td>
<td style="text-align:left">印度</td>
<td style="text-align:left">剧情/儿童</td>
<td style="text-align:left">中文[译]</td>
<td style="text-align:left">阿米尔·汗</td>
<td style="text-align:left">2007.12.21</td>
<td style="text-align:left">老师和问题学生</td>
</tr>
<tr>
<td style="text-align:left">28</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">疯狂的赛车</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">喜剧</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">黄渤</td>
<td style="text-align:left">2009</td>
<td style="text-align:left">一切都是巧合</td>
</tr>
<tr>
<td style="text-align:left">29</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">Yummy</td>
<td style="text-align:left">比利时</td>
<td style="text-align:left">喜剧/恐怖</td>
<td style="text-align:left">荷兰语/英语</td>
<td style="text-align:left">Maaike Neuville</td>
<td style="text-align:left">2019</td>
<td style="text-align:left">降维版的丧尸</td>
</tr>
<tr>
<td style="text-align:left">30</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">姜子牙</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">神话/动画/动作</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">姜子牙、申公豹</td>
<td style="text-align:left">2020</td>
<td style="text-align:left">救一人vs.救苍生</td>
</tr>
<tr>
<td style="text-align:left">31</td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left"><strong>夺冠</strong></td>
<td style="text-align:left">中国</td>
<td style="text-align:left">运动/剧情</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">巩俐、黄渤</td>
<td style="text-align:left">2020</td>
<td style="text-align:left">女排精神</td>
</tr>
<tr>
<td style="text-align:left">32</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">Ammonite</td>
<td style="text-align:left">英国[主]</td>
<td style="text-align:left">剧情/爱情</td>
<td style="text-align:left">英语</td>
<td style="text-align:left">Kate Winslet, Saoirse Ronan</td>
<td style="text-align:left">2020</td>
<td style="text-align:left">古生物学家</td>
</tr>
<tr>
<td style="text-align:left">33</td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left">Harry Potter and the Philosopher’s Stone</td>
<td style="text-align:left">美国、英国</td>
<td style="text-align:left">冒险</td>
<td style="text-align:left">英语</td>
<td style="text-align:left">Daniel Radcliffe, Rupert Grint, Emma Watson</td>
<td style="text-align:left">2001</td>
<td style="text-align:left">罗恩·棋局</td>
</tr>
<tr>
<td style="text-align:left">34</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">Harry Potter and the Chamber of Secrets</td>
<td style="text-align:left">美国、英国、德国</td>
<td style="text-align:left">冒险</td>
<td style="text-align:left">英语</td>
<td style="text-align:left">Daniel Radcliffe, Rupert Grint, Emma Watson</td>
<td style="text-align:left">2002</td>
<td style="text-align:left">格莱芬多之剑</td>
</tr>
<tr>
<td style="text-align:left">35</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">Harry Potter and the Prisoner of Azkaban</td>
<td style="text-align:left">英国、美国</td>
<td style="text-align:left">冒险</td>
<td style="text-align:left">英语</td>
<td style="text-align:left">Daniel Radcliffe, Rupert Grint, Emma Watson</td>
<td style="text-align:left">2004</td>
<td style="text-align:left">荧光闪烁</td>
</tr>
<tr>
<td style="text-align:left">36</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">Harry Potter and the Goblet of Fire</td>
<td style="text-align:left">英国、美国</td>
<td style="text-align:left">冒险</td>
<td style="text-align:left">英语</td>
<td style="text-align:left">Daniel Radcliffe, Rupert Grint, Emma Watson</td>
<td style="text-align:left">2004</td>
<td style="text-align:left">感情线出了</td>
</tr>
<tr>
<td style="text-align:left">37</td>
<td style="text-align:left">★☆☆☆☆</td>
<td style="text-align:left">Home Alone 1</td>
<td style="text-align:left">美国</td>
<td style="text-align:left">动作/家庭/喜剧/犯罪</td>
<td style="text-align:left">英语</td>
<td style="text-align:left">Christian Martyn</td>
<td style="text-align:left">1990</td>
<td style="text-align:left">平安夜-成人不推荐</td>
</tr>
<tr>
<td style="text-align:left">38</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">Harry Potter and the Order of the Phoenix</td>
<td style="text-align:left">美国、英国</td>
<td style="text-align:left">冒险</td>
<td style="text-align:left">英语</td>
<td style="text-align:left">Daniel Radcliffe, Rupert Grint, Emma Watson</td>
<td style="text-align:left">2007</td>
<td style="text-align:left">Sirius死了</td>
</tr>
<tr>
<td style="text-align:left">39</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">Harry Potter and the Half-Blood Prince</td>
<td style="text-align:left">美国、英国</td>
<td style="text-align:left">冒险</td>
<td style="text-align:left">英语</td>
<td style="text-align:left">Daniel Radcliffe, Rupert Grint, Emma Watson</td>
<td style="text-align:left">2009</td>
<td style="text-align:left">Dumbledore死了</td>
</tr>
</tbody>
</table>
<h3 id="综艺">综艺</h3>
<table>
<thead>
<tr>
<th style="text-align:left">序号</th>
<th style="text-align:left">评分</th>
<th style="text-align:left">片名</th>
<th style="text-align:left">国家</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">语言</th>
<th style="text-align:left">主演</th>
<th style="text-align:left">首播</th>
<th style="text-align:left">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left">中国有嘻哈 <strong>GAI部分</strong></td>
<td style="text-align:left">中国</td>
<td style="text-align:left">音乐/真人秀</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">GAI</td>
<td style="text-align:left">2017.06.24</td>
<td style="text-align:left">GAI的每首歌</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">乘风破浪的姐姐</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">女团成长综艺</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">30位姐姐</td>
<td style="text-align:left">2020.06.12</td>
<td style="text-align:left">金晨、张雨绮</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">脱口秀大会第三季</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">脱口秀</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">李诞、罗永浩等</td>
<td style="text-align:left">2020.07.22</td>
<td style="text-align:left">李雪琴、杨笠</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Movie List</category>
      </categories>
      <tags>
        <tag>Movies</tag>
      </tags>
  </entry>
  <entry>
    <title>Bioconda - A channel for the conda package manager</title>
    <url>/2020/06/05/Bioconda/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> A brief introduction to Bioconda including its installation and usage.</p>
<a id="more"></a>
<h1>Introduction</h1>
<p><a href="bioconda.github.io/">Bioconda</a> is a channel for the conda package manager specializing in bioinformatics software. Bioconda consists of:</p>
<ul>
<li>a repository of recipes hosted on GitHub</li>
<li>a build system turning these recipes into conda packages</li>
<li>a repository of packages containing over 7000 bioinformatics packages ready to use with <code>conda install</code></li>
<li>over 850 contributors and 570 members who add, modify, update and maintain the recipes</li>
</ul>
<p><a href="http://bioconda.github.io/contributor/faqs.html#conda-anaconda-minconda" target="_blank" rel="noopener">Diffferences among anaconda, miniconda and conda</a>: conda is a package manager, Miniconda is the conda installer, and Anaconda is a scientific Python distribution that also includes conda.</p>
<h1>Install conda</h1>
<p>on Linux, run:</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//repo.anaconda.<span class="keyword">com</span>/miniconda/Miniconda3-latest-Linux-x86_64.<span class="keyword">sh</span></span><br><span class="line"><span class="keyword">sh</span> Miniconda3-latest-Linux-x86_64.<span class="keyword">sh</span></span><br><span class="line"><span class="keyword">source</span> ~/.bashrc #source：使当前<span class="keyword">shell</span>读入路径为filepath的<span class="keyword">shell</span>文件并依次执行文件中的所有语句，通常用于重新执行刚修改的初始化文件，使之立即生效，而不必注销并重新登录. bashrc: bash configure <span class="keyword">file</span>.</span><br></pre></td></tr></table></figure>
<h1>Set up channels</h1>
<p>‘It is important to add them in this order so that the priority is set correctly (that is, conda-forge is highest priority). The conda-forge channel contains many general-purpose packages not already found in the defaults channel.’</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">conda<span class="built_in"> config </span>--<span class="builtin-name">add</span> channels defaults</span><br><span class="line">conda<span class="built_in"> config </span>--<span class="builtin-name">add</span> channels bioconda</span><br><span class="line">conda<span class="built_in"> config </span>--<span class="builtin-name">add</span> channels conda-forge</span><br><span class="line">cat ~/.condarc #see added channels; condarc: conda configure file.</span><br></pre></td></tr></table></figure>
<h1>Usage</h1>
<p><code>conda -h</code>: see options of conda and how to use it.</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">conda search <span class="keyword">bwa </span><span class="comment">#search software 'bwa'</span></span><br><span class="line">conda <span class="keyword">install </span><span class="keyword">bwa </span><span class="comment">#install software 'bwa', the latest version</span></span><br><span class="line">conda <span class="keyword">install </span>-y samtools=<span class="number">1</span>.<span class="number">9</span> <span class="keyword">bcftools=1.9 </span><span class="comment">#conda install -h</span></span><br><span class="line">conda list <span class="comment">#see installed packages</span></span><br><span class="line">conda update <span class="keyword">bwa </span><span class="comment">#update packages</span></span><br><span class="line">conda remove <span class="keyword">bwa </span><span class="comment">#remove packages; delete miniconda from env：open ~/.bashrc file，delete the path of miniconda，save and close it; delete .condarc (~/.condarc) 、.conda (~/.conda)以及.continuum文件</span></span><br><span class="line">conda env remove -n py2.<span class="number">7</span> <span class="comment">#remove env py2.7</span></span><br></pre></td></tr></table></figure>
<h1>Use virtual environment to manage packages</h1>
<p>A Virtual Environment is a python environment, that is an isolated working copy of Python which allows you to work on a specific project without affecting other projects. So basically it is a tool that enables multiple side-by-side installations of Python, one for each project.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">conda env list <span class="comment">#see existed env</span></span><br><span class="line">conda <span class="keyword">create</span> -n <span class="keyword">test</span> <span class="comment">#create virtual env</span></span><br><span class="line">conda <span class="keyword">activate</span> <span class="keyword">test</span> <span class="comment">#activate virtual env 'test'</span></span><br><span class="line">conda <span class="keyword">install</span> -c bioconda blast=<span class="number">2.7</span><span class="number">.1</span> samtools=<span class="number">1.7</span> <span class="comment">#install packages</span></span><br><span class="line">conda deavtivate <span class="comment">#exit virtual env</span></span><br></pre></td></tr></table></figure>
<p>Ref:</p>
<blockquote>
<p>User Docs of Bioconda: <a href="https://bioconda.github.io/user/index.html" target="_blank" rel="noopener">https://bioconda.github.io/user/index.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Biosoft</category>
      </categories>
      <tags>
        <tag>Biosoft</tag>
      </tags>
  </entry>
  <entry>
    <title>流式细胞术_1.基础知识</title>
    <url>/2020/08/12/CytoSense-1-Introduction/</url>
    <content><![CDATA[<p><strong>摘要:</strong> 主要介绍了流式细胞术的概念，可检测的指标，原理，以及组成（液流系统、光学系统、电子系统和分选系统）。此外，还介绍了传统的流式细胞仪（FCM）和扫描流式细胞仪（SFCM或CytoSense）。</p>
<a id="more"></a>
<h1>流式细胞术</h1>
<p>流式细胞术（Flow Cytometry, FCM）是一种可以快速、准确、客观对液流中排成单列的<strong>细胞或其他生物微粒</strong>（如微球，细菌，小型模式生物等）逐个进行快速定性分析和分选的技术。<br>
它能够同时检测快速直线流动状态中的<strong>单个</strong>微粒的多项<strong>物理及生物学</strong>特性，并可以对其加以定量，也可以对特定群体加以分选。</p>
<h2 id="可检测的指标">可检测的指标</h2>
<p>细胞结构：细胞大小、粒度、表面面积、核浆比例；DNA含量与细胞周期；RNA含量；蛋白质含量；染色体分析。<br>
细胞抗原表达：细胞表面/胞浆/核的特异性抗原；细胞受体；细胞内细胞因子。<br>
细胞功能：细胞活性；酶活性；激素结合位点；细胞凋亡；钙离子内流；pH值；细胞吞噬；氧化应激。</p>
<h2 id="原理">原理</h2>
<p>在一定的压力下，鞘液包裹着细胞通过喷嘴中心进入流式照射室，在流式照射室的分析点，激光能够照射到细胞发出散射光，如果细胞上携带了荧光素，会被激光激发出荧光。散射光检测器将散射光信号转换为电信号，荧光被光电倍增管收集将荧光转换为电信号，这些信号之后被一系列放大和数据化处理，存储，之后便可以根据这些信号进行分析和分选。</p>
<h2 id="组成">组成</h2>
<p><strong>液流系统</strong>：在压力驱动下，将鞘液和样本驱动到流动室，两者相遇但不混合，保持层流的状态依次通过检测点，最后进入废液桶。</p>
<ul>
<li>鞘液sheath fluid
<ul>
<li>鞘液指液体在高压下形成一个圆柱形液流，样品从液流的中心流过，液体就像一个鞘一样包在样品外面，以此实现两种液体的同轴流动。<strong>样本流位于轴心且稳定流动，外侧有鞘液包裹。</strong></li>
<li>鞘液成分通常是<strong>与样品等渗的缓冲液</strong>，以保证处于鞘液中心的细胞不会因低渗或高渗而死亡。通常根据不同细胞适宜的培养条件，对缓冲液的成分作适当的改变。细胞分析一般用PBS或MilliQ；细胞分选一般用PBS；植物原生质体一般用W5溶液。<em>注意：PBS是盐溶液，容易产生结晶，影响仪器的使用寿命。</em></li>
<li>保持样品压力与鞘液压力之间合适的压力差是<strong>保持液流平稳</strong>的重要因素。</li>
</ul>
</li>
<li>流动室flow cell
<ul>
<li>流动室通常是顶端有开口的圆锥形结构，使液流由粗逐渐变细。一般有空中正交结构流动室（在空气中被激光束正交照射）和封闭透明照射室（在照射室内部被激光光束照射）。</li>
<li>流速选择：高速时的轴流比低速时的宽，一次性检测到的可能是多个样本，误差变大。当样本浓度低时，可以选高速。周期实验只能用低速。</li>
</ul>
</li>
<li>流体动力学聚焦和喷嘴
<ul>
<li>流体动力学聚焦，即流动的鞘液与流动的细胞汇合，细胞被包裹在鞘液中心且被加速，保证细胞精确排队通过激光，可使细胞受到动力学限制并保持在液流的中心。</li>
<li>喷嘴功能：形成非常细的可见液流，使细胞以单个串状形式排列于其中，从而让激光依次照射每个细胞，分析所有细胞的特性。分选用到的比较多。有不同的型号。</li>
</ul>
</li>
</ul>
<p><strong>光学系统：</strong></p>
<ul>
<li>激发光源：激光器
<table>
<thead>
<tr>
<th>激光器</th>
<th>常用通道</th>
</tr>
</thead>
<tbody>
<tr>
<td>355nm紫外激光器</td>
<td>DAPI</td>
</tr>
<tr>
<td>405nm紫激光器</td>
<td>Pacfifc</td>
</tr>
<tr>
<td>488nm蓝激光器</td>
<td>FSC/SSC、FITC</td>
</tr>
<tr>
<td>561nm黄激光器</td>
<td>PE</td>
</tr>
<tr>
<td>635nmm红激光器</td>
<td>APC、APC-Cy7</td>
</tr>
</tbody>
</table>
</li>
<li>激光：通过激发而辐射出来的放大的光</li>
<li>特点：方向性、单波长、高能量、小发射角、高稳定性光照</li>
<li>聚焦光学镜：使用透镜将激光束聚焦于较小的直径内，能量主要聚焦于中心点。</li>
<li>滤光片：长通（LP500：高于500的全部通过，其他反射）、短通（SP500：高于500的全部反射，其他通过）和带通（BP500/50：475-525的通过，其他反射）。</li>
<li>光电倍增管（PMT）及脉冲信号
<ul>
<li>通过滤光片根据不同波长分离的光信号最后进入各自的通道，即PMT。PMT连接了光路系统和计算机分析处理系统，起着关键的桥梁作用。PMT将光信号转变为电子信号，并将信号按比例放大。</li>
<li>细胞产生的光学信号（电脉冲信号）较小，必须产生足够大的电脉冲信号才能被PMT检测到。PMT的级联放大，通过改变<strong>电压</strong>进行调节。可用于细胞去黏连。
<ul>
<li>高度（FL-H）：最大荧光强度</li>
<li>宽度（FL-W）：细胞直径</li>
<li>面积（FL-A）：荧光总量的度量</li>
</ul>
</li>
</ul>
</li>
<li>散射光
<ul>
<li>FSC：前向角散射光信号 - 细胞相对大小</li>
<li>SSC：测向角散射光信号 - 复杂程度（颗粒度）</li>
<li>FSC和SSC分别作横坐标和纵坐标看细胞的状态</li>
</ul>
</li>
<li>荧光信号
<ul>
<li>激发光谱指能特应性的激发某种荧光素的一定波长范围内的光线，也称为吸收光谱。吸收波峰。</li>
<li>发射光谱，指某一波长激发光能引起荧光素发射的一定波长范围内的荧光。发射波峰。</li>
<li>将荧光素结合到抗原上，经过激光照射，荧光信号强弱，反映了细胞抗原的表达含量。</li>
<li>除了周期外，其他一般经过log转换。划gate（阴阳性），阴性一般调到10^3以内，阳性一般调到10^4左右.</li>
</ul>
</li>
</ul>
<p><strong>电子系统：</strong></p>
<ul>
<li>数据存储：及时拷走原始数据和实验室用的参数。</li>
<li>可视化处理： 圈门（gate）是选择目标细胞群体。坐标轴是log，显示范围大，绝大多数的荧光强度均用log表示。坐标轴是线性，主要用于FSC和SSC以及周期检测。
<ul>
<li>单参数直方图：横坐标为Total FWC，纵坐标为Particle Count。横轴，越靠右光信号越强。</li>
<li>双参数 二维点图：表示两种参数同时测量的结果以及与细胞数量之间的关系，可以看到每一个细胞这两个参数的表达情况，以及不同表达程度的群体分布。</li>
<li>等高图 密度图</li>
</ul>
</li>
</ul>
<p><strong>分选系统：</strong></p>
<ul>
<li>可检测的样品种类多样<br>
各种细胞、微生物、血清、血浆、培养上清、细胞裂解液等。以孢子形式繁殖的样品特别注意，孢子残留在管路中，难以清洗，只能换管路。</li>
<li>样品制备要求
<ul>
<li>细胞悬液</li>
<li>浓度5 x 10^5 ~ 1 x 10^7 cells/ml，体积约0.5-1 ml，300目筛网过滤。</li>
<li>分选样品需提前转移到无菌流式管中，并在接收管中加适量培养基或PBS。</li>
<li>对照：空白对照/同型对照，单阳对照（两种荧光素以上才能用到，纠正多种荧光素的光谱重叠；如果用n种燃料，就要做n个单阳；最好买串联染料；先确定仪器再确定荧光染料，根据激发的波长和接受的通道。尽量选补偿不多的通道。）<br>
对照设置：<br>
实验样本荧光信号：自发荧光+特异荧光+非特异荧光
<ul>
<li>自发荧光：不经过荧光染色细胞内部荧光分子经过光照发出的荧光，发荧光信号为噪声信号。做空白对照。</li>
<li>特异荧光</li>
<li>非特异荧光：通过做同型对照去除。</li>
</ul>
<blockquote>
<p>荧光溢漏和荧光补偿：每一种荧光素都可以被存在激发发射光及发射波长，而各个荧光发射光之间有一定的重叠，即它会溢漏一部分的荧光到其他邻近的通道里。<br>
荧光补偿对照的原则：补偿所用对照的荧光染料必须与当前实验所用的荧光染料一致，AF488荧光素并不能代替FITC。<br>
单染对照的荧光强度至少要与实验样本一致，护着要超过实验样本的荧光强度。</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h1>流式细胞仪(FCM)</h1>
<p><a href="https://fcm.univ-bio.com/article.html?id=2044" target="_blank" rel="noopener">uflow</a>可以多点点，有很多资料可以看。</p>
<h1>扫描流式细胞仪（SFCM）</h1>
<p>增加了颗粒扫描和成像的功能，详见<a href="https://www.cytobuoy.com/product/cytosense" target="_blank" rel="noopener">CytoSense</a>。<br>
配套的软件：CytoUSB、CytoClus和EasyClus，详见<a href="https://www.cytobuoy.com/product/software/" target="_blank" rel="noopener">Software</a>.<br>
更多的信息，点击<a href="https://thomasruttenprojects.wordpress.com/" target="_blank" rel="noopener">Phytoplankton analysis by flowcytometry and EasyClus software</a>, <a href="http://easyclus.com/" target="_blank" rel="noopener">EasyClus</a>。</p>
<p>Ref:</p>
<blockquote>
<p>Yu Bin (Tsinghua University): BD Fortessa flow cytometry  training class<br>
Flow Cytometry Animation：<a href="https://www.youtube.com/watch?v=EQXPJ7eeesQ" target="_blank" rel="noopener">https://www.youtube.com/watch?v=EQXPJ7eeesQ</a><br>
univ: <a href="https://fcm.univ-bio.com/article.html?id=2842" target="_blank" rel="noopener">https://fcm.univ-bio.com/article.html?id=2842</a><br>
CytoSense: <a href="https://www.cytobuoy.com/product/cytosense" target="_blank" rel="noopener">https://www.cytobuoy.com/product/cytosense</a><br>
ThomasRuttenProjects: <a href="https://thomasruttenprojects.wordpress.com/" target="_blank" rel="noopener">https://thomasruttenprojects.wordpress.com/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Instrumental Analysis</category>
        <category>Flow Cytometry</category>
      </categories>
      <tags>
        <tag>flow cytometry</tag>
        <tag>CytoSense</tag>
      </tags>
  </entry>
  <entry>
    <title>流式细胞术_2.相关软件和参数详解</title>
    <url>/2020/08/19/CytoSense-2-SoftwareandParameters/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> 主要介绍了CytoSense数据监测及分析所用软件CytoUSB和CytoClus中相关参数设置以及含义。</p>
<a id="more"></a>
<p>为了控制CytoSense并分析其测得的结果，开发了相应的软件：CytoUSB和CytoClus。</p>
<h1>CytoUSB</h1>
<p>CytoUSB用于控制CytoSense，其主要功能包括：执行CytoSense的微调、校准和运行状况检查；设定相关的检测参数值和数据实时可视化，以优化实验方案，得到最优的结果。</p>
<h2 id="实验设置">实验设置</h2>
<p>？读取的颗粒数目，相应的测定的样本体积，流速是多少。<br>
激发通道（trigger channel）/激发光；激发水平：mV；一般根据研究的对象选择激发光，如果是针对光合的浮游生物，其具有强烈的来自chl a的红色荧光信号，那就选择FL Red作为激发通道，激发水平的高低决定了chla浓度高低是多少时才可以被检测到，其也可以通过调节接受二极管检测器的灵敏度（photomultiplier detector sensitivities）进行优化，以尽可能的检测到所有的颗粒，并减少背景噪音。？</p>
<h2 id="参数释义">参数释义</h2>
<ul>
<li><strong>Forward light scatter (FWS)</strong>: 细胞尺寸（cell size)</li>
<li><strong>Sideward light scatter (SWS)</strong>: 细胞粒度和表面复杂性（cellular granularity and surface complexity)</li>
<li><strong>FL Yellow</strong>：decaying pigments</li>
<li><strong>FL Orange</strong>：藻胆蛋白（phycobiliproteins）</li>
<li><strong>FL Red</strong>：叶绿素a（Chl a）</li>
<li><strong>Curvature</strong>：如果颗粒具有弯曲或螺旋形状，则前向散射极化比（forward scatter polarization ratio）很高</li>
</ul>
<h1>CytoCLus 4</h1>
<p>CytoUSB生成的文件可通过CytoClus进行处理和分析，其主要功能包括：手动划门对数据进行分类和解释；计算数据集的主要统计参数并作图；交互式定位物种以对样品成像，从而实现集群识别。</p>
<h2 id="参数释义-2">参数释义</h2>
<p>CytoClus 4统计了颗粒的许多参数，包括Length, Total, Maximum, Average, Inertia, Center of gravity, Fill factor, Asymmetry, Number of cells, Sample Length, Time of Arrival, First, Last, Minimum, 以及SWS covariance。每个参数都有其生物学解释，即相应的功能特征（functional traits）。可根据研究目的选择相应的参数进行统计和分析。<br>
每个颗粒都会有一个<strong>脉冲形状（pulse shape）图</strong>，其横坐标为信号长度（signal length (μm))，纵坐标为信号水平（signal level (mV))。</p>
<ul>
<li><strong>Length (μm)</strong>：脉冲形状图的横坐标</li>
<li><strong>Total</strong>：脉冲形状图所覆盖的区域，即信号的总强度</li>
<li><strong>Average (mV)</strong>: 脉冲形状图纵坐标的平均值，即平均信号强度</li>
<li><strong>Maximum (mV)</strong>: 脉冲形状图的纵坐标最大值，即最大的信号强度</li>
<li><strong>Inertia</strong>：</li>
<li><strong>Center of gravity</strong>：信号强度的重心</li>
<li><strong>Fill factor</strong>：根据脉冲形状图画一个矩形，此处是指其中被覆盖的区域与被未被覆盖的区域比。用以评估细胞的形状，值高表示细胞是类似球形的，值低表示细胞是类似方形的。</li>
<li><strong>Asymmetry</strong>：用颗粒信号强度重心的相对位置评估颗粒的不对称，表示细胞不对称的程度</li>
<li><strong>Number of cells</strong>：脉冲形状中有意义的峰的数目，用以代表细胞的数目，是一个近似值，而不是实际值。</li>
<li><strong>Sample Length (μs)</strong></li>
<li><strong>Time of Arrival (s)</strong></li>
<li><strong>First (mV)</strong></li>
<li><strong>Last (mV)</strong></li>
<li><strong>Minimum (mV)</strong>：脉冲形状图的纵坐标最小值，即最小的信号强度</li>
<li><strong>SWS covariance</strong></li>
</ul>
<h1>EasyClus</h1>
<p>在Matlab环境中工作，基于数据库执行集群的自动聚类、自动数据库划分和分类。流式细胞仪分析过程中产生的图像用于验证结果。</p>
<p>Ref:</p>
<blockquote>
<p>CytoBuoy software: <a href="https://www.cytobuoy.com/product/software/" target="_blank" rel="noopener">https://www.cytobuoy.com/product/software/</a><br>
Fragoso, G. M., Poulton, A. J., Pratt, N. J., Johnsen, G., &amp; Purdie, D. A. (2019). Trait‐based analysis of subpolar North Atlantic phytoplankton and plastidic ciliate communities using automated flow cytometer. Limnology and Oceanography, 64(4), 1763-1778.</p>
</blockquote>
]]></content>
      <categories>
        <category>Instrumental Analysis</category>
        <category>Flow Cytometry</category>
      </categories>
      <tags>
        <tag>CytoSense</tag>
      </tags>
  </entry>
  <entry>
    <title>Nanopore_10.Variation detection 长片段变异检测</title>
    <url>/2020/06/14/9-variationdetection/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> 本文介绍了1.nanopore数据SV检测原理及意义，2.当前三种SV检测方法比较，3.三代测序检测SV的常用软件，以及4.利用IGV可视化变异结果。</p>
<a id="more"></a>
<p><strong>突变类型</strong><br>
基因组上突变主要包括单碱基突变与染色体水平突变。其实基因组上所有的突变都可以称为基因组结构变化SV（Structure Variation）。</p>
<ul>
<li>SNP：（single nucletide polymorphsysm），即单核苷酸的多态性，是指等位基因发生了突变，致使不同等位型的出现。SNP分为转换与颠换。</li>
<li>Indel：Insert+Deletion，小的插入缺失1-50bp；</li>
<li>CNV：Copy Number Variation，拷贝数变化，倍增；</li>
<li><u>SV：Structure Variation，大的插入，缺失，倍增，易位，倒位；一般大于50bp。</u></li>
<li>SNV:单碱基突变，包括转换，颠换，插入，缺失。</li>
</ul>
<p><strong>SV检测国际难题</strong></p>
<ul>
<li>SV本身就包括多种类型</li>
<li>一些SV变化比较大，基本定义是大于50bp，但是有些突变甚至可以达到几百k</li>
<li>CNV，本身属于重复序列</li>
</ul>
<h1>nanopore数据SV检测原理及意义</h1>
<h2 id="原理">原理</h2>
<p>利用nanopore数据进行变异检测的操作步骤与利用二代测序类似，主要也是将测序数据 （fastq格式）与参考序列（fasta格式）进行比对，得到比对结果（bam格式）。然后再利用一些变异检测软件得到潜在变异结果（vcf格式），最终对结果进行进一步的验证。<br>
<u>原始数据fast5格式-&gt; guppy碱基识别-&gt;fastq格式数据（fastq格式文件处理、nanoplot数据质控）-&gt;根据质量值和长度过滤数据+quast拼接评估-&gt;比对结果-&gt;可视化、SV检测、SNP检测</u></p>
<h2 id="意义">意义</h2>
<p>目前 nanopore 测序由于其测序质量还没有二代测序高，并且测序价格偏高，因此，主流的 SNP检测仍然使用二代测序，包括很多临床医学检验。nanopore测序还没有应用于临床医学检测。不过，<u>nanopore测序具有超长的读长，因此非常适用于大片段结构变化(SV)的检测，包括基因组大片段插入、缺失、倍增、易位等变化，还包括在临床上检测难度一直非常大的拷贝数变异CNV的检测，使用nanopore测序都有很好的检测结果。此外，由于长片段可以对整个转录组长片段进行测序，因此，也能够检测基因融合现象。</u>相信在不久的将来， nanopore的长读长优势将会越来越多的用于基因组结构变异的检测。<br>
一般不使用三代数据找SNP，因为错误率比较高，但也可以尝试用一下，毕竟数据都在那里。用的软件是longshot，用于三代数据。</p>
<h1>当前三种SV检测方法比较</h1>
<ul>
<li>利用基因组拼接结果 | 问题：参考序列很多不全</li>
<li>利用二代测序数据pair end关系</li>
<li>利用三代测序数据：超长读长、数据量大</li>
</ul>
<h1>三代测序检测SV的常用软件</h1>
<h2 id="常用软件">常用软件</h2>
<ul>
<li><a href="https://github.com/lh3/minimap2" target="_blank" rel="noopener">MiniMap2</a></li>
<li><a href="https://github.com/philres/ngmlr" target="_blank" rel="noopener">NGMLR</a></li>
<li><a href="https://github.com/fritzsedlazeck/Sniffles" target="_blank" rel="noopener">sniffles</a><br>
snpiffles软件在HG002基因组上达96%召回率(recall)和精确率(precision)。Sniffles内置多种统计模型，能更准确地识别SV信号。sniffles输入的也是排序后的bam文件，不过sniffles一般与NGMLR一起组合使用，NGMLR也是一款比对软件，将测序得到的数据比对到基因组上，与minimap2类似，能更准确地分辨长读长技术的测序错误，适合跨越复杂 SV 区域的长reads比对。</li>
<li><a href="http://last.cbrc.jp/" target="_blank" rel="noopener">last</a></li>
<li><a href="https://github.com/isovic/graphmap" target="_blank" rel="noopener">GraphMap</a></li>
<li><a href="https://github.com/benedictpaten/marginAlign" target="_blank" rel="noopener">MarginAlign</a></li>
<li><a href="https://github.com/pjedge/longshot" target="_blank" rel="noopener">longshot</a><br>
Longshot is a variant calling tool for diploid genomes using long error prone reads such as Pacific Biosciences (PacBio) SMRT and Oxford Nanopore Technologies (ONT). It takes as input an aligned BAM file and outputs a phased VCF file with variants and haplotype information. It can also genotype and phase input VCF files. It can output haplotype-separated BAM files that can be used for downstream analysis. Currently, it only calls single nucleotide variants (SNVs), but it can genotype indels if they are given in an input VCF.</li>
<li><a href="https://github.com/mroosmalen/nanosv" target="_blank" rel="noopener">nanoSV</a></li>
</ul>
<h2 id="examples">examples</h2>
<h3 id="利用longshot检测SNP">利用longshot检测SNP</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">conda install -y longshot</span><br><span class="line">#minimap2比对</span><br><span class="line">minimap2 -ax map-ont co92<span class="selector-class">.fna</span> /ifs1/TestDatas/namikong/<span class="number">0611</span>/rawdata/SRR8608880<span class="selector-class">.sra</span><span class="selector-class">.fastq</span> &gt;s1037.sam</span><br><span class="line"></span><br><span class="line">#对bam进行处理</span><br><span class="line">samtools sort -@ <span class="number">4</span> -O bam -o s1037<span class="selector-class">.sorted</span><span class="selector-class">.bam</span> s1037.sam</span><br><span class="line">samtools index s1037<span class="selector-class">.sorted</span>.bam</span><br><span class="line">samtools faidx co92.fna</span><br><span class="line"></span><br><span class="line">#检测SNP</span><br><span class="line">longshot --bam s1037<span class="selector-class">.sorted</span><span class="selector-class">.bam</span> --ref co92<span class="selector-class">.fna</span> --out longshot_output.vcf</span><br></pre></td></tr></table></figure>
<p>查看统计vcf文件<br>
<code>bcftools stats longshot_output.vcf</code></p>
<h3 id="nglmr-sniffles组合检测SV">nglmr+sniffles组合检测SV</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">#ngmlr比对</span><br><span class="line">ngmlr -x ont -t <span class="number">24</span> -r co92<span class="selector-class">.fna</span> -<span class="selector-tag">q</span> /ifs1/TestDatas/namikong/<span class="number">0611</span>/rawdata/SRR8608880<span class="selector-class">.sra</span><span class="selector-class">.fastq</span> -o ngmlr.sam</span><br><span class="line"></span><br><span class="line">#samtool处理</span><br><span class="line">samtools sort -@ <span class="number">4</span> -O BAM -o ngmlr<span class="selector-class">.sorted</span><span class="selector-class">.bam</span> ngmlr.sam</span><br><span class="line">samtools index ngmlr<span class="selector-class">.sorted</span>.bam</span><br><span class="line"></span><br><span class="line">#SV检测</span><br><span class="line">sniffles  -m ngmlr<span class="selector-class">.sorted</span><span class="selector-class">.bam</span> -v sniffles<span class="selector-class">.vcf</span> -t <span class="number">24</span></span><br></pre></td></tr></table></figure>
<h3 id="nglmr-nanoSV组合检测SV">nglmr+nanoSV组合检测SV</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">conda install -y -c bioconda nanosv</span><br><span class="line">NanoSV -t <span class="number">12</span> -o nanosnv<span class="selector-class">.vcf</span> -c config<span class="selector-class">.ini</span> ../sniffles/ngmlr<span class="selector-class">.sorted</span>.bam</span><br></pre></td></tr></table></figure>
<h1>利用IGV可视化变异结果</h1>
<p><a href="http://software.broadinstitute.org/software/igv/home" target="_blank" rel="noopener">Integrative Genomics Viewer</a>交互式基因组浏览器，它是一种高性能的可视化工具，用来交互式地探索大型综合基因组数据。它支持各种数据类型，包括 array-based 的和下一代测序的数据和基因注释。<br>
输入文件：参考基因组，bam文件，snp vcf文件，indel vcf文件。<br>
操作：先点Genomes导入基因组，再点击file导入bam和vcf文件。</p>
<blockquote>
<p>tablet主要看bam，igv主要看vcf</p>
</blockquote>
<h2 id=""></h2>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Nanopore</category>
      </categories>
      <tags>
        <tag>Nanopore</tag>
      </tags>
  </entry>
  <entry>
    <title>Nanopore_2. Selection of sequencing devices and relevant reagents</title>
    <url>/2020/06/05/Nanopore-selectionofsequencingdevicesandrelevantreagents/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This paper introduces nanopore sequencing products, needed IT devices and other supporting equipment. calculation of output data amount and evaluation of needed data amount also have been introduced.</p>
<a id="more"></a>
<h1><a href="https://nanoporetech.com/products" target="_blank" rel="noopener">Nanopore sequencing products</a></h1>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/8.products.png" alt="8.products"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/8.products2.png" alt="8.products2"></p>
<ol>
<li>How to calculate the amount of output data?<br>
<em>Note: 1) each channel has four nanopores, but only one nanopore works at one time; 2) the amount of output calculated below is the theoretical maximum, which might be halved actually.</em></li>
</ol>
<ul>
<li>sequencing data of each nanopore: 450 bp/second; 450 * 60=27 kb/min; 27 * 60=1.62 M/h; 1.62 * 24=38.88 M/d.</li>
<li>sequencing data of different nanopores per day: 126 channels, 126 * 38.88≈4.90 G; 512 channels, 512 * 38.88≈19.91 G; 3000 channels, 3000 * 38.88=116.64 G.</li>
</ul>
<ol start="2">
<li><a href="https://nanoporetech.com/products/comparison" target="_blank" rel="noopener">Comparisons among different products</a><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/9.comparisons.png" alt="9.comparisons"></li>
</ol>
<ul>
<li>sequencers:
<ul>
<li><a href="https://nanoporetech.com/products/flongle" target="_blank" rel="noopener">Flongle</a>: 126 channels, 1.8 G data. | SmidgION: smaller than Flongle, can connect with iphone</li>
<li><a href="https://nanoporetech.com/products/minion" target="_blank" rel="noopener">MinION Mk1B</a>: 512 channels, 10-30 G data, need a laptop (processor, &gt;= Intel Core i7; memory card, &gt;16G; disk, &gt;1T; screen) for real-time, powerful analyses or <em>MinIT</em>+ a screen. | <a href="https://nanoporetech.com/products/minion-mk1c" target="_blank" rel="noopener">MinION Mk1C</a>: a product combining MinION Mk1B and MinIT.</li>
<li><a href="https://nanoporetech.com/products/gridion" target="_blank" rel="noopener">GridION Mk1</a>: 5 * 512 channels, maximum 150 G data.</li>
<li><a href="https://nanoporetech.com/products/promethion" target="_blank" rel="noopener">PromethION 24/48</a>: 24/48 sequencing chips, ultra-high throughput.</li>
</ul>
</li>
<li>others:
<ul>
<li><a href="https://nanoporetech.com/products/voltrax" target="_blank" rel="noopener">VolTRAX</a>: perform library preparation automatically.</li>
<li><a href="https://nanoporetech.com/products/minit" target="_blank" rel="noopener">MinIT</a>: equivalent to a laptop.</li>
</ul>
</li>
</ul>
<ol start="3">
<li>How much data do you need?</li>
</ol>
<ul>
<li>whether cover all targeted zones</li>
<li>depends on different analysis purposes</li>
<li>more is better</li>
<li>judge based on experience</li>
<li>check literature information<br>
Detected gene number ~ Reads number<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/10.sequencingsaturationofRNASeq.png" alt="10.sequencingsaturationofRNASeq"><br>
Reads number ~ uncovered genome ~ coverage rate of genome<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/11.sequencingreadsandgenomecoverage.png" alt="11.sequencingreadsandgenomecoverage"></li>
</ul>
<ol start="4">
<li>Brief introduction to sequencing workflow<br>
DNA extraction -&gt; library preparation -&gt; nanopore sequencing -&gt; <a href="https://community.nanoporetech.com/knowledge/bioinformatics" target="_blank" rel="noopener">data analysis</a><br>
software:</li>
</ol>
<ul>
<li>MinKNOW: driver software of all nanopore sequencing platforms
<ul>
<li>create an experiment file</li>
<li>select sample types, and kit of library preparation</li>
<li>basecalling: two base recognition modes based on Flip-Flop algorithm, 1) high accuracy model (HAC); 2) fast basecalling run options</li>
<li>set running parameters: running time, initial voltage, etc.</li>
<li>set types of output file: Fast5 or Fastq</li>
</ul>
</li>
</ul>
<h1>IT devices</h1>
<ul>
<li>high-performance laptop</li>
<li>tower server/blade server (considering CPU, RAM, disk, diaplay card and UPS (uninterruptible power system)) vs. cloud server</li>
<li>computer cluster</li>
</ul>
<h1>Other supporting equipment</h1>
<ul>
<li>Quantify DNA or RNA concentration accurately: Qubit fluorometer <em>NOTE: RNA/DNA contamination</em></li>
<li>quality of DNA or RNA: Nanodrop
<ul>
<li>DNA: A260/A280 = ~1.8，A260/A230=~2.0-2.2</li>
<li>RNA: A260/A280 = ~2.0，A260/A230=~2.0-2.2</li>
</ul>
</li>
<li>length of DNA or RNA fragment: Qsep series，Agilent Bioanalyzer/Tapestation，PFGE，fragment analyzer，FEMTO pulse, etc.</li>
</ul>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Nanopore</category>
      </categories>
      <tags>
        <tag>Nanopore</tag>
      </tags>
  </entry>
  <entry>
    <title>2021影视清单</title>
    <url>/2021/01/01/MovieList2021/</url>
    <content><![CDATA[<p><strong>可看：</strong>  <strong>电视剧：</strong> | <strong>电影：</strong> The Reader 2009; 26个特殊劫匪 2013; 你好，李焕英 2021| <strong>综艺：</strong></p>
<a id="more"></a>
<p><em><strong>NOTE</strong></em><br>
★★★★及以上，都值得再看一遍。片名 加粗的是感觉比较惊艳的。</p>
<h3 id="电视剧">电视剧</h3>
<table>
<thead>
<tr>
<th style="text-align:left">序号</th>
<th style="text-align:left">评分</th>
<th style="text-align:left">片名</th>
<th style="text-align:left">国家</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">语言</th>
<th style="text-align:left">主演</th>
<th style="text-align:left">播出时间</th>
<th style="text-align:left">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">女神降临</td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">爱情</td>
<td style="text-align:left">韩语、中文[译]</td>
<td style="text-align:left">文佳煐、车银优、黄寅烨</td>
<td style="text-align:left">2020.12</td>
<td style="text-align:left">化妆改变命运</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">我就是这般女子</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">喜剧/爱情/古装</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">关晓彤、侯明昊</td>
<td style="text-align:left">2021.01</td>
<td style="text-align:left">轻喜剧</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left">顶楼1</td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">犯罪/都市/校园</td>
<td style="text-align:left">韩语、中文[译]</td>
<td style="text-align:left">李智雅、严基俊</td>
<td style="text-align:left">2020.10</td>
<td style="text-align:left">很狗血并上头</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">顶楼2</td>
<td style="text-align:left">韩国</td>
<td style="text-align:left">犯罪/都市/校园</td>
<td style="text-align:left">韩语、中文[译]</td>
<td style="text-align:left">李智雅、严基俊</td>
<td style="text-align:left">2021</td>
<td style="text-align:left">都猜到就不好玩了</td>
</tr>
</tbody>
</table>
<h3 id="电影">电影</h3>
<table>
<thead>
<tr>
<th style="text-align:left">序号</th>
<th style="text-align:left">评分</th>
<th style="text-align:left">片名</th>
<th style="text-align:left">国家</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">语言</th>
<th style="text-align:left">主演</th>
<th style="text-align:left">上映日期</th>
<th style="text-align:left">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left"><strong>The Reader</strong></td>
<td style="text-align:left">★★★★★</td>
<td style="text-align:left">美国/德国</td>
<td style="text-align:left">剧情/爱情</td>
<td style="text-align:left">英语、中文[译]</td>
<td style="text-align:left">Kate Winslet, David Kross</td>
<td style="text-align:left">2009.1</td>
<td style="text-align:left">Kate好美😍</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">Daens</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">比利时/法国/荷兰</td>
<td style="text-align:left">剧情/传记/历史</td>
<td style="text-align:left">荷兰语、英语[译]</td>
<td style="text-align:left">Jan Decleir</td>
<td style="text-align:left">1993.2</td>
<td style="text-align:left">19世纪末flanders的工人运动</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left"><strong>26个特殊劫匪</strong></td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left">印度</td>
<td style="text-align:left">剧情/惊悚/犯罪</td>
<td style="text-align:left">印地语、英语[译]</td>
<td style="text-align:left">Akshay Kumar</td>
<td style="text-align:left">2013.02</td>
<td style="text-align:left">真实事件改编，结局精彩</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">唐人街探案3</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">中国/日本</td>
<td style="text-align:left">喜剧/悬疑</td>
<td style="text-align:left">普通话/日语</td>
<td style="text-align:left">王宝强、刘昊然</td>
<td style="text-align:left">2021.02</td>
<td style="text-align:left">一般，但有喜欢的演员</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left"><strong>你好，李焕英</strong></td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">喜剧</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">贾玲、张小斐</td>
<td style="text-align:left">2021.02</td>
<td style="text-align:left">贾玲缅怀母亲，感动</td>
</tr>
<tr>
<td style="text-align:left">6</td>
<td style="text-align:left">盗梦空间</td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left">美国</td>
<td style="text-align:left">动作/悬疑/科幻</td>
<td style="text-align:left">英语</td>
<td style="text-align:left">Leonardo</td>
<td style="text-align:left">2010.9</td>
<td style="text-align:left">猜猜猜</td>
</tr>
<tr>
<td style="text-align:left">7</td>
<td style="text-align:left">唐山大地震</td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">灾难</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">徐帆、张静初、李晨、张子枫</td>
<td style="text-align:left">2010.7</td>
<td style="text-align:left">看张子枫，理解长大后的方登</td>
</tr>
<tr>
<td style="text-align:left">8</td>
<td style="text-align:left">波斯语课</td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left">德国</td>
<td style="text-align:left">剧情/战争</td>
<td style="text-align:left">德语/波斯语</td>
<td style="text-align:left">拉斯·艾丁格</td>
<td style="text-align:left">2020.2</td>
<td style="text-align:left">真实改编</td>
</tr>
<tr>
<td style="text-align:left">9</td>
<td style="text-align:left">非诚勿扰</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">爱情</td>
<td style="text-align:left">普通话/日语</td>
<td style="text-align:left">葛优、舒淇</td>
<td style="text-align:left">2008.12</td>
<td style="text-align:left">葛大爷幽默</td>
</tr>
<tr>
<td style="text-align:left">10</td>
<td style="text-align:left">非诚勿扰2</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">剧情</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">葛优、舒淇</td>
<td style="text-align:left">2010.12</td>
<td style="text-align:left">探讨了一些深度问题</td>
</tr>
<tr>
<td style="text-align:left">11</td>
<td style="text-align:left">发财日记</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">励志/喜剧</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">宋小宝、沙溢、马丽</td>
<td style="text-align:left">2021.2</td>
<td style="text-align:left">有点流水账</td>
</tr>
<tr>
<td style="text-align:left">12</td>
<td style="text-align:left">温暖的抱抱</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">喜剧</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">常远、李沁</td>
<td style="text-align:left">2020.12</td>
<td style="text-align:left">有点尬</td>
</tr>
<tr>
<td style="text-align:left">13</td>
<td style="text-align:left">燕赤霞猎妖传</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">中国</td>
<td style="text-align:left">动作</td>
<td style="text-align:left">普通话</td>
<td style="text-align:left">释小龙</td>
<td style="text-align:left">2021.3</td>
<td style="text-align:left">整体还行</td>
</tr>
<tr>
<td style="text-align:left">14</td>
<td style="text-align:left">Ammonite</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">英国</td>
<td style="text-align:left">爱情/剧情</td>
<td style="text-align:left">英语</td>
<td style="text-align:left">Kate Winslet、Saoirse Ronan</td>
<td style="text-align:left">2020.11</td>
<td style="text-align:left">故事太平</td>
</tr>
</tbody>
</table>
<h3 id="综艺">综艺</h3>
<table>
<thead>
<tr>
<th style="text-align:left">序号</th>
<th style="text-align:left">评分</th>
<th style="text-align:left">片名</th>
<th style="text-align:left">国家</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">语言</th>
<th style="text-align:left">主演</th>
<th style="text-align:left">首播</th>
<th style="text-align:left">备注</th>
</tr>
</thead>
<tbody></tbody>
</table>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Movie List</category>
      </categories>
      <tags>
        <tag>Movies</tag>
      </tags>
  </entry>
  <entry>
    <title>Nanopore_1. Concept, principles, library preparation and issues on sequencing error</title>
    <url>/2020/06/04/Nanopore-sequencingprincipleandrelatedissues/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This paper gives a brief introduction to nanopore sequencing, including the concept, advantages, principles, library preparation, sequencing errors and ways to improve it.</p>
<a id="more"></a>
<h1><a href="https://nanoporetech.com/events/nanopore-seminars-online-series" target="_blank" rel="noopener">Introduction</a></h1>
<h2 id="Concept">Concept</h2>
<p><strong>Nanopore sequencing:</strong> When sequencing nucleic acid molecules, a motor protein is introduced into the nucleic acid molecule through a adaptor. The motor protein contains two functions of helicase and limiting the speed of passage of DNA molecules, and can be combined with channel proteins to allow single-stranded molecules to go through the nanopore, then produced electrical signals are collected in to a ‘.fast5’ file for subsequent base recognition. The flux is increased by multiple nanopores working simultaneously.<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/1.how%20it%20works.png" alt="1.how it works"></p>
<h2 id="Advantages">Advantages</h2>
<ul>
<li>Direct sequencing of native DNA/RNA, or samples that have been amplified with PCR/other methods</li>
<li>REAL Real-time</li>
<li>No capital cost required</li>
<li>Read any length of DNA/RNA - short to ultra-long</li>
<li>Scalable to portable or desktop</li>
<li>Simple &amp; rapid, or automated, library prep</li>
<li>High yields for large genomes</li>
</ul>
<h2 id="Principles">Principles</h2>
<p>At present, nanopore is the only device that uses electrical signals for sequencing.<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/2.principle.png" alt="2.principle"></p>
<p>Three major problems of nanopore technology:</p>
<ul>
<li>materials of nanopore
<ul>
<li>Types of nanopore: 1) biological nanopore; 2) semiconductor nanopore: reusable and not affected by pH etc.</li>
</ul>
</li>
<li>accuracy of base recognition: 1) improve algorithm; 2) change nanopore sensor chip.</li>
<li>control the flow rate of base: motor protein</li>
</ul>
<p>Three kinds of sequencing chips (each channel has four nanopores):</p>
<ul>
<li>126 channels</li>
<li>512 channels</li>
<li>3000 channels<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/3.MinION.png" alt="3.MinION"></li>
</ul>
<h2 id="Library-preparation"><a href="https://nanoporetech.com/prepare" target="_blank" rel="noopener">Library preparation</a></h2>
<p>Library preparation of nanopore sequencing mainly needs to add <code>A</code> base on both sides of tested DNA to make blunt end becomes sticky end, and then add Y adaptor and motor protein.<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/4.library1.png" alt="4.library1"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/4.library2.png" alt="4.library2"></p>
<p>Several questions need to figure out before library preparation?</p>
<ul>
<li>DNA or RNA?</li>
<li>PCR or PCR-free?</li>
<li>add barcode or not?</li>
<li>1D sequencing, 2D sequencing or 1D<sup>2</sup> sequencing? (that is the <code>Read type produced</code> in the information of kits)
<ul>
<li>2D: suspended currently.</li>
<li>accuracy rate of base recognition is higher in 1D<sup>2</sup> than in 1D.<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/5.1d2d2d2.png" alt="5.1d2d2d2"></li>
</ul>
</li>
</ul>
<p>Considering:</p>
<ul>
<li><a href="https://nanoporetech.com/products/kits#tabs-0=targeted" target="_blank" rel="noopener">DNA and RNA sequencing kits</a>: see the differences in input requirement of DNA or RNA.</li>
<li>The number of samples, the DNA or RNA biomass of every sample, the total DNA or RNA biomass every nanopore chip can measure.</li>
</ul>
<h2 id="Sequencing-error">Sequencing error</h2>
<p>One electrical signal of nanopore sequencing recognizes several bases, not one base.<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/6.basecalling1.png" alt="6.basecalling1"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/6.basecalling2.png" alt="6.basecalling2"></p>
<p>Disadvantages of using electrical signals:</p>
<ul>
<li>only single molecule is sequenced, the accuracy is relativly low;</li>
<li>unable to accurately identify the number of homopolymers, insertion and deletion errors exist;</li>
</ul>
<blockquote>
<p>In detail, that is:</p>
<blockquote>
<ul>
<li>The chemical structures of four bases (ATCG) are similar and cannot be distinguished easily;</li>
<li>Each base of each fragment is sequenced only once or twice without error correction;</li>
<li>The signal detected each time is not a single base but several bases;</li>
<li>The occurrence of methylation sites can interfere with the current, making base recognition more complicated;</li>
<li>The influence of chemical reaction system: after sequencing, the reaction system changes with the prolong of sequencing time, which might affect the sequencing results.</li>
</ul>
</blockquote>
</blockquote>
<p>Characteristics of error distribution in nanopore sequencing:</p>
<ul>
<li>single base error；</li>
<li>small insertion and deletion error, mainly the deletion error, e.g. poly A;</li>
<li>the distribution of sequencing errors is not random, e.g. poly A.</li>
</ul>
<p>How to improve the accuracy of nanopore sequencing?</p>
<ul>
<li>improve the performance of nanopore sensor chips (R9.4 -&gt; R10)</li>
<li>using 2D or 1D<sup>2</sup> method in library preparation</li>
<li>improve the algorithm for base recognition</li>
<li>develop base correction algorithm after sequencing</li>
<li>develop new methods, see the below picture.<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/7.newmwthods.png" alt="7.newmethods"></li>
</ul>
<p>Ref:</p>
<blockquote>
<p>Nanopore official website: <a href="https://nanoporetech.com/" target="_blank" rel="noopener">Oxford Nanopore Technologies</a></p>
<blockquote>
<p>webinar_week 1: Nanopore Sequencing 101</p>
</blockquote>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Nanopore</category>
      </categories>
      <tags>
        <tag>Nanopore</tag>
      </tags>
  </entry>
  <entry>
    <title>Nanopore_4.data preprocessing-1.data splitting, basecalling, quality control and filtering</title>
    <url>/2020/06/07/Nanopore4-datapreprocessing/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This paper shows the preprocessing of nanopore sequencing data, including data splitting (using ont_fast5_api, transfer raw data of fast5 format into fastq format, and merge the results into a file), basecalling (using guppy), quality control (using nanoplot) and filtering (using filtlong).</p>
<a id="more"></a>
<h1>Nanopore genome stitching flowchart</h1>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/12.nanoporegenomestitching%20flowchart.png" alt="12.nanoporegenomestitching flowchart"></p>
<h2 id="Introduction-to-HDF5-FAST5-files">Introduction to HDF5 (FAST5) files</h2>
<ul>
<li>The Hierarchical Data Format version 5 <a href="https://www.neonscience.org/about-hdf5" target="_blank" rel="noopener">(HDF5)</a>, is an open source file format that supports large, complex, heterogeneous data. The <a href="https://medium.com/@shiansu/a-look-at-the-nanopore-fast5-format-f711999e2ff6" target="_blank" rel="noopener">FAST5</a> format is a specification over a HDF5 file, imposing a specific structure over the contents of a HDF5 file. These files are used to store the output of nanopore sequencers. The main data is the “squiggles” that represent pico-amp measurements taken around thousands of times a second at the nanopores.</li>
<li>HDF5 (FAST5) can be open by software <a href="https://www.hdfgroup.org/downloads/hdfview/" target="_blank" rel="noopener">HDFView</a>. Generally, it is not necessary. What we need to do is to idenify the base sequence.</li>
</ul>
<h2 id="Data-splitting">Data splitting</h2>
<h3 id="Introduction-to-ont-fast5-api">Introduction to ont_fast5_api</h3>
<p><a href="https://github.com/nanoporetech/ont_fast5_api" target="_blank" rel="noopener">ont_fast5_api</a> is a simple interface to HDF5 files of the Oxford Nanopore .fast5 file format.<br>
It provides:</p>
<ul>
<li>Concrete implementation of the fast5 file schema using the generic h5py library</li>
<li>Plain-english-named methods to interact with and reflect the fast5 file schema</li>
<li><u>Tools to convert between multi_read and single_read formats</u></li>
<li>Tools to compress/decompress raw data in files</li>
</ul>
<h3 id="Using-ont-fast5-api-to-convert-between-multi-read-and-single-read-formats">Using ont_fast5_api to convert between multi_read and single_read formats</h3>
<ul>
<li>single_to_multi_fast5</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">single_to_multi_fast5</span><br><span class="line">    -i, --input_path &lt;(path) folder containing single_read_fast5 files&gt;</span><br><span class="line">    -s, --save_path &lt;(path) to folder <span class="keyword">where</span> multi_read fast5 files will be output&gt;</span><br><span class="line">    [<span class="keyword">optional</span>] -t, --threads &lt;(<span class="built_in">int</span>) <span class="keyword">number</span> of CPU threads to <span class="keyword">use</span>; <span class="keyword">default</span>=<span class="number">1</span>&gt;</span><br><span class="line">    [<span class="keyword">optional</span>] -f, --filename_base &lt;(string) <span class="keyword">name</span> for new multi_read <span class="keyword">file</span>; <span class="keyword">default</span>=<span class="string">"batch"</span> (see note-<span class="number">1</span>)&gt;</span><br><span class="line">    [<span class="keyword">optional</span>] -n, --batch_size &lt;(<span class="built_in">int</span>) <span class="keyword">number</span> of single_reads to <span class="keyword">include</span> <span class="keyword">in</span> each multi_read <span class="keyword">file</span>; <span class="keyword">default</span>=<span class="number">4000</span>&gt;</span><br><span class="line">    [<span class="keyword">optional</span>] --<span class="keyword">recursive</span> &lt;<span class="keyword">if</span> included, recursively search sub-directories for single_read files&gt;</span><br></pre></td></tr></table></figure>
<p>example usage:</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">single_to_multi_fast5 <span class="params">--input_path</span> <span class="string">/data/reads</span> <span class="params">--save_path</span> <span class="string">/data/multi_reads</span></span><br><span class="line">    <span class="params">--filename_base</span> <span class="keyword">batch</span>_output <span class="params">--batch_size</span> 100 <span class="params">--recursive</span></span><br></pre></td></tr></table></figure>
<p>Where /data/reads and/or its subfolders contain single_read .fast5 files. The output will be multi_read fast5 files each containing 100 reads, in the folder: /data/multi_reads with the names: batch_output_0.fast5, batch_output_1.fast5 etc.</p>
<ul>
<li>multi_to_single_fast5</li>
</ul>
<figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">multi_to_single_fast5</span><br><span class="line">    -i, --input_path &lt;(path) folder containing multi_read_fast5 files&gt;</span><br><span class="line">    -s, --save_path &lt;(path) to folder where single_read fast5 files will be output&gt;</span><br><span class="line">    [optional] -t, --threads &lt;(int) number of CPU threads to use; default=1&gt;</span><br><span class="line">    [optional] --recursive &lt;if included, recursively search<span class="built_in"> sub-directories </span>for multi_read files&gt;</span><br></pre></td></tr></table></figure>
<h2 id="Basecalling">Basecalling</h2>
<h3 id="Introduction-to-guppy">Introduction to guppy</h3>
<p>“<a href="https://nanoporetech.com/nanopore-sequencing-data-analysis" target="_blank" rel="noopener">Guppy</a> is a data processing toolkit that contains the Oxford Nanopore Technologies’ <u>basecalling</u> algorithms, and several bioinformatic post-processing features. It is provided as binaries to run on Windows, OS X and Linux platforms, as well as being integrated with MinKNOW, the Oxford Nanopore device control software.”<br>
Early downstream analysis components such as barcoding/demultiplexing, adapter trimming and alignment are contained within Guppy. Furthermore, Guppy now performs modified basecalling (5mC, 6mA and CpG) from the raw signal data, producing an additional FAST5 file of modified base probabilities.<br>
<em>PS: The software is chargeable. if you do sequencing in companies, they will give you fastq files, then there is no need to do this step.</em></p>
<h3 id="Using-guppy-to-do-basecalling">Using guppy to do basecalling</h3>
<p>input file: fast5 file; config file.<br>
output file: fastq file or transformed fast5 file; sequencing_summary.txt; sequence telemetry.js (including the information of temperature/voltage/status of flowcell) and guppy_basecaller_1og-2020-?.log (guppy basecalling software log);</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">guppy_basecaller <span class="comment">--help</span></span><br><span class="line">: Guppy Basecalling Software, (C) Oxford Nanopore Technologies, Limited. Version 3.4.5+fb1fbfb</span><br><span class="line">Usage:</span><br><span class="line"><span class="keyword">With</span> config <span class="keyword">file</span>:</span><br><span class="line">  guppy_basecaller -i &lt;<span class="keyword">input</span> <span class="keyword">path</span>&gt; -s &lt;<span class="keyword">save</span> <span class="keyword">path</span>&gt; -c &lt;config <span class="keyword">file</span>&gt; [options]</span><br><span class="line"><span class="keyword">With</span> flowcell <span class="keyword">and</span> kit <span class="keyword">name</span>:</span><br><span class="line">  guppy_basecaller -i &lt;<span class="keyword">input</span> <span class="keyword">path</span>&gt; -s &lt;<span class="keyword">save</span> <span class="keyword">path</span>&gt; <span class="comment">--flowcell &lt;flowcell name&gt;</span></span><br><span class="line">    <span class="comment">--kit &lt;kit name&gt;</span></span><br><span class="line"><span class="keyword">List</span> supported flowcells <span class="keyword">and</span> kits:</span><br><span class="line">  guppy_basecaller <span class="comment">--print_workflows</span></span><br></pre></td></tr></table></figure>
<p>example usage:</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">guppy_basecaller -i fast5_files/ -s output <span class="params">--config</span> <span class="string">/ifs1/Software/biosoft/ont-guppy-cpu/data/dna_r9.4.1_450bps_fast.cfg</span> -r <span class="params">--num_callers</span> 4 <span class="params">--cpu_threads_per_caller</span> 2 <span class="params">--fast5_out</span></span><br><span class="line">cat output/*<span class="string">.fastq</span> &gt;all.fastq</span><br></pre></td></tr></table></figure>
<p>–flowcell: types of flowcell（FLO-MIN106/FLO-MIN107）<br>
–fast5_out: choice of whether to do fast5 output. the fast5 files here are different input file, they contains recognized bases sequencing<br>
–config: two modes, eg. dna_r9.4.1_450bps_fast.cfg or dna_r9.4.1_450bps_hac.cfg. accuracy rate difference of 1~3%.<br>
–num_callers: number of parallel basecallers to create. each num produce a fastq file.<br>
–cpu_threads_per_caller: number of CPU worker threads per basecaller.s<br>
–compress_fastq: Compress fastq output files with gzip<br>
-r: search for input files recursively.<br>
-q: Maximum number of records per fastq file, 0 means use a single file (per worker, per run id).</p>
<blockquote>
<p>Supplementaty：<a href="https://en.wikipedia.org/wiki/FASTQ_format" target="_blank" rel="noopener">FASTQ format</a><br>
FASTQ format is a text-based format for storing both a biological sequence (usually nucleotide sequence) and its corresponding quality scores. <code>.fastq</code> or <code>.fq</code>. Both the sequence letter and quality score are each encoded with a single ASCII character for brevity.<br>
A FASTQ file normally uses four lines per sequence:<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/13.fastq.png" alt="13.fastq"><br>
Line 1 begins with a ‘@’ character and is followed by a sequence identifier and an optional description (like a FASTA title line).<br>
Line 2 is the raw sequence letters.<br>
Line 3 begins with a ‘+’ character and is optionally followed by the same sequence identifier (and any description) again.<br>
Line 4 encodes the quality values for the sequence in Line 2, and must contain the same number of symbols as letters in the sequence.<br>
Qualiity:<br>
Q20 indicates the error rate is 1%; Q30 indicates the error rate is 0.1%。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/14.phredquality.png" alt="14.phredquality"><br>
currently the quality of nanopore is between 7 and 9.<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/15.qualityref.png" alt="15.qualityref.png"></p>
</blockquote>
<h2 id="Quality-control">Quality control</h2>
<p>Currently the quality of nanopore is between Q7 and Q9 (see the above picture).<br>
Q7 can be used as a standard for data filtering, the average length can be above 20K.</p>
<h3 id="Introduction-to-NanoPlot">Introduction to NanoPlot</h3>
<p><a href="https://github.com/wdecoster/NanoPlot" target="_blank" rel="noopener">NanoPlot</a> can be used for statistical plotting of nanopore data. The input file is in <code>fastq</code> format.<br>
Need to call NanoStat for statistics when plotting.<br>
NanoPlot uses these statistical information for drawing, and eventually generates a web page format file, including histogram of read length, scatter plot of read length and average quality of sequence, etc. At the same time, the software can also plot the statistical file sequencing_summary.txt generated after guppy basecalling.</p>
<h3 id="Using-NanoPlot-to-plot-quality-control-figure">Using NanoPlot to plot quality control figure</h3>
<p>install NanoPlot: better to install NanoPlot on a virtual environment, because different version of NanoPlot needs different python version.<br>
example Usage</p>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">Nanoplot</span> --<span class="comment">summary</span> <span class="comment">sequencing_summary</span><span class="string">.</span><span class="comment">txt</span> --<span class="comment">loglength</span> <span class="literal">-</span><span class="comment">o</span> <span class="comment">summary</span><span class="literal">-</span><span class="comment">plots</span><span class="literal">-</span><span class="comment">log</span><span class="literal">-</span><span class="comment">transformed</span>  </span><br><span class="line"><span class="comment">NanoPlot</span> <span class="literal">-</span><span class="comment">t</span> <span class="comment">2</span> --<span class="comment">fastq</span> <span class="comment">reads1</span><span class="string">.</span><span class="comment">fastq</span><span class="string">.</span><span class="comment">gz</span> <span class="comment">reads2</span><span class="string">.</span><span class="comment">fastq</span><span class="string">.</span><span class="comment">gz</span> --<span class="comment">maxlength</span> <span class="comment">40000</span> --<span class="comment">plots</span> <span class="comment">hex</span> <span class="comment">dot</span></span><br><span class="line"><span class="comment">NanoPlot</span> <span class="literal">-</span><span class="comment">t</span> <span class="comment">12</span> --<span class="comment">color</span> <span class="comment">yellow</span> --<span class="comment">bam</span> <span class="comment">alignment1</span><span class="string">.</span><span class="comment">bam</span> <span class="comment">alignment2</span><span class="string">.</span><span class="comment">bam</span> <span class="comment">alignment3</span><span class="string">.</span><span class="comment">bam</span> --<span class="comment">downsample</span> <span class="comment">10000</span> <span class="literal">-</span><span class="comment">o</span> <span class="comment">bamplots_downsampled</span></span><br></pre></td></tr></table></figure>
<h2 id="Data-flitering">Data flitering</h2>
<p>Unlike second-generation sequencing, nanopre sequencing is single-end sequencing, each data length is different, and does not include a universal adapter, so the data filtering method is completely different from second-generation sequencing such as illumina.<br>
Filtering data is mainly to filter out some fragments that are too short and those with low sequencing quality. In some cases, if a barcode is included, the head and tail need to be cut.<br>
<em>NOTE： After filtering, the result might be worse. Although some fragments are of low quality, they can be helpful to form a whole frame. If you lose them, you might lose some important information. need to compare the results to determine filtering data or not.</em></p>
<h3 id="Introduction-to-Filtlong">Introduction to Filtlong</h3>
<p><a href="https://github.com/rrwick/Filtlong" target="_blank" rel="noopener">Filtlong</a> is a tool for filtering long reads by quality. It can take a set of long reads and produce a smaller, better subset. It uses both read length (longer is better) and read identity (higher is better) when choosing which reads pass the filter.</p>
<h3 id="Using-Filtlong-to-do-data-filtering">Using Filtlong to do data filtering</h3>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">usage: filtlong &#123;OPTIONS&#125; [input_reads]</span><br><span class="line">Filtlon<span class="variable">g:</span> <span class="keyword">a</span> quality filtering tool <span class="keyword">for</span> Nanopore <span class="built_in">and</span> PacBio reads</span><br><span class="line">positional <span class="keyword">argument</span><span class="variable">s:</span></span><br><span class="line">   input_reads                          <span class="built_in">input</span> long reads <span class="keyword">to</span> <span class="keyword">be</span> filtered</span><br><span class="line">optional <span class="keyword">argument</span><span class="variable">s:</span></span><br><span class="line">   output threshold<span class="variable">s:</span></span><br><span class="line">      -t[<span class="keyword">int</span>], --target_bases [<span class="keyword">int</span>]        keep <span class="keyword">only</span> the best reads <span class="keyword">up</span> <span class="keyword">to</span> this many total bases</span><br><span class="line">      -<span class="keyword">p</span>[float], --keep_percent [float]    keep <span class="keyword">only</span> this percentage of the best reads (measured by</span><br><span class="line">                                           bases)</span><br><span class="line">      --min_length [<span class="keyword">int</span>]                   minimum length threshold</span><br><span class="line">      --min_mean_q [float]                 minimum mean quality threshold</span><br><span class="line">      --min_window_q [float]               minimum window quality threshold</span><br><span class="line">   external references (<span class="keyword">if</span> provided, <span class="keyword">read</span> quality will <span class="keyword">be</span> determined using these instead of from the</span><br><span class="line">   Phred scores):</span><br><span class="line">      -<span class="keyword">a</span>[<span class="keyword">file</span>], --assembly [<span class="keyword">file</span>]          reference assembly in FASTA format</span><br><span class="line">      -<span class="number">1</span>[<span class="keyword">file</span>], --illumina_1 [<span class="keyword">file</span>]        reference Illumina reads in FASTQ format</span><br><span class="line">      -<span class="number">2</span>[<span class="keyword">file</span>], --illumina_2 [<span class="keyword">file</span>]        reference Illumina reads in FASTQ format</span><br><span class="line">   score weights (control the relative contribution of each score <span class="keyword">to</span> the final <span class="keyword">read</span> score):</span><br><span class="line">      --length_weight [float]              weight given <span class="keyword">to</span> the length score (defaul<span class="variable">t:</span> <span class="number">1</span>)</span><br><span class="line">      --mean_q_weight [float]              weight given <span class="keyword">to</span> the mean quality score (defaul<span class="variable">t:</span> <span class="number">1</span>)</span><br><span class="line">      --window_q_weight [float]            weight given <span class="keyword">to</span> the window quality score (defaul<span class="variable">t:</span> <span class="number">1</span>)</span><br><span class="line">   <span class="keyword">read</span> manipulation:</span><br><span class="line">      --trim                               trim non-<span class="keyword">k</span>-mer-matching bases from start/end of reads</span><br><span class="line">      --<span class="keyword">split</span> [<span class="keyword">split</span>]                      <span class="keyword">split</span> reads at this many (<span class="built_in">or</span> more) consecutive</span><br><span class="line">                                           non-<span class="keyword">k</span>-mer-matching bases</span><br><span class="line">   other:</span><br><span class="line">      --window_size [<span class="keyword">int</span>]                  size of sliding window used when measuring window quality</span><br><span class="line">                                           (defaul<span class="variable">t:</span> <span class="number">250</span>)</span><br><span class="line">      --<span class="keyword">verbose</span>                            <span class="keyword">verbose</span> output <span class="keyword">to</span> stderr with info <span class="keyword">for</span> each <span class="keyword">read</span></span><br><span class="line">      --<span class="keyword">version</span>                            <span class="keyword">display</span> the program <span class="keyword">version</span> <span class="built_in">and</span> <span class="keyword">quit</span></span><br><span class="line">   -h, --<span class="keyword">help</span>                           <span class="keyword">display</span> this <span class="keyword">help</span> <span class="keyword">menu</span></span><br></pre></td></tr></table></figure>
<p>example usage</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">filtlong --min_length <span class="number">1000</span> --keep_percent <span class="number">90</span> --target_bases <span class="number">500000000</span> input.fastq.gz | gzip &gt; output.fastq.gz</span><br><span class="line">filtlong <span class="number">-1</span> illumina_1.fastq.gz <span class="number">-2</span> illumina_2.fastq.gz --min_length <span class="number">1000</span> --keep_percent <span class="number">90</span> --target_bases <span class="number">500000000</span> --trim --split <span class="number">500</span> input.fastq.gz | gzip &gt; output.fastq.gz</span><br><span class="line">filtlong <span class="number">-1</span> illumina_1.fastq.gz <span class="number">-2</span> illumina_2.fastq.gz --min_length <span class="number">1000</span> --keep_percent <span class="number">90</span> --target_bases <span class="number">500000000</span> --trim --split <span class="number">500</span> input.fastq.gz | gzip &gt; output.fastq.gz</span><br><span class="line">filtlong <span class="number">-1</span> illumina_1.fastq.gz <span class="number">-2</span> illumina_2.fastq.gz --min_length <span class="number">1000</span> --keep_percent <span class="number">90</span> --target_bases <span class="number">500000000</span> --trim --split <span class="number">1000</span> --length_weight <span class="number">10</span> input.fastq.gz | gzip &gt; output.fastq.gz</span><br><span class="line">filtlong <span class="number">-1</span> illumina_1.fastq.gz <span class="number">-2</span> illumina_2.fastq.gz --min_length <span class="number">1000</span> --keep_percent <span class="number">90</span> --target_bases <span class="number">500000000</span> --trim --split <span class="number">100</span> --mean_q_weight <span class="number">10</span> input.fastq.gz | gzip &gt; output.fastq.gz</span><br></pre></td></tr></table></figure>
<p>filtlong --min_length 500 -min_mean_q 7 …/2.rawdata/minion/all.sra.fastq.gz |  gzip &gt;clean.filtlong.fq.gz<br>
–min_length：Discard any read which is shorter than 500 bp.<br>
–min_mean_q 7：minimum mean quality is 7.<br>
–keep_percent 90：Throw out the worst 10% of reads. This is measured by bp, not by read count. So this option throws out the worst 10% of read bases.<br>
–target_bases 500000000：Remove the worst reads until only 500 Mbp remain, useful for very large read sets. If the input read set is less than 500 Mbp, this setting will have no effect.<br>
–trim: Trim bases from the start and end of reads which do not match a k-mer in the reference. This ensures the each read starts and ends with good sequence.<br>
–split 500: Split reads whenever 500 consequence bases fail to match a k-mer in the reference. This serves to remove very poor parts of reads while keeping the good parts. A lower value will split more aggressively and a higher value will be more conservative. --split 1000: This larger split value makes Filtlong less likely to split a read. I.e. a read has to have a lot of consecutive bad bases before it gets split. This helps to keep the output reads longer.</p>
<h1>Examples</h1>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">mkdir 0607</span><br><span class="line">cp -r <span class="string">/ifs1/TestDatas/namikong/0607/</span>* <span class="string">./</span>   <span class="comment">#my data</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#split and merge fast5 files, using ont_fast5_api</span></span><br><span class="line"><span class="comment">##single to multi</span></span><br><span class="line">single_to_multi_fast5 -i fast5_files/ -s multi -n 4000 <span class="params">--recursive</span></span><br><span class="line"><span class="comment">##multi to single</span></span><br><span class="line">multi_to_single_fast5 -i multi/ -s single <span class="params">--recursive</span> -t 6</span><br><span class="line"></span><br><span class="line"><span class="comment">#basecalling, using guppy</span></span><br><span class="line">guppy_basecaller -i fast5_files/ -s output <span class="params">--config</span> dna_r9.4.1_450bps_fast.cfg -r <span class="params">--num_callers</span> 4 <span class="params">--cpu_threads_per_caller</span> 2 <span class="params">--fast5_out</span></span><br><span class="line">cat output/*<span class="string">.fastq</span> &gt;all.fastq</span><br><span class="line">gzip all.fastq <span class="comment">#save space</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#quality control, using NanoPlot</span></span><br><span class="line">conda create -n nanoplot -y -c bioconda nanoplot</span><br><span class="line">conda activate nanoplot</span><br><span class="line">NanoPlot <span class="params">--fastq</span> all.fastq.gz  -t 12 <span class="params">--plots</span> hex dot pauvre kde -o nanoplot</span><br><span class="line"></span><br><span class="line"><span class="comment">#data filtering, using filtlong</span></span><br><span class="line">filtlong <span class="params">--min_length</span> 500 <span class="params">--min_mean_q</span> 90 all.fastq.gz |  gzip &gt;clean.filtlong.fq.gz <span class="comment">#the read length is above 500 bp, the quality is above 10.</span></span><br></pre></td></tr></table></figure>
<p>results<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/16.results1.png" alt="1"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/16.results2.png" alt="2"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/16.results3.png" alt="3"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/16.results4.png" alt="4"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/16.results5.png" alt="5"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/16.results6.png" alt="6"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/16.results7.png" alt="7"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/16.results8.png" alt="8"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Nanopore/16.results9.png" alt="9"></p>
<blockquote>
<p>Tips: put current running project in the background</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctrl+z <span class="comment">#pause the current projects</span></span><br><span class="line"><span class="built_in">jobs</span> <span class="comment">#see current projects</span></span><br><span class="line"><span class="built_in">bg</span> -1 <span class="comment">#run + id of project</span></span><br><span class="line"><span class="built_in">jobs</span> </span><br></pre></td></tr></table></figure>
</blockquote>
<p>Ref:</p>
<blockquote>
<p><a href="https://denbi-nanopore-training-course.readthedocs.io/en/latest/basecalling/basecalling.html" target="_blank" rel="noopener">Basecalling with Guppy</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Nanopore</category>
      </categories>
      <tags>
        <tag>Nanopore</tag>
      </tags>
  </entry>
  <entry>
    <title>Nanopore_5.Rapid identification of pathogenic microorganisms</title>
    <url>/2020/06/09/Nanopore-5-Rapididentificationofpathogenicmicroorganisms/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This paper introduces the principle of rapid identification of pathogenic microorganisms, the advantages and disadvantages of amplicon sequencing and metagenomics, using nanopore sequencing to identify microorganisms (for pure culture sample, using BLAST; for mixed sample, using Kraken2 and braken), and the use of software MEGAN (visualize the blast results).</p>
<a id="more"></a>
<h1>Introduction to taxonomy</h1>
<p>Domain -&gt; Kingdom -&gt; Phylum -&gt; Class -&gt; Order -&gt; Family -&gt; Genus -&gt; Species<br>
Species evolution in nature may be continuous, which is a quantitative concept. Classification is a qualitative concept. Therefore, there will be many special cases in the intermediate state, e.g. the classification is both close to A and close to B.<br>
Species is the basic taxonomic unit, and the concept of species is still a problem that has not yet been fully solved in biology. In higher organisms, species are usually seen as natural populations that can reproduce by crossing each other. Because prokaryotes lack sexual reproduction in a strict sense, it is difficult to determine the concept of “species” in prokaryotes.<br>
At present, strains with DNA hybridization homology above 70% and 16S sequence homology above 97% are generally identified as the same species.<br>
clink <a href="https://www.ncbi.nlm.nih.gov/Taxonomy/taxonomyhome.html/index.cgi?chapter=statistics&amp;uncultured=hide&amp;unspecified=hide" target="_blank" rel="noopener">here</a> to see the current whole number of species and its distribution on different ranks.</p>
<h2 id="Microbial-identification-methods">Microbial identification methods</h2>
<ul>
<li>morphology</li>
<li>physiology</li>
<li>serotyping: e.g. identification of <em>Salmonella</em> in the food industry</li>
<li>DNA base composition: the proportion of each base</li>
<li>DNA hybridization</li>
<li>amplicon sequencing</li>
<li>metagenomic sequencing</li>
</ul>
<p>The rapid identification of microorganisms through genomes is mainly through rapid sequence comparison between sequencing data and known data to find out the differences in genomes and the phylogenetic relationship, and whether they have common or unique genes.</p>
<h3 id="amplicon-sequencing-vs-metagenomics">amplicon sequencing vs. metagenomics</h3>
<p>same point:</p>
<ul>
<li>can be used to identify microorganisms</li>
<li>both qualitatively and quantitively</li>
</ul>
<p>differences：</p>
<ul>
<li>metagenomics: bacteria, fungi, virus, etc; 16S, bacteria</li>
<li>metagenomics: DNA -&gt; sequencing; 16S, DNA -&gt; PCR -&gt; sequencing</li>
<li>metagenomics: whole genome; 16S: only rRNA</li>
<li>metagenomics: high throughput, expensive; 16S: cheap</li>
<li>metagenomics: difficult for data analysis; 16S: relatively easy</li>
</ul>
<p>questions:</p>
<ul>
<li>why there are some differences in species identified by metagenomics and 16S? &lt;= database</li>
<li>why some species can be identified by PCR but can not by metagenomics? &lt;= relative abundance</li>
<li>choose 16S or metagenomics? &lt;= research purpose
<blockquote>
<p><a href="https://www.ebi.ac.uk/metagenomics/" target="_blank" rel="noopener">mNGS</a></p>
</blockquote>
</li>
</ul>
<h3 id="third-generation-metagenome-sequencing">third-generation metagenome sequencing</h3>
<p>advantages:</p>
<ul>
<li>get 16S or the whole ribosomal operon, high resolution</li>
<li>library preparation and sequencing faster</li>
<li>longer reads length, easier to reach saturation (the number of reads)</li>
</ul>
<h1>Taxonomy database</h1>
<p>NCBI: <a href="https://www.ncbi.nlm.nih.gov/taxonomy" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/taxonomy</a></p>
<ul>
<li>nt: nucleotide database</li>
<li>nr: protein database</li>
</ul>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment">#download nt Database</span></span><br><span class="line">update_blastdb.pl <span class="params">--help</span> <span class="comment">#see the usage</span></span><br><span class="line">update_blastdb.pl <span class="params">--showall</span> <span class="comment">#see all database in NCBI</span></span><br><span class="line">update_blastdb.pl nt <span class="comment">#download</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#see the id in nt Database</span></span><br><span class="line">grep <span class="string">"&gt;"</span> <span class="string">/ifs1/Database/nt_makeblastdb/nt</span> | le</span><br></pre></td></tr></table></figure>
<h2 id="Principle">Principle</h2>
<p>unknown sequence -&gt; blast in NCBI nt/nr databse -&gt; get Accession ID -&gt; get taxid -&gt; get taxonomy information</p>
<h2 id="Online-tools">Online tools</h2>
<p>BLAST: <a href="https://blast.ncbi.nlm.nih.gov/Blast.cgi" target="_blank" rel="noopener">https://blast.ncbi.nlm.nih.gov/Blast.cgi</a><br>
or use BLAST in Linux (see below)</p>
<h1>Microorganism identification</h1>
<h2 id="Pure-culture-sample">Pure-culture sample</h2>
<p>Using BLAST<br>
<a href="https://www.exoscale.com/syslog/blast/" target="_blank" rel="noopener">Bioinformatics: introduction to using BLAST with Ubuntu</a></p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">#stats the unknow sequences</span><br><span class="line">seqkit stats nanopore.fastq.gz</span><br><span class="line"></span><br><span class="line">#<span class="keyword">sort</span> long <span class="keyword">read</span> sequence and output fasta <span class="keyword">file</span></span><br><span class="line">seqkit <span class="keyword">sort</span> -<span class="keyword">l</span> -r nanopore.fastq.gz | head -4 | seqkit fq2fa &gt;<span class="keyword">query</span>.fasta</span><br><span class="line">seqkit stats <span class="keyword">query</span>.fasta</span><br><span class="line"></span><br><span class="line">#blast to nt database: /ifs1/Database/nt_makeblastdb/nt</span><br><span class="line">blastn -<span class="keyword">query</span> <span class="keyword">query</span>.fasta -<span class="keyword">db</span> /ifs1/Database/nt_makeblastdb/nt -<span class="keyword">out</span> blastn.<span class="keyword">out</span> -outfmt 0 -evalue 1e-5 -num_threads 1</span><br><span class="line">##change -num_threads such <span class="keyword">as</span> 64 to <span class="keyword">run</span> faster, you can put `time` <span class="keyword">on</span> the top to stats the <span class="keyword">run</span> time.</span><br><span class="line"></span><br><span class="line">#see the results</span><br><span class="line"><span class="keyword">cat</span>  blastn.<span class="keyword">out</span></span><br><span class="line"></span><br><span class="line">#visualize the result using MEGAN</span><br><span class="line">##<span class="keyword">open</span> MEGAN -&gt; import blast <span class="keyword">file</span>: blastn.<span class="keyword">out</span> -&gt; <span class="keyword">plot</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>other software: diamond, etc.</p>
</blockquote>
<p>MEGAN (MEtaGenome ANalyzer) is a new computer program that allows laptop analysis of large metagenomic datasets. In a preprocessing step, the set of DNA reads (or contigs) is compared against databases of known sequences using BLAST or another comparison tool. MEGAN can then be used to compute and interactively explore the taxonomical content of the dataset, employing the NCBI taxonomy to summarize and order the results.</p>
<ul>
<li>download: <a href="https://software-ab.informatik.uni-tuebingen.de/download/megan6/welcome.html" target="_blank" rel="noopener">https://software-ab.informatik.uni-tuebingen.de/download/megan6/welcome.html</a></li>
</ul>
<h2 id="Mixed-sample">Mixed sample</h2>
<h3 id="Kraken2">Kraken2</h3>
<p>Kraken2 is the newest version of Kraken, <u>a taxonomic classification system</u> using exact k-mer matches to achieve high accuracy and fast classification speeds. This classifier matches each k-mer within a query sequence to the lowest common ancestor (LCA) of all genomes containing the given k-mer. The k-mer assignments inform the classification algorithm.<br>
download software: <a href="https://anaconda.org/bioconda/kraken2" target="_blank" rel="noopener">https://anaconda.org/bioconda/kraken2</a><br>
download database: <a href="ftp://ftp.ccb.jhu.edu/pub/data/kraken2_dbs/">ftp://ftp.ccb.jhu.edu/pub/data/kraken2_dbs/</a><br>
usage:</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">Need <span class="built_in">to</span> specify input filenames!</span><br><span class="line">Usage: kraken2 [options] &lt;filename(s)&gt;</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  <span class="comment">--db NAME               Name for Kraken 2 DB</span></span><br><span class="line">                          (default: <span class="literal">none</span>)</span><br><span class="line">  <span class="comment">--threads NUM           Number of threads (default: 1)</span></span><br><span class="line">  <span class="comment">--quick                 Quick operation (use first hit or hits)</span></span><br><span class="line">  <span class="comment">--unclassified-out FILENAME</span></span><br><span class="line">                          Print unclassified sequences <span class="built_in">to</span> filename</span><br><span class="line">  <span class="comment">--classified-out FILENAME</span></span><br><span class="line">                          Print classified sequences <span class="built_in">to</span> filename</span><br><span class="line">  <span class="comment">--output FILENAME       Print output to filename (default: stdout); "-" will</span></span><br><span class="line">                          suppress <span class="keyword">normal</span> output</span><br><span class="line">  <span class="comment">--confidence FLOAT      Confidence score threshold (default: 0.0); must be</span></span><br><span class="line">                          <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">1</span>].</span><br><span class="line">  <span class="comment">--minimum-base-quality NUM</span></span><br><span class="line">                          Minimum base quality used <span class="keyword">in</span> classification (def: <span class="number">0</span>,</span><br><span class="line">                          only <span class="keyword">effective</span> <span class="keyword">with</span> FASTQ input).</span><br><span class="line">  <span class="comment">--report FILENAME       Print a report with aggregrate counts/clade to file</span></span><br><span class="line">  <span class="comment">--use-mpa-style         With --report, format report output like Kraken 1's</span></span><br><span class="line">                          kraken-mpa-report</span><br><span class="line">  <span class="comment">--report-zero-counts    With --report, report counts for ALL taxa, even if</span></span><br><span class="line">                          counts are <span class="literal">zero</span></span><br><span class="line">  <span class="comment">--memory-mapping        Avoids loading database into RAM</span></span><br><span class="line">  <span class="comment">--paired                The filenames provided have paired-end reads</span></span><br><span class="line">  <span class="comment">--use-names             Print scientific names instead of just taxids</span></span><br><span class="line">  <span class="comment">--gzip-compressed       Input files are compressed with gzip</span></span><br><span class="line">  <span class="comment">--bzip2-compressed      Input files are compressed with bzip2</span></span><br><span class="line">  <span class="comment">--minimum-hit-groups NUM</span></span><br><span class="line">                          Minimum <span class="built_in">number</span> <span class="keyword">of</span> hit groups (overlapping k-mers</span><br><span class="line">                          sharing <span class="keyword">the</span> same minimizer) needed <span class="built_in">to</span> make <span class="keyword">a</span> call</span><br><span class="line">                          (default: <span class="number">2</span>)</span><br><span class="line">  <span class="comment">--help                  Print this message</span></span><br><span class="line">  <span class="comment">--version               Print version information</span></span><br><span class="line"></span><br><span class="line">If <span class="literal">none</span> <span class="keyword">of</span> <span class="keyword">the</span> *-compressed flags are specified, <span class="keyword">and</span> <span class="keyword">the</span> filename provided</span><br><span class="line">is <span class="keyword">a</span> regular <span class="built_in">file</span>, automatic <span class="built_in">format</span> detection is attempted.</span><br></pre></td></tr></table></figure>
<h3 id="Bracken">Bracken</h3>
<p>Bracken (Bayesian Reestimation of Abundance with KrakEN) is a highly accurate statistical method that computes the abundance of species in DNA sequences from a metagenomics sample. Braken uses the taxonomy labels assigned by Kraken, a highly accurate metagenomics classification algorithm, to estimate the number of reads originating from each species present in a sample. Kraken classifies reads to the best matching location in the taxonomic tree, but does not estimate abundances of species. <u>We use the Kraken database itself to derive probabilities that describe how much sequence from each genome is identical to other genomes in the database, and combine this information with the assignments for a particular sample to estimate abundance at the species level, the genus level, or above.</u> Combined with the Kraken classifier, Bracken produces accurate species- and genus-level abundance estimates even when a sample contains two or more near-identical species.<br>
see the manual: <a href="https://ccb.jhu.edu/software/bracken/" target="_blank" rel="noopener">https://ccb.jhu.edu/software/bracken/</a></p>
<h3 id="Use-cases">Use cases</h3>
<p>Using Kraken2 and Bracken</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">time kraken2 --db <span class="regexp">/ifs1/</span>Database<span class="regexp">/metagenomics/</span>database<span class="regexp">/minikraken2_v1_8GB/</span> --threads <span class="number">4</span> <span class="regexp">/ifs1/</span>TestDatas<span class="regexp">/namikong/</span><span class="number">0609</span><span class="regexp">/data/</span>SRR9847857.sra.fastq --report report.xls --output output.txt</span><br><span class="line"><span class="regexp">/ifs1/</span>Software<span class="regexp">/biosoft/</span>Bracken<span class="regexp">/bracken -d /i</span>fs1<span class="regexp">/Database/m</span>etagenomics<span class="regexp">/database/mi</span>nikraken2_v1_8GB<span class="regexp">/ -i report.xls -o bracken.report -t 8</span></span><br></pre></td></tr></table></figure>
<p>sample reports<br>
The output of kraken-report (<code>report.xls</code>) is tab-delimited, with one line per taxon. The fields of the output, from left-to-right, are as follows:</p>
<ul>
<li>Percentage of reads covered by the clade rooted at this taxon</li>
<li>Number of reads covered by the clade rooted at this taxon</li>
<li>Number of reads assigned directly to this taxon</li>
<li>A rank code, indicating (U)nclassified, (D)omain, (K)ingdom, §hylum, ©lass, (O)rder, (F)amily, (G)enus, or (S)pecies. All other ranks are simply ‘-’.</li>
<li>NCBI taxonomy ID</li>
<li>indented scientific name</li>
</ul>
<p>Bracken Output File Format:(<code>bracken.report</code>)<br>
(bracken output file; tab-delimited columns)</p>
<ul>
<li>Name</li>
<li>Taxonomy ID</li>
<li>Level ID (S=Species, G=Genus, O=Order, F=Family, P=Phylum, K=Kingdom)</li>
<li>Kraken Assigned Reads</li>
<li>Added Reads with Abundance Reestimation</li>
<li>Total Reads after Abundance Reestimation</li>
<li>Fraction of Total Reads</li>
</ul>
<blockquote>
<p>tips:<br>
ll -rt #sort by time</p>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Nanopore</category>
      </categories>
      <tags>
        <tag>Nanopore</tag>
      </tags>
  </entry>
  <entry>
    <title>Nanopore_3.Install packages and download sequencing data</title>
    <url>/2020/06/06/Nanopore3-installsoftwaresanddownloaddata/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This paper introduces how to install packages using conda and download ‘sra’ sequencing data on Linux.</p>
<a id="more"></a>
<h1>Software for data analysis</h1>
<h2 id="Sources">Sources</h2>
<ul>
<li><a href="https://github.com/nanoporetech/" target="_blank" rel="noopener">Official website of Oxford Nanopore Technologies</a></li>
<li><a href="https://nanoporetech.com/community" target="_blank" rel="noopener">Nanopore community</a></li>
<li><a href="https://nanoporetech.com/resource-centre#resource-centre=%7B%22tags%22%3A%5B%7B%22value%22%3A%22Tools%22%2C%22checked%22%3A2%7D%5D%7D&amp;resource-centre-panel-0=%7B%22currentPage%22%3A0%2C%22totalPages%22%3A14%2C%22searchIndex%22%3A%22cws_english_resources_en_featured_desc%22%7D" target="_blank" rel="noopener">Nanopore resource center - Tools</a></li>
</ul>
<h2 id="Common-software">Common software</h2>
<ul>
<li>Base recognition: minknow, albacore, guppy, etc.</li>
<li>Quality control: NanoQC, minion_QC, seqkit, seqtk, nanoplot, etc.</li>
<li>Data filtering: NanoFilt, filtlong, porechop, etc.</li>
<li>Sequence alignment: minimap2, nglmr, last, graphmap, marginalign, etc.</li>
<li>Genome Stitching: canu, flye, miniasm, wtdbg2, smartdenovo, NextDenovo, tulip, etc.</li>
<li>Base error correction: racon, pilon, medaka, nextpolish, etc.</li>
<li>Mutation detection: sniffles, nanosv, longshot, nanovar, etc.</li>
</ul>
<h1>Installation</h1>
<p>search the name of software in <a href="https://bioconda.github.io/" target="_blank" rel="noopener">bioconda</a>, then you will see how to install them.</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">conda <span class="keyword">install </span>-y <span class="keyword">bwa </span>samtools <span class="keyword">bcftools </span><span class="keyword">sra-tools </span>seqkit minimap2 miniasm seqtk</span><br><span class="line">conda create -n medaka -c conda-forge -c <span class="keyword">bioconda </span>medaka</span><br><span class="line">conda <span class="keyword">install </span>-y pomoxis</span><br><span class="line">conda <span class="keyword">install </span>-c <span class="keyword">bioconda </span><span class="string">"pychopper&gt;=2.0"</span></span><br><span class="line">conda <span class="keyword">install </span>-c <span class="keyword">bioconda </span>ont-tombo</span><br><span class="line">conda <span class="keyword">install </span>-y canu flye</span><br><span class="line">conda <span class="keyword">install </span>-c <span class="keyword">bioconda </span>nglmr</span><br><span class="line">conda create -n nanoplot -y -c <span class="keyword">bioconda </span>nanoplot</span><br></pre></td></tr></table></figure>
<h1>Download sequencing data</h1>
<h2 id="SRA-database"><a href="https://www.ncbi.nlm.nih.gov/sra" target="_blank" rel="noopener">SRA database</a></h2>
<p>Sequence Read Archive (SRA) data, available through multiple cloud providers and NCBI servers, is the largest publicly available repository of high throughput sequencing data. The archive accepts data from all branches of life as well as metagenomic and environmental surveys.<br>
<a href="https://www.ncbi.nlm.nih.gov/sra/docs/submitmeta/" target="_blank" rel="noopener">Anatomy of SRA data</a>:</p>
<ul>
<li>Studies: accession in the form of SRP#</li>
<li>Experiments: accession in the form of SRX#</li>
<li>Samples: accession in the form of SRS#</li>
<li>Runs: accession in the form of SRR#</li>
<li>SUBMISSION has a non-public accession in the form of SRA#</li>
</ul>
<h2 id="Download-PRJNA422511">Download <a href="https://www.ncbi.nlm.nih.gov/bioproject/PRJNA422511" target="_blank" rel="noopener">PRJNA422511</a></h2>
<p>Use <a href="http://ncbi.github.io/sra-tools/" target="_blank" rel="noopener">sra-tools</a> to manage SRA database</p>
<ul>
<li>frequencetly used tools:
<ul>
<li><a href="https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?view=toolkit_doc&amp;f=prefetch" target="_blank" rel="noopener">prefetch</a>: download sra data</li>
<li><a href="http://ncbi.github.io/sra-tools/fastq-dump.html" target="_blank" rel="noopener">fastq-dump</a>: transfer the form of data from sra to fastq</li>
<li>fasterq-dump: faster than fastq-dump</li>
</ul>
</li>
</ul>
<p>Use <a href="http://asperasoft.com/" target="_blank" rel="noopener">aspera</a> to download sequencing data ultra fast<br>
install aspera:<br>
<code>conda install -c hcc aspera-cli</code><br>
or</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">wget https:<span class="comment">//download.asperasoft.com/download/sw/connect/3.8.1/ibm-aspera-connect-3.8.1.161274-linux-g2.12-64.tar.gz</span></span><br><span class="line">tar -zxvf ibm-aspera-connect<span class="number">-3.8</span><span class="number">.1</span><span class="number">.161274</span>-linux-g2<span class="number">.1264</span>.tar.gz</span><br><span class="line">sh aspera-connect<span class="number">-3.7</span><span class="number">.4</span><span class="number">.147727</span>-linux<span class="number">-64.</span>sh</span><br></pre></td></tr></table></figure>
<p>Download:</p>
<ul>
<li><a href="https://www.ncbi.nlm.nih.gov/books/NBK179288/" target="_blank" rel="noopener">Entrez Direct</a>
<ul>
<li>esearch: perform a new Entrez search using terms in indexed fields</li>
<li>efetch:  download records or reports in a designated format</li>
</ul>
</li>
</ul>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">esearch -<span class="keyword">db</span> sra -<span class="keyword">query</span> PRJNA422511 | efetch -<span class="keyword">format</span> runinfo &gt; info.csv</span><br><span class="line">cut -<span class="keyword">d</span> , -f 1 info.csv | grep <span class="string">"SRR"</span> | awk '&#123;<span class="keyword">print</span> <span class="string">"prefetch "</span><span class="variable">$1</span> <span class="string">" -O ./ "</span>&#125;' &gt;prefetch.<span class="keyword">sh</span></span><br><span class="line"><span class="keyword">sh</span> prefetch.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Nanopore</category>
      </categories>
      <tags>
        <tag>Nanopore</tag>
      </tags>
  </entry>
  <entry>
    <title>Nanopore_7.Genome stitching (of nanopore data)</title>
    <url>/2020/06/11/Nanopore7-genomestitching/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This paper introduces different stitching software, how to use them to stitch genome of nanopore data, and how to statistic and evaluate the stitch results.</p>
<a id="more"></a>
<h1>Several questions about genome stitching?</h1>
<ul>
<li>why genome can’t be stitched into the whole one?</li>
<li>the factors affecting the genome stitching?</li>
<li>what are advantages and disadvantages of using second and third generation sequencing data for genome stitching?</li>
<li>what are the effects of different stitching strategies on the results?</li>
<li>what are the differences among different stitching software and which one should we choose?</li>
<li>how to get the best result of genome stitching?</li>
<li>how to evaluate the accuracy of the stitching result?</li>
<li>can i stitch a high-quality genomic sequence?</li>
</ul>
<h2 id="Current-main-problems-of-genome-stitching">Current main problems of genome stitching</h2>
<ul>
<li>the effect of <a href="https://en.wikipedia.org/wiki/Repeated_sequence_%28DNA%29" target="_blank" rel="noopener">repeated sequences</a>: 90% of the regions are repeated sequences</li>
<li>the effect of <a href="https://en.wikipedia.org/wiki/Polyploidy" target="_blank" rel="noopener">polyploidy</a></li>
<li>the effect of sequencing errors</li>
</ul>
<h2 id="Advantages-of-third-generation-sequencing-data-for-genome-stitching">Advantages of third generation sequencing data for genome stitching</h2>
<ul>
<li>ultra long reads
<ul>
<li>solve the problem of repeated sequences</li>
<li>solve the problem of multi phase<br>
As the length of reads increases, fewer reads are needed to cover the same size genome. reduced reads, faster assembly speed, and increased assembly accuracy.</li>
</ul>
</li>
<li>ultra high throughput: single chip can output more than 300G data.</li>
</ul>
<h2 id="Effects-of-different-stitching-strategies-on-the-results">Effects of different stitching strategies on the results</h2>
<ul>
<li>comparison of different stitching algorithms
<ul>
<li>de Brujin graph (dbg) or k-mer approach: Chop the reads into k-mers -&gt; Construct DBG from k-mers -&gt; Representing a sequence in terms of its k-mer components -&gt; Find Eulerian path in the graph -&gt; Derive the genome sequence from the graph</li>
<li>overlap layout consensus (OLC): an assembly method that takes all reads and finds overlaps between them, then builds a consensus sequence from the aligned overlapping reads</li>
</ul>
</li>
<li>comparison between de novo stitching and reference sequence stitching
<ul>
<li>Denovo</li>
<li>basing on reference sequence (only for viruses)</li>
</ul>
</li>
</ul>
<h2 id="Different-stitching-software">Different stitching software</h2>
<p>comparing the stitching results of different software, the minority follows the majority.</p>
<ul>
<li><a href="https://github.com/fenderglass/Flye" target="_blank" rel="noopener">flye</a>: de novo, for pacbio and nanopore data; output files: assembly.fasta, assembly_graph.{gfa|gv}, and assembly_info.txt.</li>
<li><a href="https://canu.readthedocs.io/en/latest/" target="_blank" rel="noopener">canu</a>: for pacbio and nanopore data; steps: correct -&gt; trim -&gt; assemble; time consuming. ※</li>
<li><a href="http://wgs-assembler.sourceforge.net/wiki/index.php/Celera_Assembler_Terminology" target="_blank" rel="noopener">miniasm</a>: based on OLC;<br>
no correction process, high base error rate, the stitched genome may be smaller or much smaller than the real genome.</li>
<li><a href="https://github.com/ruanjue/smartdenovo" target="_blank" rel="noopener">smartdenovo</a>: de novo, for pacbio and nanopore data</li>
<li><a href="https://github.com/ruanjue/wtdbg2" target="_blank" rel="noopener">wtdbg2</a>: de novo, for pacbio and nanopore data. ※</li>
<li><a href="https://github.com/Nextomics/NextDenovo" target="_blank" rel="noopener">NextDenovo</a>: de novo , for TGS</li>
<li>tulip</li>
<li><a href="https://github.com/xiaochuanle/NECAT" target="_blank" rel="noopener">necat</a>: de novo, for nanopore data</li>
<li><a href="https://github.com/alekseyzimin/masurca" target="_blank" rel="noopener">masurca</a></li>
</ul>
<h2 id="genome-stitching-of-nanopore-data">genome stitching of nanopore data</h2>
<ul>
<li>correct (TGS) -&gt; assemble -&gt; correct (SGS): slow</li>
<li>assemble (TGS) -&gt; correct (SGS): fast</li>
</ul>
<h2 id="how-to-evaluate-the-accuracy-of-the-stitching-result">how to evaluate the accuracy of the stitching result?</h2>
<ul>
<li>statistics: <code>fa *.fasta</code>; see total number, total length and <a href="https://www.molecularecologist.com/2017/03/whats-n50/" target="_blank" rel="noopener">N50</a>/N90</li>
<li>evaluate: use <a href="http://bioinf.spbau.ru/quast" target="_blank" rel="noopener">quast</a> to select the best result</li>
</ul>
<h2 id="Example-stitching-the-genome-of-bacteria">Example: stitching the genome of bacteria</h2>
<p><a href="https://www.ncbi.nlm.nih.gov/sra/?term=SRR8608880" target="_blank" rel="noopener">SRR8608880</a></p>
<figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta">#download the data</span></span><br><span class="line"><span class="meta">#https://www.ncbi.nlm.nih.gov/bioproject/PRJNA523610</span></span><br><span class="line"><span class="meta">#esearch -db sra -query PRJNA523610 | efetch -format runinfo &gt; info.csv</span></span><br><span class="line"><span class="meta">#cut -d , -f 1 info.csv | grep "SRR" | awk '&#123;print "prefetch "$1&#125;'</span></span><br><span class="line">prefetch SRR8608860</span><br><span class="line"></span><br><span class="line"><span class="meta">#convert sra to fastq</span></span><br><span class="line">fasterq-dump SRR8608880.sra</span><br><span class="line">seqkit stats SRR8608880.sra.fastq</span><br><span class="line"></span><br><span class="line"><span class="meta">#quality control</span></span><br><span class="line">conda activate nanoplot</span><br><span class="line">NanoPlot --fastq SRR8608880.sra.fastq -t <span class="number">12</span> --plots hex dot pauvre kde -o nanoplot</span><br><span class="line">conda deactivate</span><br><span class="line"></span><br><span class="line"><span class="meta">#filtering</span></span><br><span class="line">filtlong --min_length <span class="number">500</span> --min_mean_q <span class="number">90</span> SRR8608880.fastq |  gzip &gt;clean.filtlong.fq.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#quality control again or not</span></span><br><span class="line">conda activate nanoplot</span><br><span class="line">NanoPlot --fastq clean.filtlong.fq.gz -t <span class="number">12</span> --plots hex dot pauvre kde -o nanoplot1</span><br><span class="line">conda deactivate</span><br><span class="line"></span><br><span class="line"><span class="meta">#stitching</span></span><br><span class="line"><span class="meta">##using flye</span></span><br><span class="line">/ifs1/Software/bin/flye --nano-raw clean.filtlong.fq.gz -g <span class="number">4.6</span>m -o flye -t <span class="number">15</span> -i <span class="number">3</span></span><br><span class="line"><span class="meta">###assembly.fasta</span></span><br><span class="line"></span><br><span class="line"><span class="meta">##using miniasm</span></span><br><span class="line">minimap2 -x ava-ont -t <span class="number">12</span> clean.filtlong.fq.gz clean.filtlong.fq.gz | gzip <span class="number">-1</span> &gt;reads.paf.gz</span><br><span class="line">miniasm -f clean.filtlong.fq.gz reads.paf.gz &gt;reads.gfa</span><br><span class="line">gfatools gfa2fa reads.gfa &gt;miniasm.fa</span><br><span class="line"><span class="meta">###miniasm.fa</span></span><br><span class="line"></span><br><span class="line"><span class="meta">##using smartdenovo</span></span><br><span class="line">/ifs1/Software/biosoft/smartdenovo/wtpre -J <span class="number">500</span> clean.filtlong.fq.gz | gzip -c <span class="number">-1</span> &gt;smartdenovo.fa.gz</span><br><span class="line"><span class="meta">###smartdenovo.fa.gz</span></span><br><span class="line"></span><br><span class="line"><span class="meta">##using wtdbg2</span></span><br><span class="line"><span class="meta">##git clone https://github.com/ruanjue/wtdbg2</span></span><br><span class="line"><span class="meta">##cd wtdbg2 &amp;&amp; make</span></span><br><span class="line"><span class="meta">##cd wtdbg2_result</span></span><br><span class="line"><span class="meta">##../software/wtdbg2/wtdbg2.pl -t 12 -x ont -g 4.7m -o wtdbg2 ../clean.filtlong0611.fq.gz</span></span><br><span class="line"><span class="meta">#or</span></span><br><span class="line">/ifs1/Software/biosoft/wtdbg2/wtdbg2.pl -t <span class="number">12</span> -x ont -g <span class="number">4.7</span>m -o wtdbg2 clean.filtlong.fq.gz</span><br><span class="line"><span class="meta">###wtdbg2.cns.fa</span></span><br><span class="line"></span><br><span class="line"><span class="meta">##using canu</span></span><br><span class="line">time canu -d canu -p canu genomeSize=<span class="number">4.7</span>m maxThreads=<span class="number">4</span> -nanopore-raw clean.filtlong.fq.gz &gt;canu.log  </span><br><span class="line"><span class="meta">###canu1.contigs.fasta</span></span><br><span class="line"></span><br><span class="line"><span class="meta">##using NextDenovo -&gt; run at python=2.7</span></span><br><span class="line"><span class="meta">#conda create -n python2 python=2.7</span></span><br><span class="line">conda activate python2</span><br><span class="line"><span class="meta">#pip install psutil</span></span><br><span class="line"><span class="meta">#wget https://github.com/Nextomics/NextDenovo/releases/download/v2.0-beta.1/NextDenovo.tgz</span></span><br><span class="line"><span class="meta">#tar -zxvf NextDenovo.tgz</span></span><br><span class="line">ls clean.filtlong.fq.gz &gt;input.fofn</span><br><span class="line">cp NextDenovo/doc/run.cfg .</span><br><span class="line">nextDenovo run.cfg</span><br><span class="line">conda deactivate</span><br><span class="line"><span class="meta">###01_rundir/03.ctg_graph/01.ctg_graph.sh.work/ctg_graph00/nextgraph.assembly.con</span></span><br><span class="line">tig.fasta</span><br><span class="line"></span><br><span class="line"><span class="meta">#make statistics</span></span><br><span class="line">fa ‘results file’</span><br><span class="line"></span><br><span class="line"><span class="meta">#choose the best results, using quast</span></span><br><span class="line">/ifs1/Software/biosoft/quast<span class="number">-5.0</span><span class="number">.2</span>/quast.py -r miniasm/miniasm.fa smartdenovo/smartdenovo.fa.gz wtdbg2/wtdbg2.cns.fa flye/assembly.fasta nextdenovo/<span class="number">01</span>_rundir/<span class="number">03.</span>ctg_graph/<span class="number">01.</span>ctg_graph.sh.work/ctg_graph00/nextgraph.assembly.contig.fasta -o quast</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Nanopore</category>
      </categories>
      <tags>
        <tag>Nanopore</tag>
      </tags>
  </entry>
  <entry>
    <title>Nanopore_8.Mixed stitching (of SGS and TGS data)</title>
    <url>/2020/06/12/Nanopore7-mixedstitching/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This paper introduces the stitching of illumina sequecning data (1.only use illumina data; 2.illumina + ONT), and use <code>quast</code> and <code>BUSCO</code> to evaluate the stitching results.</p>
<a id="more"></a>
<h1>training</h1>
<h2 id="stitch-COVID-19-genome-using-flye">stitch COVID-19 genome using flye</h2>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/ifs1/</span>Software<span class="regexp">/bin/</span>flye --nano-raw <span class="regexp">/ifs1/</span>TestDatas<span class="regexp">/namikong/</span><span class="number">0610</span><span class="regexp">/ncov/</span>ERR4208070.sra.fastq --genome-<span class="keyword">size</span> <span class="number">30</span>k --out-dir ncov</span><br></pre></td></tr></table></figure>
<p>failed! cannot stitch virus genome using de nova.</p>
<h2 id="extract-the-longest-300-sequences-from-SRR8608880-sra-fastq-and-stitch-the-sequences-using-flye">extract the longest 300 sequences from SRR8608880.sra.fastq and stitch the sequences using flye</h2>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">seqkit <span class="keyword">sort</span> -l -r <span class="regexp">/ifs1/</span>TestDatas<span class="regexp">/namikong/</span><span class="number">0611</span><span class="regexp">/rawdata/</span>SRR8608880.sra.fastq | head -<span class="number">1200</span> &gt;first300.fastq</span><br><span class="line"><span class="regexp">/ifs1/</span>Software<span class="regexp">/bin/</span>flye --nano-raw first300.fastq --genome-<span class="keyword">size</span> <span class="number">4.6</span>m --out-dir result_300</span><br></pre></td></tr></table></figure>
<h2 id="extract-0-1-0-2-and-0-3-data-from-SRR8608880-sra-fastq-and-stitch-the-sequences-using-flye">extract 0.1, 0.2 and 0.3 data from SRR8608880.sra.fastq and stitch the sequences using flye</h2>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#10%</span></span><br><span class="line">seqkit sample -p <span class="number">0.1</span> <span class="regexp">/ifs1/</span>TestDatas<span class="regexp">/namikong/</span><span class="number">0611</span><span class="regexp">/rawdata/</span>SRR8608880.sra.fastq &gt;p10.fastq</span><br><span class="line"><span class="regexp">/ifs1/</span>Software<span class="regexp">/bin/</span>flye --nano-raw p10.fastq --genome-size <span class="number">4.6</span>m --out-dir p10</span><br><span class="line"><span class="comment">#20%</span></span><br><span class="line">seqkit sample -p <span class="number">0.2</span> <span class="regexp">/ifs1/</span>TestDatas<span class="regexp">/namikong/</span><span class="number">0611</span><span class="regexp">/rawdata/</span>SRR8608880.sra.fastq &gt;p20.fastq</span><br><span class="line"><span class="regexp">/ifs1/</span>Software<span class="regexp">/bin/</span>flye --nano-raw p20.fastq --genome-size <span class="number">4.6</span>m --out-dir p20</span><br><span class="line"><span class="comment">#30%</span></span><br><span class="line">seqkit sample -p <span class="number">0.3</span> <span class="regexp">/ifs1/</span>TestDatas<span class="regexp">/namikong/</span><span class="number">0611</span><span class="regexp">/rawdata/</span>SRR8608880.sra.fastq &gt;p30.fastq</span><br><span class="line"><span class="regexp">/ifs1/</span>Software<span class="regexp">/bin/</span>flye --nano-raw p30.fastq --genome-size <span class="number">4.6</span>m --out-dir p30</span><br></pre></td></tr></table></figure>
<h2 id="download-referenc-sequence-NC-003143-1">download referenc sequence NC_003143.1</h2>
<p><a href="https://www.ncbi.nlm.nih.gov/nuccore/NC_003143.1/" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/nuccore/NC_003143.1/</a></p>
<h2 id="get-consensus-sequence-basing-on-the-reference-sequence-compare-reference-sequence-consensus-sequence-and-de-novo-sequences">get consensus sequence basing on the reference sequence, compare reference sequence, consensus sequence and de novo sequences</h2>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#alignment, using minimap</span></span><br><span class="line">minimap2 -d co92.min co92.fna</span><br><span class="line">minimap2 -ax map-ont co92.fna <span class="regexp">/ifs1/</span>TestDatas<span class="regexp">/namikong/</span><span class="number">0611</span><span class="regexp">/rawdata/</span>SRR8608880.sra.fastq &gt;s1037.sam</span><br><span class="line"></span><br><span class="line"><span class="comment">#convert sam to bam, using samtools</span></span><br><span class="line">samtools sort -@ <span class="number">4</span> -O bam -o s1037.sorted.bam s1037.sam</span><br><span class="line">samtools index s1037.sorted.bam</span><br><span class="line">samtools faidx co92.fna</span><br><span class="line"></span><br><span class="line"><span class="comment">#produce consensus sequence, using bcftools</span></span><br><span class="line">bcftools mpileup -Ou -f co92.fna s1037.sorted.bam | bcftools call -mv -Oz -o calls.vcf.gz</span><br><span class="line">bcftools index calls.vcf.gz</span><br><span class="line">bcftools consensus -f co92.fna calls.vcf.gz &gt;s1037_consensus.fnas</span><br><span class="line"></span><br><span class="line"><span class="comment">#stitching</span></span><br><span class="line"><span class="comment">##using flye</span></span><br><span class="line"><span class="regexp">/ifs1/</span>Software<span class="regexp">/bin/</span>flye --nano-raw <span class="regexp">/ifs1/</span>TestDatas<span class="regexp">/namikong/</span><span class="number">0611</span><span class="regexp">/rawdata/</span>SRR8608880.sra.fastq -g <span class="number">4.6</span>m -o flye -t <span class="number">24</span> -i <span class="number">3</span></span><br><span class="line"><span class="comment">##using minisam</span></span><br></pre></td></tr></table></figure>
<h1>advantages and disadvantages of different sequencing platforms</h1>
<ul>
<li>FGS: high accuracy, long reads length, low throughput, high price;</li>
<li>SGS: high accuracy, short reads length, high throughput, low price;</li>
<li>TGS: low accuracy, long reads length, high throughput</li>
</ul>
<ul>
<li>illumina：short reads length, high throughput, high accuracy</li>
<li>ONT：long reads length, high throughput, low accuracy</li>
<li>pacbio：between the illimina and ONT</li>
</ul>
<h1>mixed stitching of data from different sequencing platform</h1>
<ul>
<li>illumina stitching separately</li>
<li>illumina stitching + ONT connect the frame</li>
<li>ONT stitching seprartely</li>
<li>ONT stitching + illumina correct (※)</li>
</ul>
<h1>evaluate the stitching results</h1>
<ul>
<li>accuracy
<ul>
<li>the genome size is close to the real size; if it is too large, there may be contamination.</li>
<li>the GC content is close to the real GC content</li>
<li>the genomic framework is accurate</li>
<li>the accuracy of single base</li>
</ul>
</li>
<li>integrity
<ul>
<li>the number of splicing sequences is close to chromosome data</li>
<li>long fragment length</li>
<li>long N50/N90</li>
<li>high genetic integrity</li>
</ul>
</li>
</ul>
<h1>parameters of genome statistics</h1>
<ul>
<li>total number</li>
<li>total length ※</li>
<li>N50/N90 length ※</li>
<li>maximum/minimum length</li>
<li>average length</li>
<li>Gap(N) length</li>
<li>GC content： should be one circle center; two or more, there may be contamination</li>
</ul>
<h1>evaluate the accuracy and integrity</h1>
<ul>
<li>accuracy: <a href="http://quast.sourceforge.net/icarus.html" target="_blank" rel="noopener">quast: ICARUS</a><br>
<code>/ifs1/Software/biosoft/quast-5.0.2/quast.py -r nanopore.fa canu.fa illumina.fa pacbio.fa mix.fa -o quast -o  --output-dir</code></li>
<li>integrity: <a href="https://busco.ezlab.org/" target="_blank" rel="noopener">BUSCO</a>: <a href="https://www.orthodb.org/?page=filelist" target="_blank" rel="noopener">OrthoDB database</a>。</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="attribute">usage</span>: busco -i [SEQUENCE_FILE] -l [LINEAGE] -o [OUTPUT_NAME] -m [MODE] [OTHER OPTIONS]</span><br><span class="line"></span><br><span class="line">Welcome to BUSCO 4.0.4: the Benchmarking Universal Single-Copy Ortholog assessment tool.</span><br><span class="line">For more detailed usage information, please review the README file provided with this distribution and the BUSCO user guide.</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -i FASTA FILE, --in FASTA FILE</span><br><span class="line">                        Input sequence file in FASTA format. Can be an assembled genome or transcriptome (DNA), or protein sequences from an annotated gene set.</span><br><span class="line">  -c N, --cpu N         Specify the number (N=integer) of threads/cores to use.</span><br><span class="line">  -o OUTPUT, --out OUTPUT</span><br><span class="line">                        Give your analysis run a recognisable short name. Output folders and files will be labelled with this name. WARNING: do not provide a path</span><br><span class="line">  --out_path OUTPUT_PATH</span><br><span class="line">                        Optional location for results folder, excluding results folder name. Default is current working directory.</span><br><span class="line">  -e N, --evalue N      E-value cutoff for BLAST searches. Allowed formats, 0.001 or 1e-03 (Default: 1e-03)</span><br><span class="line">  -m MODE, --mode MODE  Specify which BUSCO analysis mode to run.</span><br><span class="line">                        There are three valid modes:</span><br><span class="line">                        - geno or genome, for genome assemblies (DNA)</span><br><span class="line">                        - tran or transcriptome, for transcriptome assemblies (DNA)</span><br><span class="line">                        - prot or proteins, for annotated gene sets (protein)</span><br><span class="line">  -l LINEAGE, --lineage_dataset LINEAGE</span><br><span class="line">                        Specify the name of the BUSCO lineage to be used.</span><br><span class="line">  -f, --force           Force rewriting of existing files. Must be used when output files with the provided name already exist.</span><br><span class="line">  --limit REGION_LIMIT  How many candidate regions (contig or transcript) to consider per BUSCO (default: 3)</span><br><span class="line">  --long                Optimization mode Augustus self-training (Default: Off) adds considerably to the run time, but can improve results for some non-model organisms</span><br><span class="line">  -q, --quiet           Disable the info logs, displays only errors</span><br><span class="line">  --augustus_parameters AUGUSTUS_PARAMETERS</span><br><span class="line">                        Pass additional arguments to Augustus. All arguments should be contained within a single pair of quotation marks, separated by commas. E.g. '--param1=1,--param2=2'</span><br><span class="line">  --augustus_species AUGUSTUS_SPECIES</span><br><span class="line">                        Specify a species for Augustus training.</span><br><span class="line">  --auto-lineage        Run auto-lineage to find optimum lineage path</span><br><span class="line">  --auto-lineage-prok   Run auto-lineage just on non-eukaryote trees to find optimum lineage path</span><br><span class="line">  --auto-lineage-euk    Run auto-placement just on eukaryote tree to find optimum lineage path</span><br><span class="line">  --update-data         Download and replace with last versions all lineages datasets and files necessary to their automated selection</span><br><span class="line">  --offline             To indicate that BUSCO cannot attempt to download files</span><br><span class="line">  --config CONFIG_FILE  Provide a config file</span><br><span class="line">  -v, --version         Show this version and exit</span><br><span class="line">  -h, --help            Show this help message and exit</span><br><span class="line">  --list-datasets       Print the list of available BUSCO datasets</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://xieduo7.github.io/2018-07-15-%E7%94%A8BUSCO%E6%9D%A5%E8%BF%9B%E8%A1%8C%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AE%8C%E6%95%B4%E6%80%A7%E8%AF%84%E4%BC%B0.html" target="_blank" rel="noopener">使用BUSCO评估基因组组装完整性</a><br>
Complete：完整性，在被评估的基因组中BUSCO基因的预测分数以及比对上的长度打到了要求，可具体划分为Complete and single-copy和Complete and duplicated。<br>
Complete and single-copy：完整且在该基因组中只有一个拷贝的数目，该指标越高说明组装效果越好。<br>
Complete and duplicated：完整且在该基因组中有多个拷贝的数目，由于BUSCO基因集中的基因都是单拷贝的基因，因此如果出现了多个拷贝，就说明在单体型组装过程中出现了错误，因此该指标越高说明组装效果越差。另外如果是多倍体组装的话，该值也可能大。<br>
Fragmented：Fragmented的基因虽然达到了预测分数，但是长度并没达到要求。有可能基因组组装过程中没有将该片段组装出来，也有可能是基因预测的时候由于基因结构的特殊性没能完整地将该基因预测出来。该指标越低越好。<br>
Missing：Fragmented的基因在基因组中完全没有找到，或者预测分数低于要求。有可能基因组组装过程中没有将该片段组装出来，也有可能是基因预测的时候由于基因结构的特殊性没能完整地将该基因预测出来。该指标越低越好</p>
</blockquote>
<h1>examples</h1>
<h2 id="illmina-illumina-ONT">illmina/illumina+ONT</h2>
<p>stitching of illumina sequencing data (pair ends)</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">#software: [SPAdes](https:<span class="comment">//github.com/ablab/spades#sec1.1)</span></span><br><span class="line">wget http:<span class="comment">//cab.spbu.ru/files/release3.13.1/SPAdes-3.13.1-Linux.tar.gz</span></span><br><span class="line">tar -xzf SPAdes<span class="number">-3.13</span><span class="number">.1</span>-Linux.tar.gz</span><br><span class="line">cd SPAdes<span class="number">-3.13</span><span class="number">.1</span>-Linux/bin/</span><br><span class="line"></span><br><span class="line">#quality control, using fastqc</span><br><span class="line">mkdir qc</span><br><span class="line">fastqc -f fastq -o qc /ifs1/TestDatas/nanopore/day2-Assembly/<span class="number">2.</span>rawdata/illumina/SRR8608858.sra_1.fastq.gz /ifs1/TestDatas/nanopore/day2-Assembly/<span class="number">2.</span>rawdata/illumina/SRR8608858.sra_2.fastq.gz</span><br><span class="line"></span><br><span class="line">#filtering, using fastp</span><br><span class="line">fastp -i /ifs1/TestDatas/nanopore/day2-Assembly/<span class="number">2.</span>rawdata/illumina/SRR8608858.sra_1.fastq.gz -I /ifs1/TestDatas/nanopore/day2-Assembly/<span class="number">2.</span>rawdata/illumina/SRR8608858.sra_2.fastq.gz -o clean<span class="number">.1</span>.fq.gz -O clean<span class="number">.2</span>.fq.gz -z <span class="number">4</span> -q <span class="number">20</span> -u <span class="number">30</span> -n <span class="number">10</span> -f <span class="number">20</span> -t <span class="number">10</span> -F <span class="number">20</span> -T <span class="number">10</span> -h clean.html</span><br><span class="line"></span><br><span class="line">#quality control again</span><br><span class="line">mkdir clean</span><br><span class="line">fastqc -f fastq -o clean clean<span class="number">.1</span>.fq.gz clean<span class="number">.2</span>.fq.gz</span><br><span class="line"></span><br><span class="line">#stitching, using sapdes</span><br><span class="line">###only use illumina sequencing data</span><br><span class="line">###the <span class="keyword">final</span> results: scaffolds.fasta</span><br><span class="line">/ifs1/Software/biosoft/SPAdes<span class="number">-3.12</span><span class="number">.0</span>-Linux/bin/spades.py -o illumina -t <span class="number">24</span> <span class="number">-1</span> clean<span class="number">.1</span>.fq.gz <span class="number">-2</span> clean<span class="number">.2</span>.fq.gz <span class="number">1</span>&gt;spades.log <span class="number">2</span>&gt;spades.err</span><br><span class="line"></span><br><span class="line">###use illumina + ont sequencing data</span><br><span class="line">###the <span class="keyword">final</span> results: scaffolds.fasta</span><br><span class="line">/ifs1/Software/biosoft/SPAdes<span class="number">-3.12</span><span class="number">.0</span>-Linux/bin/spades.py -o illumina_minion -t <span class="number">24</span> <span class="number">-1</span> clean<span class="number">.1</span>.fq.gz <span class="number">-2</span> clean<span class="number">.2</span>.fq.gz --nanopore /ifs1/TestDatas/nanopore/day2-Assembly/<span class="number">4.f</span>ilter/clean.filtlong.fq.gz <span class="number">1</span>&gt;minion.log <span class="number">2</span>&gt;minion.err</span><br></pre></td></tr></table></figure>
<h2 id="quast">quast</h2>
<p><code>/ifs1/Software/biosoft/quast-5.0.2/quast.py -r illumina/scaffolds.fasta illumina_minion/scaffolds.fasta -o quast</code></p>
<h2 id="BUSCO">BUSCO</h2>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">conda <span class="keyword">create</span> -n py3 python=<span class="number">3.6</span></span><br><span class="line">conda <span class="keyword">activate</span> py3</span><br><span class="line">conda <span class="keyword">install</span> -c bioconda -c conda-forge busco</span><br><span class="line">busco -h</span><br><span class="line">busco -i [<span class="keyword">input</span> fasta <span class="keyword">file</span>] -l [<span class="keyword">database</span> <span class="keyword">file</span>] -o [<span class="keyword">output</span> <span class="keyword">file</span>] -m [geno/tran/prot] <span class="comment">--cpu 24</span></span><br></pre></td></tr></table></figure>
<p>how to choose the database file?<br>
假如测试细菌物种名称为 <em>Bacillus subtilis</em>（枯草芽孢杆菌），系统分支大类属于“Firmicutes”（厚壁菌门）或“bacteria”（细菌），因此我们可选下载“firmicutes_odb9” 或直接使用“bacteria_odb9”。<br>
wget <a href="http://busco.ezlab.org/v2/datasets/firmicutes_odb9.tar.gz" target="_blank" rel="noopener">http://busco.ezlab.org/v2/datasets/firmicutes_odb9.tar.gz</a><br>
#或者<br>
wget <a href="http://busco.ezlab.org/v2/datasets/bacteria_odb9.tar.gz" target="_blank" rel="noopener">http://busco.ezlab.org/v2/datasets/bacteria_odb9.tar.gz</a></p>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Nanopore</category>
      </categories>
      <tags>
        <tag>Nanopore</tag>
      </tags>
  </entry>
  <entry>
    <title>Nanopore_4.data preprocessing-2.sequence alignment</title>
    <url>/2020/06/08/Nanopore4-datapreprocessing2/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This paper shows how to do sequence alignment using minimap2 (get sam file), and visualization of alignment results using samtools (convert sam file to bam file) and tablet. The usage of seqkit is also introduced.</p>
<a id="more"></a>
<h1>Introduction</h1>
<p>Processing of fastq file</p>
<ul>
<li>fastq -&gt; <a href="https://en.wikipedia.org/wiki/SAM_(file_format)" target="_blank" rel="noopener">sam</a>/<a href="https://genome.sph.umich.edu/wiki/BAM" target="_blank" rel="noopener">bam</a> -&gt; <a href="https://en.wikipedia.org/wiki/Variant_Call_Format" target="_blank" rel="noopener">vcf</a></li>
<li>fastq -&gt; <a href="https://en.wikipedia.org/wiki/FASTA_format" target="_blank" rel="noopener">fasta</a> -&gt; genome</li>
</ul>
<h1>Sequence alignment</h1>
<p>Short-read sequence (of second-generation sequencing) alignment is to relocate sequenced reads to the genome, which is also called mapping.<br>
Characteristics:</p>
<ul>
<li>cover the whole genome</li>
<li>short read length</li>
<li>exist some error rate</li>
<li>high depth</li>
<li>pair-end data</li>
</ul>
<p>why do sequence alignment?</p>
<ul>
<li>Calculate genome coverage ratio: how many genes were detected</li>
<li>Calculate the coverage depth of each gene site: how many times each gene site was measured</li>
<li>Calculate the alignment rate of sequencing data: how many sequence can be aligned; why some sequences can not be aligned, is it wrong or reference sequences don’t exist?</li>
<li>Check the conditions of the alignment of each site: see the details of each site, such as sequencing error, mutation, etc.</li>
<li>Used for mutation detection</li>
<li>find the consensus sequences: a sequence of DNA having similar structure and function in different organisms</li>
</ul>
<h2 id="input-files">input files</h2>
<p>needed files:</p>
<ul>
<li>Reference sequence: nucleic acid sequence in the format of fasta</li>
<li>Sequencing data: first and second generation sequencing data in the format of fastq</li>
</ul>
<h2 id="using-Minimap2-to-do-sequencing-alignment">using Minimap2 to do sequencing alignment</h2>
<p><a href="https://github.com/lh3/minimap2" target="_blank" rel="noopener">Minimap2</a> is a versatile sequence alignment program that aligns DNA or mRNA sequences against a large reference database. Typical use cases include: (1) mapping PacBio or Oxford Nanopore genomic reads to the human genome; (2) finding overlaps between long reads with error rate up to ~15%; (3) splice-aware alignment of PacBio Iso-Seq or Nanopore cDNA or Direct RNA reads against a reference genome; (4) aligning Illumina single- or paired-end reads; (5) assembly-to-assembly alignment; (6) full-genome alignment between two closely related species with divergence below ~15%.<br>
<em>Note: Hisat2 can cut reads for alignment; bwa is mainly for short-read sequences, can not cut reads, and can not be used for RNASeq analysis; minimap2 is mainly for pacbio and nanopore data.</em><br>
input files:</p>
<ul>
<li>sequencing reads in the format of fastq or fasta</li>
<li>reference genome in the format of fasta</li>
</ul>
<p>output files:</p>
<ul>
<li>paf (default) or sam files
<blockquote>
<p>see the details of <a href="https://en.wikipedia.org/wiki/SAM_(file_format)" target="_blank" rel="noopener">sam file</a></p>
</blockquote>
</li>
</ul>
<p>usage:</p>
<figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">Usage: minimap2 [options] &lt;target.fa&gt;|&lt;target.idx&gt; [query.fa] [...]</span><br><span class="line">Options:</span><br><span class="line">  Indexing:</span><br><span class="line">    -<span class="ruby">H           use homopolymer-compressed k-mer (preferrable <span class="keyword">for</span> PacBio)</span></span><br><span class="line"><span class="ruby">    -k INT       k-mer size (no larger than <span class="number">28</span>) [<span class="number">15</span>]</span></span><br><span class="line"><span class="ruby">    -w INT       minimizer window size [<span class="number">10</span>]</span></span><br><span class="line"><span class="ruby">    -I NUM       split index <span class="keyword">for</span> every ~NUM input bases [<span class="number">4</span>G]</span></span><br><span class="line"><span class="ruby">    -d FILE      dump index to FILE []</span></span><br><span class="line"><span class="ruby">  <span class="symbol">Mapping:</span></span></span><br><span class="line"><span class="ruby">    -f FLOAT     filter out top FLOAT fraction of repetitive minimizers [<span class="number">0</span>.<span class="number">0002</span>]</span></span><br><span class="line"><span class="ruby">    -g NUM       stop chain enlongation <span class="keyword">if</span> there are no minimizers <span class="keyword">in</span> INT-bp [<span class="number">5000</span>]</span></span><br><span class="line"><span class="ruby">    -G NUM       max intron length (effective with -xsplice; changing -r) [<span class="number">200</span>k]</span></span><br><span class="line"><span class="ruby">    -F NUM       max fragment length (effective with -xsr <span class="keyword">or</span> <span class="keyword">in</span> the fragment mode) [<span class="number">800</span>]</span></span><br><span class="line"><span class="ruby">    -r NUM       bandwidth used <span class="keyword">in</span> chaining <span class="keyword">and</span> DP-based alignment [<span class="number">500</span>]</span></span><br><span class="line"><span class="ruby">    -n INT       minimal number of minimizers on a chain [<span class="number">3</span>]</span></span><br><span class="line"><span class="ruby">    -m INT       minimal chaining score (matching bases minus log gap penalty) [<span class="number">40</span>]</span></span><br><span class="line"><span class="ruby">    -X           skip <span class="keyword">self</span> <span class="keyword">and</span> dual mappings (<span class="keyword">for</span> the all-vs-all mode)</span></span><br><span class="line"><span class="ruby">    -p FLOAT     min secondary-to-primary score ratio [<span class="number">0</span>.<span class="number">8</span>]</span></span><br><span class="line"><span class="ruby">    -N INT       retain at most INT secondary alignments [<span class="number">5</span>]</span></span><br><span class="line"><span class="ruby">  <span class="symbol">Alignment:</span></span></span><br><span class="line"><span class="ruby">    -A INT       matching score [<span class="number">2</span>]</span></span><br><span class="line"><span class="ruby">    -B INT       mismatch penalty [<span class="number">4</span>]</span></span><br><span class="line"><span class="ruby">    -O INT[,INT] gap open penalty [<span class="number">4</span>,<span class="number">24</span>]</span></span><br><span class="line"><span class="ruby">    -E INT[,INT] gap extension penalty; a k-long gap costs min&#123;O1+k*E1,O2+k*E2&#125; [<span class="number">2</span>,<span class="number">1</span>]</span></span><br><span class="line"><span class="ruby">    -z INT[,INT] Z-drop score <span class="keyword">and</span> inversion Z-drop score [<span class="number">400</span>,<span class="number">200</span>]</span></span><br><span class="line"><span class="ruby">    -s INT       minimal peak DP alignment score [<span class="number">80</span>]</span></span><br><span class="line"><span class="ruby">    -u CHAR      how to find GT-AG. <span class="symbol">f:</span>transcript strand, <span class="symbol">b:</span>both strands, <span class="symbol">n:</span>don<span class="string">'t match GT-AG [n]</span></span></span><br><span class="line"><span class="ruby">  Input/<span class="symbol">Output:</span></span></span><br><span class="line"><span class="ruby">    -a           output <span class="keyword">in</span> the SAM format (PAF by default)</span></span><br><span class="line"><span class="ruby">    -o FILE      output alignments to FILE [stdout]</span></span><br><span class="line"><span class="ruby">    -L           write CIGAR with &gt;<span class="number">65535</span> ops at the CG tag</span></span><br><span class="line"><span class="ruby">    -R STR       SAM read group line <span class="keyword">in</span> a format like <span class="string">'@RG\tID:foo\tSM:bar'</span> []</span></span><br><span class="line"><span class="ruby">    -c           output CIGAR <span class="keyword">in</span> PAF</span></span><br><span class="line"><span class="ruby">    --cs[=STR]   output the cs tag; STR is <span class="string">'short'</span> (<span class="keyword">if</span> absent) <span class="keyword">or</span> <span class="string">'long'</span> [none]</span></span><br><span class="line"><span class="ruby">    --MD         output the MD tag</span></span><br><span class="line"><span class="ruby">    --eqx        write =<span class="regexp">/X CIGAR operators</span></span></span><br><span class="line"><span class="ruby">    -Y           use soft clipping <span class="keyword">for</span> supplementary alignments</span></span><br><span class="line"><span class="ruby">    -t INT       number of threads [<span class="number">3</span>]</span></span><br><span class="line"><span class="ruby">    -K NUM       minibatch size <span class="keyword">for</span> mapping [<span class="number">500</span>M]</span></span><br><span class="line"><span class="ruby">    --version    show version number</span></span><br><span class="line"><span class="ruby">  <span class="symbol">Preset:</span></span></span><br><span class="line"><span class="ruby">    -x STR       preset (always applied before other options; see minimap2.<span class="number">1</span> <span class="keyword">for</span> details) []</span></span><br><span class="line"><span class="ruby">                 - map-pb/map-<span class="symbol">ont:</span> PacBio/Nanopore vs reference mapping</span></span><br><span class="line"><span class="ruby">                 - ava-pb/ava-<span class="symbol">ont:</span> PacBio/Nanopore read overlap</span></span><br><span class="line"><span class="ruby">                 - asm5/asm1<span class="number">0</span>/<span class="symbol">asm20:</span> asm-to-ref mapping, <span class="keyword">for</span> ~<span class="number">0</span>.<span class="number">1</span>/<span class="number">1</span>/<span class="number">5</span>% sequence divergence</span></span><br><span class="line"><span class="ruby">                 - <span class="symbol">splice:</span> long-read spliced alignment</span></span><br><span class="line"><span class="ruby">                 - <span class="symbol">sr:</span> genomic short-read mapping</span></span><br></pre></td></tr></table></figure>
<h2 id="using-samtools-to-process-sam-file">using samtools to process sam file</h2>
<p><a href="https://github.com/samtools/samtools" target="_blank" rel="noopener">samtools</a> provide various utilities for manipulating alignments in the SAM format, including sorting, merging, indexing and generating alignments in a per-position format.<br>
Usage:</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">Usage:   samtools &lt;command&gt; [options]</span><br><span class="line">Commands:</span><br><span class="line">  -- Indexing</span><br><span class="line">     dict           create a sequence dictionary file</span><br><span class="line">     faidx          index/extract FASTA</span><br><span class="line">     fqidx          index/extract FASTQ</span><br><span class="line">     index          index alignment</span><br><span class="line">  -- Editing</span><br><span class="line">     calmd          recalculate MD/NM tags <span class="keyword">and</span> <span class="string">'='</span> bases</span><br><span class="line">     fixmate        fix mate information</span><br><span class="line">     reheader       replace BAM header</span><br><span class="line">     targetcut      cut fosmid regions (<span class="keyword">for</span> fosmid<span class="built_in"> pool </span>only)</span><br><span class="line">     addreplacerg   adds <span class="keyword">or</span> replaces RG tags</span><br><span class="line">     markdup        mark duplicates</span><br><span class="line">  -- File operations</span><br><span class="line">     collate        shuffle <span class="keyword">and</span><span class="built_in"> group </span>alignments by name</span><br><span class="line">     cat            concatenate BAMs</span><br><span class="line">     merge          merge sorted alignments</span><br><span class="line">     mpileup        multi-way pileup</span><br><span class="line">     sort           sort alignment file</span><br><span class="line">     split          splits a file by read group</span><br><span class="line">     quickcheck     quickly check <span class="keyword">if</span> SAM/BAM/CRAM file appears intact</span><br><span class="line">     fastq          converts a BAM <span class="keyword">to</span> a FASTQ</span><br><span class="line">     fasta          converts a BAM <span class="keyword">to</span> a FASTA</span><br><span class="line">  -- Statistics</span><br><span class="line">     bedcov         read depth per BED region</span><br><span class="line">     depth          compute the depth</span><br><span class="line">     flagstat      <span class="built_in"> simple </span>stats</span><br><span class="line">     idxstats       BAM index stats</span><br><span class="line">     phase          phase heterozygotes</span><br><span class="line">     stats          generate stats (former bamcheck)</span><br><span class="line">  -- Viewing</span><br><span class="line">     flags          explain BAM flags</span><br><span class="line">     tview          text alignment viewer</span><br><span class="line">     view           SAM&lt;-&gt;BAM&lt;-&gt;CRAM conversion</span><br><span class="line">     depad          convert padded BAM <span class="keyword">to</span> unpadded BAM</span><br></pre></td></tr></table></figure>
<h2 id="using-Tablet-to-do-visualization">using <a href="https://ics.hutton.ac.uk/tablet/download-tablet/" target="_blank" rel="noopener">Tablet</a> to do visualization</h2>
<p><em>Note:</em> see what the base is like at a macro perspective. there is no need to study it very detailly.<br>
input files</p>
<ul>
<li>sorted bam: bam</li>
<li>bam index: bai</li>
<li>reference sequence: fasta</li>
<li>reference sequence index: fai</li>
<li>optional：genome feature file, such as gff</li>
</ul>
<p>usage: see details of <a href="http://tablet.hutton.ac.uk/en/latest/quickstart.html#tablet-overview" target="_blank" rel="noopener">tablet</a></p>
<h2 id="Sup-seqkit">Sup. seqkit</h2>
<p>The efficiency and usability of <a href="https://bioinf.shenwei.me/seqkit/" target="_blank" rel="noopener">Seqkit</a> enable researchers to rapidly accomplish common FASTA/Q file manipulations.<br>
usage:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Usage:</span><br><span class="line">  seqkit [command]</span><br><span class="line">Available Commands:</span><br><span class="line">  amplicon        retrieve amplicon (or specific region around it) via primer(s)</span><br><span class="line">  bam             monitoring and online histograms of BAM record features</span><br><span class="line">  common          find common sequences of multiple files by id/name/sequence</span><br><span class="line">  concat          concatenate sequences <span class="keyword">with</span> same <span class="keyword">ID</span> <span class="keyword">from</span> multiple files</span><br><span class="line">  <span class="keyword">convert</span>         <span class="keyword">convert</span> FASTQ quality <span class="keyword">encoding</span> <span class="keyword">between</span> Sanger, Solexa <span class="keyword">and</span> Illumina</span><br><span class="line">  <span class="keyword">duplicate</span>       <span class="keyword">duplicate</span> sequences N times</span><br><span class="line">  faidx           <span class="keyword">create</span> FASTA <span class="keyword">index</span> <span class="keyword">file</span> <span class="keyword">and</span> <span class="keyword">extract</span> subsequence</span><br><span class="line">  fish            look <span class="keyword">for</span> <span class="keyword">short</span> sequences <span class="keyword">in</span> larger sequences <span class="keyword">using</span> <span class="keyword">local</span> alignment</span><br><span class="line">  fq2fa           <span class="keyword">convert</span> FASTQ <span class="keyword">to</span> FASTA</span><br><span class="line">  fx2tab          <span class="keyword">convert</span> FASTA/Q <span class="keyword">to</span> tabular <span class="keyword">format</span> (<span class="keyword">with</span> <span class="keyword">length</span>/GC <span class="keyword">content</span>/GC skew)</span><br><span class="line">  genautocomplete generate shell autocompletion script</span><br><span class="line">  grep            <span class="keyword">search</span> sequences <span class="keyword">by</span> <span class="keyword">ID</span>/<span class="keyword">name</span>/<span class="keyword">sequence</span>/<span class="keyword">sequence</span> motifs, mismatch allowed</span><br><span class="line">  <span class="keyword">head</span>            print <span class="keyword">first</span> N FASTA/Q <span class="keyword">records</span></span><br><span class="line">  <span class="keyword">help</span>            <span class="keyword">Help</span> about <span class="keyword">any</span> command</span><br><span class="line">  <span class="keyword">locate</span>          <span class="keyword">locate</span> subsequences/motifs, mismatch allowed</span><br><span class="line">  mutate          edit <span class="keyword">sequence</span> (point mutation, insertion, deletion)</span><br><span class="line">  <span class="keyword">range</span>           print FASTA/Q <span class="keyword">records</span> <span class="keyword">in</span> a <span class="keyword">range</span> (<span class="keyword">start</span>:<span class="keyword">end</span>)</span><br><span class="line">  <span class="keyword">rename</span>          <span class="keyword">rename</span> duplicated IDs</span><br><span class="line">  <span class="keyword">replace</span>         <span class="keyword">replace</span> <span class="keyword">name</span>/<span class="keyword">sequence</span> <span class="keyword">by</span> regular expression</span><br><span class="line">  restart         <span class="keyword">reset</span> <span class="keyword">start</span> <span class="keyword">position</span> <span class="keyword">for</span> circular genome</span><br><span class="line">  rmdup           remove duplicated sequences <span class="keyword">by</span> <span class="keyword">id</span>/<span class="keyword">name</span>/<span class="keyword">sequence</span></span><br><span class="line">  <span class="keyword">sample</span>          <span class="keyword">sample</span> sequences <span class="keyword">by</span> <span class="built_in">number</span> <span class="keyword">or</span> proportion</span><br><span class="line">  sana            sanitize broken single line fastq files</span><br><span class="line">  seq             transform sequences (revserse, complement, <span class="keyword">extract</span> ID...)</span><br><span class="line">  shuffle         shuffle sequences</span><br><span class="line">  sliding         sliding sequences, circular genome supported</span><br><span class="line">  <span class="keyword">sort</span>            <span class="keyword">sort</span> sequences <span class="keyword">by</span> <span class="keyword">id</span>/<span class="keyword">name</span>/<span class="keyword">sequence</span>/<span class="keyword">length</span></span><br><span class="line">  <span class="keyword">split</span>           <span class="keyword">split</span> sequences <span class="keyword">into</span> files <span class="keyword">by</span> <span class="keyword">id</span>/seq region/<span class="keyword">size</span>/parts (mainly <span class="keyword">for</span> FASTA)</span><br><span class="line">  split2          <span class="keyword">split</span> sequences <span class="keyword">into</span> files <span class="keyword">by</span> <span class="keyword">size</span>/parts (FASTA, PE/SE FASTQ)</span><br><span class="line">  stats           simple <span class="keyword">statistics</span> <span class="keyword">of</span> FASTA/Q files</span><br><span class="line">  subseq          <span class="keyword">get</span> subsequences <span class="keyword">by</span> region/gtf/bed, <span class="keyword">including</span> flanking sequences</span><br><span class="line">  tab2fx          <span class="keyword">convert</span> tabular <span class="keyword">format</span> <span class="keyword">to</span> FASTA/Q <span class="keyword">format</span></span><br><span class="line">  <span class="keyword">translate</span>       <span class="keyword">translate</span> DNA/RNA <span class="keyword">to</span> protein <span class="keyword">sequence</span> (supporting ambiguous bases)</span><br><span class="line">  <span class="keyword">version</span>         print <span class="keyword">version</span> information <span class="keyword">and</span> <span class="keyword">check</span> <span class="keyword">for</span> <span class="keyword">update</span></span><br><span class="line">  watch           <span class="keyword">monitoring</span> <span class="keyword">and</span> <span class="keyword">online</span> histograms <span class="keyword">of</span> <span class="keyword">sequence</span> features</span><br><span class="line">Flags:</span><br><span class="line">      <span class="comment">--alphabet-guess-seq-length int   length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)</span></span><br><span class="line">  -h, <span class="comment">--help                            help for seqkit</span></span><br><span class="line">      <span class="comment">--id-ncbi                         FASTA head is NCBI-style, e.g. &gt;gi|110645304|ref|NC_002516.2| Pseud...</span></span><br><span class="line">      <span class="comment">--id-regexp string                regular expression for parsing ID (default "^(\\S+)\\s?")</span></span><br><span class="line">      <span class="comment">--infile-list string              file of input files list (one file per line), if given, they are appended to files from cli arguments</span></span><br><span class="line">  -w, <span class="comment">--line-width int                  line width when outputing FASTA format (0 for no wrap) (default 60)</span></span><br><span class="line">  -o, <span class="comment">--out-file string                 out file ("-" for stdout, suffix .gz for gzipped out) (default "-")</span></span><br><span class="line">      <span class="comment">--quiet                           be quiet and do not show extra information</span></span><br><span class="line">  -t, <span class="comment">--seq-type string                 sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default "auto")</span></span><br><span class="line">  -j, <span class="comment">--threads int                     number of CPUs. (default value: 1 for single-CPU PC, 2 for others) (default 2)</span></span><br></pre></td></tr></table></figure>
<h1>Examples</h1>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">mkdir</span> <span class="number">060</span>8</span><br><span class="line">cd <span class="number">060</span>8</span><br><span class="line">cp -r  /ifs1/TestDatas/namikong/<span class="number">060</span>8/* .</span><br><span class="line">seqkit stats lambda_ref.fasta <span class="comment">#using seqkit to count the sequence informations</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sequence alignment, using minimap2</span></span><br><span class="line"><span class="comment">##first step: establish index</span></span><br><span class="line">minimap2 -d lambda_ref.min lambda_ref.fasta <span class="comment">#-d: dump index to FILE []; index file: lambda_ref.min</span></span><br><span class="line"><span class="comment">##second step: alignment</span></span><br><span class="line">minimap2 -ax <span class="keyword">map</span>-ont lambda_ref.min all.fastq.gz &gt;lambda_ref.sam <span class="comment">#map-ont means nanopore data；-a: output in the sam format</span></span><br><span class="line">less -S lambda_ref.sam <span class="comment">#see the sam file, the column 5 is the quality value defined by minimap2, the bigger the better.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#convert sam to bam, using samtools</span></span><br><span class="line">samtools <span class="keyword">sort</span> -@ <span class="number">4</span> -O bam -o lambda_ref.sorted.bam lambda_ref.sam <span class="comment">#convert sam to bam, and sort basing on reference sequence sites; -O: file format；-o: output file name；</span></span><br><span class="line">samtools <span class="keyword">index</span> lambda_ref.sorted.bam <span class="comment">#establish index of sequencing data</span></span><br><span class="line">samtools faidx lambda_ref.fasta <span class="comment">#establish index of reference sequence</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#data visualization, using tablet</span></span><br><span class="line"><span class="comment">##input files: fasta, fai, bam, and bai</span></span><br><span class="line"><span class="comment">###open tablet -&gt; input bam and fasta</span></span><br></pre></td></tr></table></figure>
<p>use cases of seqkit:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">cd</span> <span class="selector-tag">fastq</span></span><br><span class="line"><span class="selector-tag">gzip</span> <span class="selector-tag">all</span><span class="selector-class">.fastq</span></span><br><span class="line"><span class="selector-tag">seqkit</span> <span class="selector-tag">stats</span> <span class="selector-tag">all</span><span class="selector-class">.fastq</span><span class="selector-class">.gz</span></span><br><span class="line"><span class="selector-id">#data</span> <span class="selector-tag">statistics</span></span><br><span class="line"><span class="selector-tag">seqkit</span> <span class="selector-tag">fq2fa</span> <span class="selector-tag">all</span><span class="selector-class">.fastq</span><span class="selector-class">.gz</span> &gt;<span class="selector-tag">all</span><span class="selector-class">.fasta</span>  </span><br><span class="line"><span class="selector-id">#convert</span> <span class="selector-tag">fastq</span> <span class="selector-tag">to</span> <span class="selector-tag">fasta</span> <span class="selector-tag">for</span> <span class="selector-tag">alignment</span></span><br><span class="line"><span class="selector-tag">seqkit</span> <span class="selector-tag">rmdup</span> <span class="selector-tag">all</span><span class="selector-class">.fastq</span><span class="selector-class">.gz</span> &gt;<span class="selector-tag">all</span><span class="selector-class">.rmdup</span><span class="selector-class">.fastq</span></span><br><span class="line"><span class="selector-id">#delete</span> <span class="selector-tag">duplicate</span> <span class="selector-tag">sequences</span></span><br><span class="line"><span class="selector-tag">seqkit</span> <span class="selector-tag">sort</span> <span class="selector-tag">-l</span> <span class="selector-tag">-r</span> <span class="selector-tag">all</span><span class="selector-class">.rmdup</span><span class="selector-class">.fastq</span> &gt;<span class="selector-tag">all</span><span class="selector-class">.sorted</span><span class="selector-class">.fastq</span></span><br><span class="line"><span class="selector-id">#sort</span> <span class="selector-tag">by</span> <span class="selector-tag">length</span>, <span class="selector-tag">descending</span></span><br><span class="line"><span class="selector-tag">head</span> <span class="selector-tag">-4</span> <span class="selector-tag">all</span><span class="selector-class">.sorted</span><span class="selector-class">.fastq</span> &gt;<span class="selector-tag">longest</span><span class="selector-class">.fastq</span> <span class="selector-id">#choose</span> <span class="selector-tag">the</span> <span class="selector-tag">longest</span> <span class="selector-tag">sequence</span></span><br><span class="line"><span class="selector-tag">seqkit</span> <span class="selector-tag">seq</span> <span class="selector-tag">-m</span> 1000 <span class="selector-tag">all</span><span class="selector-class">.rmdup</span><span class="selector-class">.fastq</span> &gt;<span class="selector-tag">all</span><span class="selector-class">.more_than_1000</span><span class="selector-class">.fastq</span></span><br><span class="line"><span class="selector-id">#choose</span> <span class="selector-tag">the</span> <span class="selector-tag">sequences</span> &gt;1000<span class="selector-tag">bp</span></span><br><span class="line"><span class="selector-tag">seqkit</span> <span class="selector-tag">sample</span> <span class="selector-tag">-p</span> 0<span class="selector-class">.1</span> <span class="selector-tag">all</span><span class="selector-class">.fastq</span><span class="selector-class">.gz</span> &gt;0<span class="selector-class">.1</span><span class="selector-class">.fastq</span></span><br><span class="line"><span class="selector-id">#choose</span> <span class="selector-tag">sample</span> <span class="selector-tag">by</span> <span class="selector-tag">proportion</span> <span class="selector-tag">of</span> <span class="selector-tag">sequences</span> <span class="selector-tag">randomly</span></span><br><span class="line"><span class="selector-tag">seqkit</span> <span class="selector-tag">sample</span> <span class="selector-tag">-n</span> 1000 <span class="selector-tag">all</span><span class="selector-class">.fastq</span><span class="selector-class">.gz</span> &gt;1000<span class="selector-class">.fastq</span></span><br><span class="line"><span class="selector-id">#chosse</span> <span class="selector-tag">sample</span> <span class="selector-tag">by</span> <span class="selector-tag">number</span> <span class="selector-tag">of</span> <span class="selector-tag">sequences</span> <span class="selector-tag">randomly</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Nanopore</category>
      </categories>
      <tags>
        <tag>Nanopore</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记_数量生态学_1.绪论</title>
    <url>/2020/04/20/NumericalEcologywithR-1-introduction/</url>
    <content><![CDATA[<p><strong>摘要：</strong> 简单介绍本书的结构框架，相关数据和代码下载地址，以及所使用的数据集信息。</p>
<a id="more"></a>
<h1>本书结构</h1>
<ul>
<li><a href="">1.绪论</a></li>
<li><a href="">2.探索性数据分析</a></li>
</ul>
<p>大多数技术的关键模块的构造：</p>
<ul>
<li><a href="">3.多元数据矩阵计算和关联分析</a></li>
</ul>
<p>多元统计的三类主要方法：</p>
<ul>
<li><a href="">4.聚类分析</a></li>
<li><a href="">5.非约束排序</a></li>
<li><a href="">6.典范排序</a></li>
<li><a href="">7.空间分析</a></li>
</ul>
<h1>资料下载</h1>
<ul>
<li><a href="https://github.com/JoeyBernhardt/NumericalEcology" target="_blank" rel="noopener">数据和代码</a></li>
</ul>
<h1>使用的数据集</h1>
<ul>
<li><strong>Doubs鱼类数据集</strong>：包括3个矩阵，分别为27种鱼类在每个样方的多度；11个与河流的水文、地形和水体化学属性相关的环境变量；样方的地理坐标（笛卡尔坐标系，x和y）。</li>
<li><strong>甲螨数据集</strong>：包括3个矩阵，分别为35个形态种多度数据；5个基质和微地形数据；70个取样点笛卡尔坐标系（x-y）。</li>
</ul>
<blockquote>
<p>其他<br>
<code>data(package=&quot;ade4&quot;)</code>#显示某个程序包自带的数据集信息<br>
<code>data(&quot;douds&quot;)</code>#查看其中某一个数据集的信息</p>
</blockquote>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>R</category>
      </categories>
      <tags>
        <tag>Rbasics</tag>
      </tags>
  </entry>
  <entry>
    <title>Nanopore_6.Analysis of coronavirus data</title>
    <url>/2020/06/10/Nanopore6-analysisofcoronavirusdata/</url>
    <content><![CDATA[<p><strong>Abstract:</strong>  This paper introduces the characteristics of viral genome, how to find new virus (extract total DNA or RNA -&gt; remove the host gene -&gt; blast with the viral database -&gt; splice the whole genome sequence), how to stitch COVID-19 genome, and the workflow of ARTICNetwork.</p>
<a id="more"></a>
<h1>Introduction to viral genome</h1>
<h2 id="Characteristics-of-viral-genome">Characteristics of viral genome</h2>
<ul>
<li>DNA Viruses, RNA viruses</li>
<li>single-stranded chain, double-stranded chain</li>
<li>genome size: 2K~2M</li>
<li>majority of viruses: 10~30K</li>
<li>highly heterozygous sequences</li>
<li>highly fused gene</li>
</ul>
<h2 id="Why-is-it-difficult-to-splice-viral-genome">Why is it difficult to splice viral genome?</h2>
<ul>
<li>high heterozygosity of the viral genome</li>
<li>excessive coverage</li>
<li>effect of sequencing error: heterozygosity or error?</li>
</ul>
<h2 id="Why-is-the-viral-genome-small-but-difficult-to-analyze？">Why is the viral genome small but difficult to analyze？</h2>
<ul>
<li>unable to isolate, enrich and pure culture</li>
<li>low relative abundance relative to host cells</li>
<li>some viruses are RNA viruses</li>
</ul>
<h1>How to find new virus?</h1>
<p>extract total DNA or RNA -&gt; remove the host gene -&gt; blast with the viral database -&gt; splice the whole genome sequence</p>
<h2 id="Methods-to-enrich-viral-genome">Methods to enrich viral genome</h2>
<ul>
<li>method 1: centrifuge</li>
<li>method 2: gel electrophoresis</li>
<li>method 3: multiplex PCR</li>
</ul>
<h2 id="Bioinformatics-methods-to-remove-host-genome">Bioinformatics methods to remove host genome</h2>
<ul>
<li>method 1: alignment with the host genome, and extract the unaligned sequences. <code>samtools view -f 4 A1.sorted.bam</code></li>
<li>method 2: alignment with viral database, and extract the aligned sequences. <code>samtools view -F A1.sorted.bam</code></li>
</ul>
<h2 id="Viral-database">Viral database</h2>
<ul>
<li>viral database in NCBI: <a href="https://ftp.ncbi.nlm.nih.gov/genomes/Viruses/" target="_blank" rel="noopener">https://ftp.ncbi.nlm.nih.gov/genomes/Viruses/</a></li>
<li>extract all viral sequences from nt database</li>
</ul>
<h2 id="Get-viral-genome-sequences">Get viral genome sequences</h2>
<p>genome stitching -&gt; get consensus sequence</p>
<h1>COVID-19 genome</h1>
<h2 id="Characteristics-of-COVID-19">Characteristics of COVID-19</h2>
<ul>
<li>corona virus</li>
<li>single-stranded RNA virus</li>
<li>genome size: ~30K</li>
<li>close to SARS in phylogeny</li>
</ul>
<h2 id="How-to-amplify-the-sequences-of-COVID-19">How to amplify the sequences of COVID-19?</h2>
<p>multiplex PCR to get the whole genome sequence (MN908947.3) by <a href="https://artic.network/" target="_blank" rel="noopener">ARTIC Network</a></p>
<ul>
<li>primer v3: <a href="https://github.com/artic-network/articncov2019/blob/master/primer_schemes/nCoV-2019/V3/nCoV2019.tsv" target="_blank" rel="noopener">https://github.com/artic-network/articncov2019/blob/master/primer_schemes/nCoV-2019/V3/nCoV2019.tsv</a></li>
<li>article: <a href="https://www.biorxiv.org/content/10.1101/2020.03.10.985150v1.full" target="_blank" rel="noopener">https://www.biorxiv.org/content/10.1101/2020.03.10.985150v1.full</a></li>
<li>protocol: <a href="https://www.protocols.io/view/ncov-2019-sequencing-protocolbbmuik6w" target="_blank" rel="noopener">https://www.protocols.io/view/ncov-2019-sequencing-protocolbbmuik6w</a></li>
</ul>
<h2 id="Download-raw-data-of-COVID-19-genome">Download raw data of COVID-19 genome</h2>
<p><a href="https://www.ncbi.nlm.nih.gov/sars-cov-2/" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/sars-cov-2/</a></p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">prefetch SRR<span class="number">10902284</span> -O ./</span><br><span class="line">faster-dump SRR<span class="number">10902284</span>.sra</span><br></pre></td></tr></table></figure>
<h2 id="Download-reference-genome-of-COVID-19">Download reference genome of COVID-19</h2>
<ul>
<li>
<p>NCBI：<a href="https://www.ncbi.nlm.nih.gov/labs/virus/vssi/#/virus?SeqType_s=Nucleotide&amp;VirusLineage_ss=Wuhan%20seafood%20market%20pneumonia%20virus,%20taxid:2697049" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/labs/virus/vssi/#/virus?SeqType_s=Nucleotide&amp;VirusLineage_ss=Wuhan seafood market pneumonia virus, taxid:2697049</a></p>
<blockquote>
<p>download reference sequence from NCBI according to Accession Number<br>
SARS genome：</p>
<ul>
<li>KF367457, Bat SARS-like coronavirus WIV1, complete genome</li>
<li>KC881007, Bat SARS-like coronavirus WIV1 spike protein (S) gene,complete cds</li>
<li>ATU80111, RNA-dependent RNA polymerase, partial SARS-related bat coronavirus RsSHC014</li>
<li>KX285134, SARS-related bat coronavirus RsSHC014 PREDICT-EHA156-11-YN-SHC014 RNA-dependent RNA polymerase mRNA, partial cds</li>
</ul>
</blockquote>
<blockquote>
<p>RefSeq data:</p>
<ul>
<li>NC_004718, SARS coronavirus, complete genome. Taxonomy id: 694009</li>
</ul>
</blockquote>
<blockquote>
<p>Bat-derived SARS-like coronavirus isolate references:</p>
<ul>
<li>MG772933, bat-SL-CoVZC45</li>
<li>MG772934, bat-SL-CoVZXC21</li>
</ul>
</blockquote>
</li>
<li>
<p>GISAID: <a href="https://www.gisaid.org" target="_blank" rel="noopener">https://www.gisaid.org</a></p>
</li>
<li>
<p>中国国家基因库CNDB: <a href="https://db.cngb.org/datamart/disease/DATAdis19/" target="_blank" rel="noopener">https://db.cngb.org/datamart/disease/DATAdis19/</a></p>
</li>
<li>
<p>国家生物信息中心: <a href="https://bigd.big.ac.cn/ncov/release_genome" target="_blank" rel="noopener">https://bigd.big.ac.cn/ncov/release_genome</a></p>
</li>
</ul>
<h2 id="Examples-of-stitching-COVID-19-genome">Examples of stitching COVID-19 genome</h2>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">#download and stats the raw data</span></span><br><span class="line"><span class="attr">prefetch</span> <span class="string">ERR4208070 -O ./</span></span><br><span class="line"><span class="meta">fastq-dump</span> <span class="string">ERR4208070.sra --gzip</span></span><br><span class="line"><span class="attr">seqkit</span> <span class="string">stats ERR4208070.fastq.gz</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#alignment with reference sequence</span></span><br><span class="line"><span class="attr">minimap2</span> <span class="string">-d NC_045512.2.min NC_045512.2.fna</span></span><br><span class="line"><span class="attr">minimap2</span> <span class="string">-ax map-ont NC_045512.2.min ERR4208070.fastq.gz &gt;ncov.sam</span></span><br><span class="line"><span class="comment">#convert sam to bam</span></span><br><span class="line"><span class="attr">samtools</span> <span class="string">sort -@ 4 -O bam -o ncov.sorted.bam ncov.sam</span></span><br><span class="line"><span class="attr">samtools</span> <span class="string">index ncov.sorted.bam</span></span><br><span class="line"><span class="attr">samtools</span> <span class="string">faidx NC_045512.2.fna</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#visualization using tablet</span></span><br><span class="line"><span class="comment">##input file: bam, fna, bai, fam</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#produce consensus sequence</span></span><br><span class="line"><span class="attr">bcftools</span> <span class="string">mpileup -Ou -f NC_045512.2.fna ncov.sorted.bam | bcftools call -mv -Oz -o calls.vcf.gz</span></span><br><span class="line"><span class="attr">bcftools</span> <span class="string">index calls.vcf.gz</span></span><br><span class="line"><span class="attr">bcftools</span> <span class="string">consensus -f NC_045512.2.fna  calls.vcf.gz &gt;ncov.fna</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>bcftools</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Program: bcftools (Tools for variant calling and manipulating VCFs and BCFs)</span><br><span class="line">License: GNU GPLv3+, due to <span class="keyword">use</span> <span class="keyword">of</span> the GNU Scientific <span class="keyword">Library</span></span><br><span class="line"><span class="keyword">Version</span>: <span class="number">1.9</span> (<span class="keyword">using</span> htslib <span class="number">1.9</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Usage</span>:   bcftools [<span class="comment">--version|--version-only] [--help] &lt;command&gt; &lt;argument&gt;</span></span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Indexing</span></span><br><span class="line">   <span class="keyword">index</span>        <span class="keyword">index</span> VCF/BCF files</span><br><span class="line"></span><br><span class="line"><span class="comment">-- VCF/BCF manipulation</span></span><br><span class="line">   annotate     annotate <span class="keyword">and</span> edit VCF/BCF files</span><br><span class="line">   <span class="keyword">concat</span>       concatenate VCF/BCF files <span class="keyword">from</span> the same <span class="keyword">set</span> <span class="keyword">of</span> samples</span><br><span class="line">   <span class="keyword">convert</span>      <span class="keyword">convert</span> VCF/BCF files <span class="keyword">to</span> different formats <span class="keyword">and</span> back</span><br><span class="line">   isec         intersections <span class="keyword">of</span> VCF/BCF files</span><br><span class="line">   <span class="keyword">merge</span>        <span class="keyword">merge</span> VCF/BCF files files <span class="keyword">from</span> non-overlapping <span class="keyword">sample</span> <span class="keyword">sets</span></span><br><span class="line">   norm         <span class="keyword">left</span>-align <span class="keyword">and</span> normalize indels</span><br><span class="line">   <span class="keyword">plugin</span>       <span class="keyword">user</span>-defined plugins</span><br><span class="line">   <span class="keyword">query</span>        transform VCF/BCF <span class="keyword">into</span> <span class="keyword">user</span>-defined formats</span><br><span class="line">   reheader     <span class="keyword">modify</span> VCF/BCF header, <span class="keyword">change</span> <span class="keyword">sample</span> <span class="keyword">names</span></span><br><span class="line">   <span class="keyword">sort</span>         <span class="keyword">sort</span> VCF/BCF <span class="keyword">file</span></span><br><span class="line">   <span class="keyword">view</span>         VCF/BCF conversion, <span class="keyword">view</span>, subset <span class="keyword">and</span> filter VCF/BCF files</span><br><span class="line"></span><br><span class="line"><span class="comment">-- VCF/BCF analysis</span></span><br><span class="line">   <span class="keyword">call</span>         SNP/indel <span class="keyword">calling</span></span><br><span class="line">   consensus    <span class="keyword">create</span> consensus <span class="keyword">sequence</span> <span class="keyword">by</span> applying VCF variants</span><br><span class="line">   cnv          HMM CNV <span class="keyword">calling</span></span><br><span class="line">   csq          <span class="keyword">call</span> variation consequences</span><br><span class="line">   filter       filter VCF/BCF files <span class="keyword">using</span> <span class="keyword">fixed</span> thresholds</span><br><span class="line">   gtcheck      <span class="keyword">check</span> <span class="keyword">sample</span> concordance, detect <span class="keyword">sample</span> swaps <span class="keyword">and</span> contamination</span><br><span class="line">   mpileup      multi-way pileup producing genotype likelihoods</span><br><span class="line">   polysomy     detect <span class="built_in">number</span> <span class="keyword">of</span> chromosomal copies</span><br><span class="line">   roh          identify runs <span class="keyword">of</span> autozygosity (HMM)</span><br><span class="line">   stats        produce VCF/BCF stats</span><br><span class="line"></span><br><span class="line">Most commands <span class="keyword">accept</span> VCF, bgzipped VCF, <span class="keyword">and</span> BCF <span class="keyword">with</span> the <span class="keyword">file</span> <span class="keyword">type</span> detected</span><br><span class="line">automatically even <span class="keyword">when</span> streaming <span class="keyword">from</span> a pipe. Indexed VCF <span class="keyword">and</span> BCF will <span class="keyword">work</span></span><br><span class="line"><span class="keyword">in</span> <span class="keyword">all</span> situations. Un-indexed VCF <span class="keyword">and</span> BCF <span class="keyword">and</span> streams will <span class="keyword">work</span> <span class="keyword">in</span> most but</span><br><span class="line"><span class="keyword">not</span> <span class="keyword">all</span> situations. </span><br></pre></td></tr></table></figure>
</blockquote>
<h1>Sup. ARTICNetwork workflow</h1>
<p>ARTIC Network is used in conjunction with Nanopore sequencer. It can be minION or other models. The control software of the sequencer - MiniKnow - will generate sequencing data in real time and perform basecalling in real time. The main software used in this workflow is RAMPART. The software will read the data generated by MinKnow, and then make statistics, such as how much data is generated, how the data length is distributed, etc., and visualize it.</p>
<p>Nanopore | bioinformatics<br>
<a href="https://artic.network/ncov-2019/ncov2019-bioinformatics-sop.html" target="_blank" rel="noopener">nCoV-2019 novel coronavirus bioinformatics protocol</a></p>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Nanopore</category>
      </categories>
      <tags>
        <tag>Nanopore</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记_数量生态学_3.关联测度与矩阵</title>
    <url>/2020/04/20/NumericalEcologywithR-3-associationmeasuresandmatrix/</url>
    <content><![CDATA[<p><strong>摘要：</strong> 介绍了关联测度的主要类别（Q模式和R模式），Q模式和R模式中对于定量和二元数据相异矩阵的计算，以及物种数据的预转化。</p>
<a id="more"></a>
<h1>目标</h1>
<ul>
<li>快速了解关联系数的主要类别；</li>
<li>学习如何计算、查看和可视化比较相异矩阵（Q模式）和依赖矩阵（R模式）；</li>
<li>将关联测度分析应用到案例数据集；</li>
<li>学习或修改R中一些与关联测度分析相关的基本函数。</li>
</ul>
<h1>关联测度的主要类别（简短概述）</h1>
<h2 id="Q模式和R模式">Q模式和R模式</h2>
<ul>
<li>Q mode：比较对象对；关联测度是对象之间的距离（相异性）或相似性，例如欧氏距离、Jaccard相似系数。</li>
<li>R mode：比较变量对；关联测度是变量之间的依赖性测度，例如协方差或相关系数。</li>
</ul>
<h2 id="Q模式下对称或非对称的系数：双零问题">Q模式下对称或非对称的系数：双零问题</h2>
<ul>
<li>①在大多数情况下，一个物种在两个样方内同时缺失，并不能成为这两个样方具有组成相似的依据，因为引起双缺失的原因可能完全不同；②在物种矩阵内，不可解释的双零问题取决于物种数量，因此也会随着监测到的稀有数量的增加而显著增加。因此，物种存在的信息比物种缺失的信息有更明确的意义。</li>
<li>如果视双零为相似性的依据，则相似系数是对称的，其他是非对称的。</li>
<li>大部分情况下，应该优先选择非对称系数，除非可以确定引起双缺失的原因相同。</li>
</ul>
<h2 id="定性或定量数据的关联测度">定性或定量数据的关联测度</h2>
<p>大致可以分为两类：</p>
<ul>
<li>二元（1-0）变量的关联系数</li>
<li>定量变量的关联系数</li>
</ul>
<h2 id="概括">概括</h2>
<p>在分析之前，考虑以下的问题：</p>
<ul>
<li>比较对象（Q模式）还是比较变量（R模式）？</li>
<li>处理物种数据（通常为非对称系数）还是其他类型的变量（对称系数）？</li>
<li>数据是二元还是定量还是两者的混合？或是其他类型数据？</li>
</ul>
<h1>Q模式：计算对象之间的距离矩阵</h1>
<p>在R里，所有关联测度均是指距离测度。例如Jaccard指数本身是相似系数，但在stats、vegan和ade4程序包内输出的Jaccard指数均是距离系数。</p>
<h2 id="Q模式：定量的物种数据">Q模式：定量的物种数据</h2>
<p>定量的物种数据通常使用非对称的距离测度。在物种分析方面，常用的系数有 <strong>Bray-Curtis相异系数、弦距离、卡方距离和Hellinger距离</strong>。<br>
数据预处理</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#load</span> packages</span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(ade4)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(vegan)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(gclus)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(cluster)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(FD)</span></span></span><br><span class="line"><span class="selector-id">#import</span> data</span><br><span class="line">spe &lt;- read.csv(<span class="string">"DoubsSpe.csv"</span>, row.names=<span class="number">1</span>)</span><br><span class="line">env &lt;- read.csv(<span class="string">"DoubsEnv.csv"</span>, row.names=<span class="number">1</span>)</span><br><span class="line">spa &lt;- read.csv(<span class="string">"DoubsSpa.csv"</span>, row.names=<span class="number">1</span>)</span><br><span class="line"><span class="selector-id">#delete</span> sampling site <span class="number">8</span> where there was no data</span><br><span class="line">spe &lt;- spe[-<span class="number">8</span>,]</span><br><span class="line">env &lt;- env[-<span class="number">8</span>,]</span><br><span class="line">spa &lt;- spa[-<span class="number">8</span>,]</span><br></pre></td></tr></table></figure>
<p>定量物种数据的相异和距离测度</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">#原始物种数据的bray-curtis相异矩阵</span><br><span class="line"><span class="keyword">spe</span>.db &lt;- vegdist(<span class="keyword">spe</span>)</span><br><span class="line">#对数转化后物种数据的Bray-Curtis相异矩阵</span><br><span class="line"><span class="keyword">spe</span>.dbln &lt;- vegdist(log1p(<span class="keyword">spe</span>))</span><br><span class="line">#弦距离矩阵</span><br><span class="line"><span class="keyword">spe</span>.<span class="keyword">norm</span> &lt;- decostand(<span class="keyword">spe</span>, <span class="string">"nor"</span>)</span><br><span class="line"><span class="keyword">spe</span>.dc &lt;- dist(<span class="keyword">spe</span>.<span class="keyword">norm</span>)</span><br><span class="line">#Hellinger距离矩阵</span><br><span class="line"><span class="keyword">spe</span>.hel &lt;- decostand(<span class="keyword">spe</span>, <span class="string">"hel"</span>)</span><br><span class="line"><span class="keyword">spe</span>.dh &lt;- dist(<span class="keyword">spe</span>.hel)</span><br><span class="line">#卡方距离矩阵</span><br><span class="line"><span class="keyword">spe</span>.chi&lt;-decostand(<span class="keyword">spe</span>,<span class="string">"chi.square"</span>)</span><br><span class="line"><span class="keyword">spe</span>.<span class="keyword">ds</span>&lt;-dist(<span class="keyword">spe</span>.chi)</span><br></pre></td></tr></table></figure>
<h2 id="Q模式：二元物种数据">Q模式：二元物种数据</h2>
<p>二元物种数据的相异测度：<strong>Jaccard相异矩阵、Sorensen相异矩阵和Ochiai相异矩阵</strong><br>
注意：所有的二元距离函数在计算系数时，均会自动对数据进行二元转化，因此这里的数据不需要二元转化（decostand(.,“pa”))。函数dist.binary()会自动对数据进行二元转化，但函数vegdist()需要设定参数binary=TRUE。</p>
<figure class="highlight monkey"><table><tr><td class="code"><pre><span class="line"><span class="meta">#Jaccard相异矩阵</span></span><br><span class="line">spe.dj &lt;- vegdist(spe, <span class="string">"jac"</span>, binary=<span class="literal">TRUE</span>)<span class="meta">#使用vegdist()</span></span><br><span class="line">spe.dj2 &lt;- dist(spe, <span class="string">"binary"</span>)<span class="meta">#使用dist()</span></span><br><span class="line">spe.dj3 &lt;- dist.binary(spe, <span class="function"><span class="keyword">method</span>=</span><span class="number">1</span>)<span class="meta">#使用dist.binary()</span></span><br><span class="line"><span class="meta">#Sorensen相异矩阵</span></span><br><span class="line">spe.ds &lt;- dist.binary(spe, <span class="function"><span class="keyword">method</span>=</span><span class="number">5</span>)<span class="meta">#使用dist.binary()</span></span><br><span class="line">spe.ds2 &lt;- vegdist(spe, <span class="string">"bray"</span>, binary=<span class="literal">TRUE</span>)<span class="meta">#使用vegdist()</span></span><br><span class="line"><span class="meta">#Ochiai相异矩阵</span></span><br><span class="line">spe.och &lt;- dist.binary(spe, <span class="function"><span class="keyword">method</span>=</span><span class="number">7</span>)<span class="meta">#使用dist.binary()</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>相异矩阵的可视化<br>
使用glucs程序包和自己编写的coldiss()函数</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">library(gclus)</span><br><span class="line">source(<span class="string">"coldiss.R"</span>)#红紫色相异系数接近0，青绿色相异系数接近1.</span><br><span class="line">coldiss(spe.db, <span class="attribute">nc</span>=4, <span class="attribute">byrank</span>=<span class="literal">FALSE</span>, <span class="attribute">diag</span>=<span class="literal">TRUE</span>)#byrank=FALSE,等区间分级，即每个颜色所包含的值得区间一样长。</span><br><span class="line">coldiss(spe.dbln, <span class="attribute">nc</span>=4, <span class="attribute">byrank</span>=<span class="literal">FALSE</span>, <span class="attribute">diag</span>=<span class="literal">TRUE</span>)</span><br><span class="line">coldiss(spe.dc, <span class="attribute">byrank</span>=<span class="literal">FALSE</span>, <span class="attribute">diag</span>=<span class="literal">TRUE</span>)#默认nc=4</span><br><span class="line">coldiss(spe.dh, <span class="attribute">byrank</span>=<span class="literal">FALSE</span>, <span class="attribute">diag</span>=<span class="literal">TRUE</span>)</span><br><span class="line">coldiss(spe.dj, <span class="attribute">byrank</span>=<span class="literal">FALSE</span>, <span class="attribute">diag</span>=<span class="literal">TRUE</span>)</span><br><span class="line">spe.s1 &lt;- dist.binary(spe, <span class="attribute">method</span>=2)#简单匹配相异系数</span><br><span class="line">coldiss(spe.s1^2, <span class="attribute">byrank</span>=<span class="literal">FALSE</span>, <span class="attribute">diag</span>=<span class="literal">TRUE</span>) </span><br></pre></td></tr></table></figure>
</blockquote>
<p>spe.db<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/1.spe.db.visualization.png" alt="1"><br>
spe.dbln<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/2.spe.dbln.visualization.png" alt="2"><br>
spe.dc<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/3.spe.dc.visualization.png" alt="3"><br>
spe.dh<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/4.spe.dh.visualization.png" alt="4"><br>
<a href="http://spe.dj" target="_blank" rel="noopener">spe.dj</a><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/5.spe.dj.visualization.png" alt="5"><br>
spe.s1<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/6.spe.s12.visualization.png" alt="6"></p>
<h2 id="Q模式：定量数据（除物种多度数据外的数据）">Q模式：定量数据（除物种多度数据外的数据）</h2>
<p>对双零有明确解释的定量数据，<strong>欧氏距离（Euclidean distance）</strong> 是对称距离测度的最佳选择。注意欧氏距离受变量纲量影响较大，所以计算前需要对数据进行转化。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">env2 &lt;- env[,-1]#剔除das，因其属于空间变量而非环境因子变量。</span><br><span class="line">env.de &lt;- dist(scale(env2),<span class="string">"euclidean"</span>)#由标准化后的env2计算欧氏距离</span><br><span class="line">coldiss(env.de, <span class="attribute">byrank</span>=T, <span class="attribute">diag</span>=<span class="literal">TRUE</span>)#byrank=T,等大小分级，即每个颜色所包含的值的数量一样多。</span><br><span class="line">coldiss(spe.dh, <span class="attribute">byrank</span>=T, <span class="attribute">diag</span>=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>
<p><a href="http://env.de" target="_blank" rel="noopener">env.de</a><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/7.env.de.visualization.png" alt="7"><br>
spe.dh<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/8.spe.dh.visualization.png" alt="8"><br>
笛卡尔坐标系不应该标准化（如果需要可以中心化）；球坐标系必须标准化才能计算欧氏距离。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">###基于二维空间坐标的欧氏距离矩阵</span></span><br><span class="line">spa.de &lt;- dist(spa)</span><br><span class="line">coldiss(spa.de, <span class="attribute">byrank</span>=T, <span class="attribute">diag</span>=<span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment">###基于一维das变量（离源头距离）的欧氏距离矩阵</span></span><br><span class="line">das.df &lt;- as.data.frame(env<span class="variable">$das</span>, row.<span class="attribute">names</span>=rownames(env))</span><br><span class="line">riv.de &lt;- dist(das.df)</span><br><span class="line">coldiss(riv.de, <span class="attribute">byrank</span>=T, <span class="attribute">diag</span>=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>
<p><a href="http://spa.de" target="_blank" rel="noopener">spa.de</a><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/9.spe.de.visualization.png" alt="9"><br>
<a href="http://riv.de" target="_blank" rel="noopener">riv.de</a><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/10.riv.de.visualization.png" alt="10"></p>
<h2 id="Q模式：二元数据（除物种有-无数据外的数据）">Q模式：二元数据（除物种有-无数据外的数据）</h2>
<p><strong>简单匹配系数Sokal&amp;Michener</strong></p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">#随机生成数据</span><br><span class="line">var1 &lt;- sample(c(rep(<span class="number">1</span>,<span class="number">10</span>), rep(<span class="number">0</span>,<span class="number">20</span>)))</span><br><span class="line">var2 &lt;- c(rep(<span class="number">0</span>,<span class="number">15</span>), rep(<span class="number">1</span>,<span class="number">15</span>))</span><br><span class="line">var3 &lt;- rep(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">5</span>)</span><br><span class="line">var4 &lt;- rep(c(rep(<span class="number">1</span>,<span class="number">5</span>), rep(<span class="number">0</span>,<span class="number">10</span>)), <span class="number">2</span>)</span><br><span class="line">var5<span class="number">.1</span> &lt;- sample(c(rep(<span class="number">1</span>,<span class="number">7</span>), rep(<span class="number">0</span>,<span class="number">9</span>)))</span><br><span class="line">var5<span class="number">.2</span> &lt;- c(rep(<span class="number">0</span>,<span class="number">4</span>), rep(<span class="number">1</span>,<span class="number">10</span>))</span><br><span class="line">var5 &lt;- c(var5<span class="number">.1</span>, var5<span class="number">.2</span>)</span><br><span class="line">dat &lt;- data.frame(var1, var2, var3, var4, var5)</span><br><span class="line">dim(dat)</span><br><span class="line">#简单匹配系数矩阵和可视化</span><br><span class="line">dat.s1 &lt;- dist.binary(dat, method=<span class="number">2</span>)</span><br><span class="line">coldiss(dat.s1, diag=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>
<p>dat.s1<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/11.dat.s1.visualization.png" alt="11"></p>
<h2 id="Q模式：混合类型、包括分类（定性多级）变量">Q模式：混合类型、包括分类（定性多级）变量</h2>
<p><strong>Gower相异系数</strong><br>
1.Gower相异系数可以利用cluster程序包内daisy()函数计算。应避免使用vegdist()函数（参数method=“gower”）计算Gower相异系数，因为此函数只适用于定量数据和有-无数据计算，对多级变量并不适用。<br>
2.FD程序包里gowdis()函数是计算Gower相似系数最完善的函数，它可以计算混合变量（包括非对称的二元变量）的距离，也可以设置变量的权重。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">#随机生成数据</span><br><span class="line">var.g1 &lt;- rnorm(<span class="number">30</span>,<span class="number">0</span>,<span class="number">1</span>) #随机生成<span class="number">30</span>个正态分布的数据，均值为<span class="number">0</span>，标准差为<span class="number">1</span></span><br><span class="line">var.g2 &lt;- runif(<span class="number">30</span>,<span class="number">0</span>,<span class="number">5</span>) #随机生成<span class="number">30</span>个从<span class="number">0</span>到<span class="number">5</span>均匀分布的数据</span><br><span class="line">var.g3 &lt;- gl(<span class="number">3</span>,<span class="number">10</span>) #随机生成<span class="number">3</span>个水平的因子变量，每个水平<span class="number">10</span>个重复。</span><br><span class="line">var.g4 &lt;- gl(<span class="number">2</span>,<span class="number">5</span>,<span class="number">30</span>) #生成与var.g3正交的<span class="number">2</span>个水平的因子变量</span><br><span class="line">dat2 &lt;- data.frame(var.g1,var.g2,var.g3,var.g4)</span><br><span class="line">summary(dat2)</span><br></pre></td></tr></table></figure>
<p>Gower相异系数和可视化<br>
使用daisy()</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">dat2<span class="selector-class">.S15</span> &lt;- daisy(dat2, <span class="string">"gower"</span>)</span><br><span class="line"><span class="function"><span class="title">range</span><span class="params">(dat2.S15)</span></span></span><br><span class="line"><span class="function"><span class="title">coldiss</span><span class="params">(dat2.S15, diag=TRUE)</span></span></span><br><span class="line"></span><br><span class="line">dat2partial<span class="selector-class">.S15</span> &lt;- daisy(dat2[,<span class="number">3</span>:<span class="number">4</span>], <span class="string">"gower"</span>)</span><br><span class="line"><span class="function"><span class="title">coldiss</span><span class="params">(dat2partial.S15, diag=TRUE)</span></span></span><br><span class="line"><span class="function"><span class="title">levels</span><span class="params">(factor(dat2partial.S15)</span></span>)</span><br></pre></td></tr></table></figure>
<p>dat2.s15<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/12.dat2.s15.visualization.png" alt="12"><br>
dat2.partial.s15<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/13.dat2.partial.s15.visualization.png" alt="13"></p>
<p>使用gowdis()</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">library(FD)  </span><br><span class="line">?gowdis</span><br><span class="line">dat2.S15<span class="number">.2</span> &lt;- gowdis(dat2)</span><br><span class="line">range(dat2.S15<span class="number">.2</span>)</span><br><span class="line">coldiss(dat2.S15<span class="number">.2</span>, diag=TRUE)</span><br><span class="line"></span><br><span class="line">dat2partial.S15<span class="number">.2</span> &lt;- gowdis(dat2[,<span class="number">3</span>:<span class="number">4</span>])</span><br><span class="line">coldiss(dat2partial.S15<span class="number">.2</span>, diag=TRUE)</span><br><span class="line">levels(factor(dat2partial.S15<span class="number">.2</span>))</span><br></pre></td></tr></table></figure>
<p>dat2.s15.2<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/14.dat2.s15.2.visualization.png" alt="14"><br>
dat2.partial.s15.2.<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/15.dat2partial.s15.2.visualization.png" alt="15"></p>
<h1>R模式：计算变量之间的依赖矩阵</h1>
<h2 id="R模式：物种多度数据">R模式：物种多度数据</h2>
<p><strong>卡方检验：使用Q模式的转置矩阵</strong></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">spe<span class="selector-class">.t</span> &lt;- t(spe)#使物种名称为行名</span><br><span class="line">spe<span class="selector-class">.t</span><span class="selector-class">.chi</span> &lt;- decostand(spe<span class="selector-class">.t</span>, <span class="string">"chi.square"</span>)</span><br><span class="line">spe<span class="selector-class">.t</span><span class="selector-class">.D16</span> &lt;- dist(spe<span class="selector-class">.t</span>.chi)</span><br><span class="line"><span class="function"><span class="title">coldiss</span><span class="params">(spe.t.D16, diag=TRUE)</span></span></span><br></pre></td></tr></table></figure>
<p>spe.t.d16<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/16.spe.t.d16.visualization.png" alt="16"></p>
<h2 id="R模式：物种有-无数据">R模式：物种有-无数据</h2>
<p>对于二元物种数据，<strong>Jaccard、Sorensen和Qchiai系数</strong> 同样可以用于R模式。<br>
此处使用物种有-无数据 <strong>转置后的矩阵（spe.t）</strong> 计算Jaccard系数。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">spe.t.S7 &lt;- vegdist(spe.t, <span class="string">"jaccard"</span>, <span class="attribute">binary</span>=<span class="literal">TRUE</span>)</span><br><span class="line">coldiss(spe.t.S7, <span class="attribute">diag</span>=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>
<p>spe.t.S7<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/17.spe.t.s7.visualization.png" alt="17"></p>
<h2 id="R模式：定量和序数数据（除物种多度外的数据）">R模式：定量和序数数据（除物种多度外的数据）</h2>
<p><strong>相同量纲、线性模型：协方差、Pearson相关系数<br>
序数变量对或单调但非线性关系定量变量对：秩相关系数（spearman相关或kendall相关）</strong><br>
使用env进行演示<br>
pearson相关系数</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line"><span class="keyword">env</span>.pearson &lt;- cor(<span class="keyword">env</span>, method=<span class="string">"pearson"</span>)</span><br><span class="line">round(<span class="keyword">env</span>.pearson, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">env</span>.o &lt;- order.single(<span class="keyword">env</span>.pearson) #使用分层聚类对对象进行排序，使相似的对象相邻</span><br><span class="line"><span class="keyword">source</span>(<span class="string">"panelutils.R"</span>)</span><br><span class="line">pairs(<span class="keyword">env</span>[,<span class="keyword">env</span>.o], lower.<span class="keyword">panel</span>=<span class="keyword">panel</span>.smooth, upper.<span class="keyword">panel</span>=<span class="keyword">panel</span>.cor,</span><br><span class="line">	diag.<span class="keyword">panel</span>=<span class="keyword">panel</span>.hist, main=<span class="string">"Pearson Correlation Matrix"</span>)</span><br></pre></td></tr></table></figure>
<p>env.pearson<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/18.env.pearson.png" alt="18"><br>
kendall相关系数</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line"><span class="keyword">env</span>.ken &lt;- cor(<span class="keyword">env</span>, method=<span class="string">"kendall"</span>)</span><br><span class="line"><span class="keyword">env</span>.o &lt;- order.single(<span class="keyword">env</span>.ken)</span><br><span class="line">pairs(<span class="keyword">env</span>[,<span class="keyword">env</span>.o], lower.<span class="keyword">panel</span>=<span class="keyword">panel</span>.smooth, upper.<span class="keyword">panel</span>=<span class="keyword">panel</span>.cor,</span><br><span class="line">	method=<span class="string">"kendall"</span>, diag.<span class="keyword">panel</span>=<span class="keyword">panel</span>.hist, main=<span class="string">"Kendall Correlation Matrix"</span>)</span><br></pre></td></tr></table></figure>
<p>env.kendall<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-3-associationmeasuresandmatrix/19.env.kendall.png" alt="19"></p>
<h2 id="R模式：二元数据（除物种多度外的数据）">R模式：二元数据（除物种多度外的数据）</h2>
<p><strong>pearson相关系数矩阵</strong></p>
<h1>物种数据的预转化</h1>
<p>线性方法其实并不适合物种数据。但是通过对原始数据进行转化然后计算欧氏距离获得的物种数据的非对称的关联测度，可使线性分析方法应用于物种数据。<br>
5种物种数据预转化的技术：<strong>total转化、弦转化、Hellinger转化、卡方转化、以及wisconsin转化</strong>。</p>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>R</category>
      </categories>
      <tags>
        <tag>Rbasics</tag>
      </tags>
  </entry>
  <entry>
    <title>Nanopore_9.Polishing after stitching 拼接完优化</title>
    <url>/2020/06/13/Nanopore8-polishingafterstitching/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> 本文介绍了组装结果的优化原理，纠错软件（pilon和racon）的使用，以及共线性检测（mummer和minimap2）和可视化（dotPlotly）。</p>
<a id="more"></a>
<h1>组装结果优化原理</h1>
<h2 id="为什么需要对组装结果进行矫正（polishing">为什么需要对组装结果进行矫正（polishing)?</h2>
<p>由于三代nanopore测序质量比较低，原始数据中存在大量测序错误，即使拼接前进行了纠错，组装结果中仍会存在错误，用长读长或短读长的数据对组装结果进行矫正可以，提高准确率，减少Miscalls，Indels，改善由错装（mis-assemblies)导致的低比对区域。因此，序列拼接完需要对拼接结果进行优化，根据文献报道，经过polish之后，拼接结果与真实基因组（其他测序数据拼接结果）的一致性可以达到99.99%以上。即使组装工具带有纠错功能，仍建议再次进行一轮或多轮的矫正。</p>
<h2 id="为什么需要对组装结果进行矫正（polishing-2">为什么需要对组装结果进行矫正（polishing)?</h2>
<p>这是因为nanopore数据的主要的错误来自于插入与缺失，每次将测序数据与拼接基因组比对能够发现一些错误。下一轮数据与纠错后的序列重新比对，可以发现新的错误，这样经过多轮之后，就可以减少错误。</p>
<blockquote>
<p>组装结果纠错与变异检测、一致性序列的关系：原理是一样的，都是堆叠完找差异；区别是纠错是同一个样本的测序数据；后两者是测序数据和参考序列比。</p>
</blockquote>
<h1>纠错的软件</h1>
<p>常用纠错工具: medaka, pilon, racon, nanopolish等，可以利用三代测序进行纠错，也可以加入二代数据进行纠错。</p>
<h2 id="medaka※">medaka※</h2>
<p><a href="https://github.com/nanoporetech/medaka" target="_blank" rel="noopener">medaka</a>是一个基于叠加序列的一致性序列修正工具，高度推荐使用以获得最佳的一致性准确性。Medaka现可以用于变体识别（variant calling）。使用纳米孔R9.4.1版芯片和最佳的工具，现在你可以进行SNPs识别，获得99%准确率。例如，使用当前的R9.4.1版纳米孔，利用Flip-flop碱基识别器和 Medaka, 测序金黄色葡萄球菌（ <em>S.aureus</em> ）基因组，准确现达到 Q44，其它的小型基因组准确率约 Q40。<br>
只支持三代数据<br>
➢ 由 Oxford Nanopore 开发的开源软件<br>
➢ 仅需使用.fasta 或.fastq 数据<br>
➢ 速度比Nanopolish (输入数据是.fast5格式)快50倍，支持CPU和GPU<br>
➢ 通常在Pomoxis组装后使用<br>
➢ 用FASTQ文档和组装结果作为输入文件<br>
➢ 50X5Mbase基因组用时20分钟<br>
➢ 在Racon基础上，进一步提升了数据准确率<br>
➢ 可针对不同数据进行个性化纠错方法训练<br>
➢ 兼容Linux和MacOS系统<br>
usage:</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#conda</span> create -n medaka -c conda-forge -c bioconda -y medaka</span><br><span class="line">conda activate medaka</span><br><span class="line">medaka_consensus -<span class="selector-tag">i</span> 原始纳米孔测序数据 -d 需要纠错的拼接结果 -o 纠错后输出结果文件 -m 芯片类型 -v medaka<span class="selector-class">.vcf</span> -t <span class="number">12</span> &gt;medaka.log</span><br><span class="line">#最终结果是medaka<span class="selector-class">.vcf</span><span class="selector-class">.gz</span> 可能需要运行<span class="number">40</span>min</span><br></pre></td></tr></table></figure>
<p>use cases:</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">conda activate medaka</span><br><span class="line">medaka_consensus -<span class="selector-tag">i</span> /ifs1/TestDatas/namikong/<span class="number">0611</span>/rawdata/SRR8608880<span class="selector-class">.sra</span><span class="selector-class">.fastq</span> -d assembly<span class="selector-class">.fasta</span> -o result -m r941_min_high_g360 -v medaka<span class="selector-class">.vcf</span> -t <span class="number">12</span> &gt;medaka.log</span><br><span class="line">conda deactivate</span><br></pre></td></tr></table></figure>
<h2 id="pilon">pilon</h2>
<p><a href="https://github.com/broadinstitute/pilon" target="_blank" rel="noopener">pilon</a>是由broadinstitute研究所开发的纠错工具，输入原始拼接结果以及原始测序数据比对到拼接结果的bam文件即可。pilon通过比对后的bam文件，可以识别拼接中非一致性的序列，包括单碱基的不同，小的indel，大的indel，后者空位gap，以及错误拼接的区域。输入的bam可以来自于二代测序数据的比对，也可以来自于三代测序数据比对得到的bam，bam文件需要排序并建立索引。<br>
支持二代数据和三代数据</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">wget https:<span class="regexp">//gi</span>thub.com<span class="regexp">/broadinstitute/</span>pilon<span class="regexp">/releases/</span>download<span class="regexp">/v1.23/</span>pilon-<span class="number">1.23</span>.jar</span><br><span class="line">java -Xmx16G -jar pilon-<span class="number">1.23</span>.jar</span><br></pre></td></tr></table></figure>
<p>如果要顺利运行程序，要求JAVA &gt; 1.7, 以及根据基因组大小而定的内存，一般而言是1M大小的基因对应1GB的内存。</p>
<blockquote>
<p><a href="https://www.jianshu.com/p/cceeb7d1f413" target="_blank" rel="noopener">三代组装：使用pilon对基因组进行polish</a></p>
</blockquote>
<h3 id="二代数据">二代数据</h3>
<p>illumina数据</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment">#对拼接结果建立索引</span></span><br><span class="line">bwa index assembly.fasta</span><br><span class="line"></span><br><span class="line"><span class="comment">#illumina比对排序建索引 | bwa, samtools</span></span><br><span class="line">bwa mem -t 24 -R '@RG\tID<span class="function">:foo</span>\tSM<span class="function">:bar</span>:\tPL<span class="function">:ILLUMINA</span>' assembly.fasta <span class="string">/ifs1/TestDatas/nanopore/day2-Assembly/2.rawdata/illumina/SRR8608858.sra_1.fastq.gz</span> <span class="string">/ifs1/TestDatas/nanopore/day2-Assembly/2.rawdata/illumina/SRR8608858.sra_2.fastq.gz</span> &gt;illumina.sam <span class="comment">#二代主流用bwa比对</span></span><br><span class="line">samtools sort -@ 4 -O bam -o illumina.sorted.bam illumina.sam</span><br><span class="line">samtools index illumina.sorted.bam</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用pilon进行纠错</span></span><br><span class="line">java -Xmx32G -jar <span class="string">/ifs1/Software/biosoft/pilon/pilon-1.23.jar</span> <span class="params">--genome</span> assembly.fasta <span class="params">--fix</span> all <span class="params">--changes</span> <span class="params">--frags</span> illumina.sorted.bam <span class="params">--output</span> pillon <span class="params">--outdir</span> result <span class="params">--threads</span> 24 <span class="params">--vcf</span> 2&gt; pilon.log</span><br><span class="line"><span class="comment">##最终结果是pilon.fasta</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>Usage: bwa mem [options] <idxbase> &lt;in1.fq&gt; [in2.fq]<br>
Usage: pilon --genome genome.fasta [–frags frags.bam] [–jumps jumps.bam] [–unpaired unpaired.bam]<br>
–frags表示输入的是1kb以内的paired-end文库，–jumps表示 大于1k以上的mate pair文库, --bam则是让软件自己猜测</p>
</blockquote>
<h3 id="三代数据">三代数据</h3>
<p>nanopore数据</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment">#minimap2比对</span></span><br><span class="line">minimap2 -ax map-ont assembly.fasta <span class="string">/ifs1/TestDatas/namikong/0611/rawdata/SRR8608880.sra.fastq</span> &gt;assembly.sam</span><br><span class="line"></span><br><span class="line"><span class="comment">#对bam进行处理</span></span><br><span class="line">samtools sort -@ 4 -O bam -o assembly.sorted.bam assembly.sam</span><br><span class="line">samtools index assembly.sorted.bam</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用pilon进行纠错</span></span><br><span class="line">java -Xmx32G -jar <span class="string">/ifs1/Software/biosoft/pilon/pilon-1.23.jar</span> <span class="params">--genome</span> assembly.fasta <span class="params">--fix</span> all <span class="params">--changes</span> <span class="params">--bam</span> assembly.sorted.bam <span class="params">--output</span> pillon <span class="params">--outdir</span> result <span class="params">--threads</span> 24 <span class="params">--vcf</span> 2&gt; pilon.log</span><br></pre></td></tr></table></figure>
<h2 id="racon">racon</h2>
<p><a href="http://github.com/isovic/racon" target="_blank" rel="noopener">racon</a>是一个基于minimap和miniasm的，构建一致性序列（consensus）的一款软件，也可以用于纠错。既可以用于三代数据也可以用于二代数据的纠错。输入数据需要三个，首先是contig，然后是测序的reads，以及前面二者比对的结果，这个比对结果可以是MHAP、PAF、SAM等三种格式当中的一种即可。数据结果为纠错后的 contig序列。一般racon纠错也可以进行多轮。<br>
支持二代数据（不支持pair end模式）和三代数据，支持CUDA<br>
示例：racon对nanopore数据进行三轮纠错</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#连接原始拼接结果</span></span><br><span class="line">DRAFT=assembly.fasta</span><br><span class="line">READS=<span class="regexp">/ifs1/</span>TestDatas<span class="regexp">/namikong/</span><span class="number">0611</span><span class="regexp">/rawdata/</span>SRR8608880.sra.fastq</span><br><span class="line"></span><br><span class="line"><span class="comment">#minimap2比对</span></span><br><span class="line">minimap2 -t <span class="number">12</span> <span class="variable">$&#123;DRAFT&#125;</span> <span class="variable">$&#123;READS&#125;</span> &gt; round_1.paf</span><br><span class="line"><span class="comment">#racon进行纠错</span></span><br><span class="line"><span class="regexp">/ifs1/</span>Software<span class="regexp">/bin/</span>racon -t <span class="number">24</span> <span class="variable">$&#123;READS&#125;</span> round_1.paf <span class="variable">$&#123;DRAFT&#125;</span> &gt; racon_round1.fasta</span><br><span class="line"></span><br><span class="line"><span class="comment">#第二轮纠错    </span></span><br><span class="line">minimap2 -t <span class="number">12</span> racon_round1.fasta <span class="variable">$&#123;READS&#125;</span> &gt; round_2.paf</span><br><span class="line"><span class="regexp">/ifs1/</span>Software<span class="regexp">/bin/</span>racon -t <span class="number">24</span> <span class="variable">$&#123;READS&#125;</span> round_2.paf racon_round1.fasta&gt; racon_round2.fasta</span><br><span class="line"></span><br><span class="line"><span class="comment">#第三轮纠错</span></span><br><span class="line">minimap2 -t <span class="number">12</span> racon_round2.fasta <span class="variable">$&#123;READS&#125;</span>  &gt; round_3.paf</span><br><span class="line"><span class="regexp">/ifs1/</span>Software<span class="regexp">/bin/</span>racon -t <span class="number">24</span> <span class="variable">$&#123;READS&#125;</span>  round_3.paf racon_round2.fasta&gt; racon_round3.fasta</span><br></pre></td></tr></table></figure>
<blockquote>
<p>预测基因<br>
<code>prodigal -a s1037.faa -d s1037.fnn -i s1037.fna -o s1037.gbk</code><br>
后续可以做功能注释，RNAseq的分析等</p>
</blockquote>
<h1>共线性检测</h1>
<p>纠错前后比较一下，看一不一样（不是特别重要，做不做都行）</p>
<h2 id="利用dotPlotly绘图">利用dotPlotly绘图</h2>
<p><a href="https://github.com/tpoorten/dotPlotly" target="_blank" rel="noopener">dotPlotly</a>：需要依赖 optparse，ggplot2，plotly三个R包。</p>
<h3 id="mummer-dotPlotly">mummer + dotPlotly</h3>
<p>经过比对优化后的结果可以使用mummer进行全局比对，mummer软件包中自带的dnadiff可以对于两条fasta序列直接进行快速比对，找到两条序列之间的差别，比对结果可以使用 mumerplot绘制共线性图。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">#利用<span class="selector-tag">mummer</span> +  <span class="selector-tag">dotPlotly</span></span><br><span class="line"><span class="selector-tag">nucmer</span> <span class="selector-tag">--maxmatch</span> <span class="selector-tag">-l</span> 80 <span class="selector-tag">-c</span> 100 <span class="selector-tag">assembly</span><span class="selector-class">.fasta</span> <span class="selector-tag">after_pollish</span><span class="selector-class">.fasta</span> <span class="selector-tag">-p</span> <span class="selector-tag">nucmer</span></span><br><span class="line"><span class="selector-tag">delta-filter</span> <span class="selector-tag">-r</span> <span class="selector-tag">nucmer</span><span class="selector-class">.delta</span> &gt;<span class="selector-tag">filter</span><span class="selector-class">.delta</span></span><br><span class="line"><span class="selector-tag">show-coords</span> <span class="selector-tag">-c</span>  <span class="selector-tag">filter</span><span class="selector-class">.delta</span> &gt;<span class="selector-tag">filter</span><span class="selector-class">.delta</span><span class="selector-class">.coords</span></span><br><span class="line"><span class="selector-tag">mummerCoordsDotPlotly</span><span class="selector-class">.R</span> <span class="selector-tag">-i</span> <span class="selector-tag">filter</span><span class="selector-class">.delta</span><span class="selector-class">.coords</span> <span class="selector-tag">-o</span> <span class="selector-tag">filter</span><span class="selector-class">.delta</span><span class="selector-class">.plot</span> <span class="selector-tag">-m</span> 1000 <span class="selector-tag">q</span> 300000 <span class="selector-tag">-k</span> 10 <span class="selector-tag">-s</span> <span class="selector-tag">-t</span> <span class="selector-tag">-l</span> <span class="selector-tag">-p</span> 12</span><br></pre></td></tr></table></figure>
<p>看生成的filter.delta.plot.png图片</p>
<h3 id="利用Minimap2-dotPlotly">利用Minimap2 + dotPlotly</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">minimap2 -x asm5 assembly<span class="selector-class">.fasta</span> after_pollish<span class="selector-class">.fasta</span> &gt;minimap2<span class="selector-class">.paf</span> pafCoordsDotPlotly<span class="selector-class">.R</span> -<span class="selector-tag">i</span> minimap2<span class="selector-class">.paf</span> -o minimap2<span class="selector-class">.plot</span> -m <span class="number">2000</span> -<span class="selector-tag">q</span> <span class="number">500000</span> k <span class="number">10</span> -s -t -l -<span class="selector-tag">p</span> <span class="number">12</span></span><br></pre></td></tr></table></figure>
<p>看生成的minimap2.plot.html网页文件</p>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Nanopore</category>
      </categories>
      <tags>
        <tag>Nanopore</tag>
      </tags>
  </entry>
  <entry>
    <title>2020读书清单</title>
    <url>/2020/03/10/ReadingList/</url>
    <content><![CDATA[<p><strong>摘要</strong>：可看 - <strong>自我发现类</strong> 你当像鸟飞往你的山；我要快乐，不比正常；练习一个人：当我开始爱自己；按自己的意愿过一生；(如有必要，此处可加上 我是个年轻人，我心情不太好；当我谈跑步时，我谈些什么)。 | <strong>感情生活</strong>  我在三十岁的第一年I&amp;II；奥斯坦德的梦想家。</p>
<a id="more"></a>
<p><em><strong>NOTE</strong></em><br>
★★★及以上，都值得再读一遍。</p>
<h3 id="2020-人物传记4-小说4-散文集6-电台故事1-游记感慨1">2020 | 人物传记4/小说4/散文集6/电台故事1/游记感慨1</h3>
<table>
<thead>
<tr>
<th style="text-align:left">序号</th>
<th style="text-align:left">评分</th>
<th style="text-align:left">书名</th>
<th style="text-align:left">作者</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">出版时间</th>
<th style="text-align:left">摘录及书评</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left"><strong>按自己的意愿过一生</strong></td>
<td style="text-align:left">[中]王潇</td>
<td style="text-align:left">人物传记</td>
<td style="text-align:left">2016.01</td>
<td style="text-align:left"><a href="https://itsyunmeng.github.io/2020/03/10/2020-1-anzijideyiyuanguoyisheng/">观摩活法，研究自己。</a></td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">生吞</td>
<td style="text-align:left">[中]郑执</td>
<td style="text-align:left">小说</td>
<td style="text-align:left">2017.11</td>
<td style="text-align:left"><a href="https://itsyunmeng.github.io/2020/03/10/2020-2-shengtun/#more">无：不喜欢这个故事</a></td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left"><strong>你当像鸟飞往你的山</strong></td>
<td style="text-align:left">[美]Tara Westover / 任爱红·译</td>
<td style="text-align:left">人物传记</td>
<td style="text-align:left">2019.11</td>
<td style="text-align:left"><a href="https://itsyunmeng.github.io/2020/03/10/2020-3-educated/#more">教育使思想开阔</a></td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">★★★★☆</td>
<td style="text-align:left"><strong>我要快乐，不必正常</strong></td>
<td style="text-align:left">[英]Jeanette Winterson / 冯倩珠·译</td>
<td style="text-align:left">人物传记</td>
<td style="text-align:left">2018.06</td>
<td style="text-align:left"><a href="https://itsyunmeng.github.io/2020/03/10/2020-4-whyhappywhenyoucouldbenormal/#more">和自己和解</a></td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">我所理解的生活</td>
<td style="text-align:left">[中]韩寒</td>
<td style="text-align:left">散文集</td>
<td style="text-align:left">2013</td>
<td style="text-align:left"><a href="https://itsyunmeng.github.io/2020/03/10/2020-5-wosuolijiedeshenghuo/#more">口水文：知自己就好</a></td>
</tr>
<tr>
<td style="text-align:left">6</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">当我谈跑步时，我谈些什么</td>
<td style="text-align:left">[日]村上春树 / 施小炜·译</td>
<td style="text-align:left">散文集</td>
<td style="text-align:left">2015</td>
<td style="text-align:left"><a href="https://itsyunmeng.github.io/2020/03/10/2020-6-dangwopaobushi/">人生红灯的警示</a></td>
</tr>
<tr>
<td style="text-align:left">7</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left"><strong>练习一个人：当我开始爱自己</strong></td>
<td style="text-align:left">[中]陶立夏</td>
<td style="text-align:left">散文集</td>
<td style="text-align:left">2018</td>
<td style="text-align:left"><a href="http://localhost:4000/2020/03/17/2020-7-lainxiyigeren/" target="_blank" rel="noopener">浮生若梦，须知尽欢。</a></td>
</tr>
<tr>
<td style="text-align:left">8</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">我是个年轻人，我心情不太好</td>
<td style="text-align:left">[挪威]Erlend Loe / 宁蒙·译</td>
<td style="text-align:left">散文集</td>
<td style="text-align:left">2019.09</td>
<td style="text-align:left"><a href="http://localhost:4000/2020/03/20/2020-9-woshigenianqingrenwoxinqingbutaihao/" target="_blank" rel="noopener">口水文：25岁青年的碎碎念</a></td>
</tr>
<tr>
<td style="text-align:left">9</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">我决定活得有趣</td>
<td style="text-align:left">[中]蔡澜</td>
<td style="text-align:left">散文集</td>
<td style="text-align:left">2017.04</td>
<td style="text-align:left"><a href="https://itsyunmeng.github.io/2020/03/25/2020-10-wojuedinghuodeyouqu/">口水文：保持对生活的好奇</a></td>
</tr>
<tr>
<td style="text-align:left">10</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">我在三十岁的第一年I&amp;II</td>
<td style="text-align:left">[中]毛利</td>
<td style="text-align:left">小说</td>
<td style="text-align:left">2017.11 &amp; 2019.01</td>
<td style="text-align:left"><a href="https://itsyunmeng.github.io/2020/04/15/2020-12-wozaisanshisuidenayinian/">女人的三十岁</a></td>
</tr>
<tr>
<td style="text-align:left">11</td>
<td style="text-align:left">★☆☆☆☆</td>
<td style="text-align:left">永不放弃：特朗普自述</td>
<td style="text-align:left">[美]唐纳德·特朗普，梅瑞迪丝·麦基沃 / 蒋旭峰，刘佳[译]</td>
<td style="text-align:left">人物传记</td>
<td style="text-align:left">2016.04</td>
<td style="text-align:left"><a href="https://itsyunmeng.github.io/2020/05/02/2020-13-nevergiveup/">口水文，无细节</a></td>
</tr>
<tr>
<td style="text-align:left">12</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">开棺有喜：冥夫求放过</td>
<td style="text-align:left">[中]月兔兔</td>
<td style="text-align:left">小说</td>
<td style="text-align:left">2020</td>
<td style="text-align:left">鬼相关的大科普</td>
</tr>
<tr>
<td style="text-align:left">13</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">笑场</td>
<td style="text-align:left">[中]李诞</td>
<td style="text-align:left">散文集</td>
<td style="text-align:left">2016.01</td>
<td style="text-align:left"><a href="https://itsyunmeng.github.io/2020/09/14/2020-14-xiaochang/">扯经可看</a></td>
</tr>
<tr>
<td style="text-align:left">14</td>
<td style="text-align:left">★★★☆☆</td>
<td style="text-align:left">奥斯坦德梦想家</td>
<td style="text-align:left">[法]埃里克-埃马纽埃尔·施米特 / 徐晓雁[译]</td>
<td style="text-align:left">短篇小说</td>
<td style="text-align:left">2020.08</td>
<td style="text-align:left">反转很出色</td>
</tr>
<tr>
<td style="text-align:left">15</td>
<td style="text-align:left">★☆☆☆☆</td>
<td style="text-align:left">你一个人过的好吗</td>
<td style="text-align:left">[中]陈末</td>
<td style="text-align:left">电台故事集</td>
<td style="text-align:left">2020</td>
<td style="text-align:left">原来有些感情也同样乏味</td>
</tr>
<tr>
<td style="text-align:left">16</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">人生海海，劈浪前行</td>
<td style="text-align:left">[中]燕子</td>
<td style="text-align:left">游记·感慨</td>
<td style="text-align:left">2019.04</td>
<td style="text-align:left">无，突然觉得陶立夏蛮厉害</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记_数量生态学_2.探索性数据分析</title>
    <url>/2020/04/20/NumericalEcologywithR-2-exploratorydataanalysis/</url>
    <content><![CDATA[<p><strong>摘要：</strong> 物种和环境数据的探索性分析，包含生物多样性指数、物种数据转化、环境变量之间的关系、环境因子标准化和正态性检验等。</p>
<a id="more"></a>
<h1>目标</h1>
<p>探索性数据分析（exploratory data analysis, EDA），目的在于：</p>
<ul>
<li>了解数据概况</li>
<li>对某些变量进行转化或重新编码</li>
<li>确定下一步分析的方向</li>
</ul>
<h1>数据探索</h1>
<h2 id="数据提取">数据提取</h2>
<p>导入数据</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">spe&lt;-<span class="built_in">read</span>.csv(<span class="string">"DoubsSpe.csv"</span>,head=T,<span class="built_in">row</span>.names=<span class="number">1</span>)</span><br><span class="line">spa&lt;-<span class="built_in">read</span>.csv(<span class="string">"DoubsSpa.csv"</span>,head=T,<span class="built_in">row</span>.names=<span class="number">1</span>)</span><br><span class="line">env&lt;-<span class="built_in">read</span>.csv(<span class="string">"DoubsEnv.csv"</span>,head=T,<span class="built_in">row</span>.names=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<h2 id="物种数据：第一次接触">物种数据：第一次接触</h2>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">spe[<span class="number">1</span>:<span class="number">5</span>,<span class="number">1</span>:<span class="number">10</span>]</span><br><span class="line">head(spe)</span><br><span class="line">nrow(spe)</span><br><span class="line">ncol(spe)</span><br><span class="line">dim(spe)</span><br><span class="line">rownames(spe)</span><br><span class="line">colnames(spe)</span><br><span class="line">summary(spe) #以列为单位，对列变量进行描述性统计。比较中位数和平均值，大部分物种多度的分布是对称的嘛？</span><br><span class="line">range(spe) #整个多度数据值的范围</span><br><span class="line">ab&lt;-table(unlist(spe)) #✨计算每种多度值的数目</span><br><span class="line">ab</span><br><span class="line">barplot(ab,las=<span class="number">1</span>,xlab=<span class="string">"Abundance class"</span>,ylab=<span class="string">"Frequency"</span>,col=gray(<span class="number">5</span>:<span class="number">0</span>/<span class="number">5</span>))</span><br><span class="line">#las表示横纵坐标数值的方向，可以<span class="number">0</span>、<span class="number">1</span>、<span class="number">2</span>、<span class="number">3</span>都试一下。col=gray(<span class="number">5</span>:<span class="number">0</span>/<span class="number">5</span>)，<span class="number">5</span>:<span class="number">0</span>产生<span class="number">5</span>、<span class="number">4</span>、<span class="number">3</span>、<span class="number">2</span>、<span class="number">1</span>、<span class="number">0</span>，/<span class="number">100</span>是分别对<span class="number">5</span>、<span class="number">4</span>、、、<span class="number">0</span>这<span class="number">6</span>个数的向量进行除法运算，故<span class="number">5</span>:<span class="number">0</span>/<span class="number">5</span>产生<span class="number">1</span>、<span class="number">0.8</span>、<span class="number">0.6</span>、<span class="number">0.4</span>、<span class="number">0.2</span>和<span class="number">0</span>这<span class="number">6</span>个数的向量，这<span class="number">6</span>个向量带入到gray函数的参数中返回的是由白到黑均匀变化的<span class="number">6</span>种颜色。</span><br><span class="line">sum(spe==<span class="number">0</span>) #多度数据中<span class="number">0</span>值（缺失）的数量</span><br><span class="line">sum(spe==<span class="number">0</span>)/(nrow(spe)*ncol(spe)) #多度数据中<span class="number">0</span>值所占的比例</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-2-exploratorydataanalysis/1.SpeAbundanceBarplot.png" alt="1.SpeAbundanceBarplot"></p>
<h2 id="物种数据：进一步分析">物种数据：进一步分析</h2>
<h3 id="样方位置分布图，借助spa文件（地理坐标x和y）">样方位置分布图，借助spa文件（地理坐标x和y）</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spa,asp=<span class="number">1</span>,type=<span class="string">"n"</span>,main=<span class="string">"Site Locations"</span>,xlab=<span class="string">"x coordinate (km)"</span>,ylab=<span class="string">"y coordinate (km)"</span>)</span></span></span><br><span class="line">#asp=<span class="number">1</span>表示纵横比；type=<span class="string">"n"</span>表示空，<span class="string">"p"</span>表示点，<span class="string">"l"</span>表示线等。</span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(spa,col=<span class="string">"lightblue"</span>)</span></span></span><br><span class="line">#添加图层---线，代表doubs河</span><br><span class="line"><span class="function"><span class="title">text</span><span class="params">(spa,row.names(spa)</span></span>,cex=<span class="number">0.8</span>,col=<span class="string">"red"</span>,pos=<span class="number">4</span>)</span><br><span class="line">#添加每个样方的编号，cex=<span class="number">0.8</span>表示数据点标识的大小，默认为<span class="number">1</span>，pos=<span class="number">4</span>表示编号的位置，<span class="number">4</span>表示在点右边。</span><br><span class="line"><span class="function"><span class="title">text</span><span class="params">(<span class="number">60</span>,<span class="number">10</span>,<span class="string">"Upstream"</span>,cex=<span class="number">0.8</span>,col=<span class="string">"red"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">text</span><span class="params">(<span class="number">0</span>,<span class="number">120</span>,<span class="string">"Downstream"</span>,cex=<span class="number">0.8</span>,col=<span class="string">"red"</span>)</span></span></span><br><span class="line">#添加文本</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-2-exploratorydataanalysis/2.SiteLocations.png" alt="2.SiteLocations"></p>
<h3 id="鱼类的分布图，借助spe文件（多度）">鱼类的分布图，借助spe文件（多度）</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">par</span><span class="params">(mfrow=c(<span class="number">2</span>,<span class="number">2</span>)</span></span>) #将绘图窗口分割为<span class="number">4</span>个绘图区域，每行两个。</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spa,asp=<span class="number">1</span>,col=<span class="string">"brown"</span>,cex=spe<span class="variable">$TRU</span>,main=<span class="string">"Brown trout"</span>,xlab=<span class="string">"x coordinate (km)"</span>,ylab=<span class="string">"y coordinate (km)"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(spa,col=<span class="string">"lightblue"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spa,asp=<span class="number">1</span>,col=<span class="string">"brown"</span>,cex=spe<span class="variable">$OMB</span>,main=<span class="string">"Grayling"</span>,xlab=<span class="string">"x coordinate (km)"</span>,ylab=<span class="string">"y coordinate (km)"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(spa,col=<span class="string">"lightblue"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spa,asp=<span class="number">1</span>,col=<span class="string">"brown"</span>,cex=spe<span class="variable">$BAR</span>,main=<span class="string">"Barbel"</span>,xlab=<span class="string">"x coordinate (km)"</span>,ylab=<span class="string">"y coordinate (km)"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(spa,col=<span class="string">"lightblue"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spa,asp=<span class="number">1</span>,col=<span class="string">"brown"</span>,cex=spe<span class="variable">$BCO</span>,main=<span class="string">"Common bream"</span>,xlab=<span class="string">"x coordinate (km)"</span>,ylab=<span class="string">"y coordinate (km)"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(spa,col=<span class="string">"lightblue"</span>)</span></span></span><br><span class="line">#cex的作用是定义数据点标识的大小，这里用某物种的多度数据来表示大小。</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-2-exploratorydataanalysis/3.AbundanceDistribution.png" alt="3.AbundanceDistribution"></p>
<h3 id="物种相对频度直方图">物种相对频度直方图</h3>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">par(mfrow=c(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">spe.pres&lt;-apply(spe&gt;<span class="number">0</span>,<span class="number">2</span>,sum)</span><br><span class="line">#计算每个物种出现的样方数。apply函数，spe&gt;<span class="number">0</span>表示先将spe内数值转化为逻辑向量<span class="literal">TRUE</span>/FLASE，然后对逻辑值<span class="literal">TRUE</span>进行列(<span class="number">1</span>表示行，<span class="number">2</span>表示列)的计数汇总(sum)。</span><br><span class="line">sort(spe.pres)</span><br><span class="line">#按照升序的方式重新排列结果。sort，默认的是升序。</span><br><span class="line">hist(spe.pres,las=<span class="number">1</span>,col=<span class="string">"bisque"</span>,main=<span class="string">"Species Occurrences"</span>,xlab=<span class="string">"Number of occurrences"</span>,ylab=<span class="string">"Number of species"</span>,breaks=seq(<span class="number">0</span>,<span class="number">30</span>,by=<span class="number">5</span>),right=<span class="literal">FALSE</span>)</span><br><span class="line">#breaks=seq(<span class="number">0</span>,<span class="number">30</span>,by=<span class="number">5</span>)表示设置分组，<span class="number">0</span>到<span class="number">30</span>，间隔为<span class="number">5</span>，设置成<span class="number">0</span><span class="number">-30</span>其实也是因为总共采了<span class="number">30</span>个样方，比较好表示。right=<span class="literal">FALSE</span>表示[)，即左边的数值包括在内右边的不包含在内。</span><br><span class="line">spe.relf&lt;<span class="number">-100</span>*spe.pres/nrow(spe)</span><br><span class="line">#计算频度百分比</span><br><span class="line">round(sort(spe.relf),<span class="number">1</span>)</span><br><span class="line">#设置排列结果为<span class="number">1</span>位小数。round设置数据显示的小数位数。</span><br><span class="line">hist(spe.relf,las=<span class="number">1</span>,col=<span class="string">"bisque"</span>,main=<span class="string">"Species Relative Fequencies"</span>,xlab=<span class="string">"Frequencies of occurrences"</span>,ylab=<span class="string">"Number of species"</span>,breaks=seq(<span class="number">0</span>,<span class="number">100</span>,by=<span class="number">10</span>),right=<span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-2-exploratorydataanalysis/4.speoccurrencesandrelative%20frequencies.png" alt="4.speoccurrencesandrelative frequencies"></p>
<h3 id="样方中物种丰富度分布图">样方中物种丰富度分布图</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">par</span><span class="params">(mfrow=c(<span class="number">1</span>,<span class="number">2</span>)</span></span>)</span><br><span class="line">sit.pres&lt;-apply(spe&gt;<span class="number">0</span>,<span class="number">1</span>,sum)</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(sit.pres,type=<span class="string">"s"</span>,main=<span class="string">"Species Richness vs. \n Upstream-Downstream Gradient"</span>,las=<span class="number">1</span>,xlab=<span class="string">"Positions of sites along the river"</span>,ylab=<span class="string">"Species richness"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">text</span><span class="params">(sit.pres,row.names(spe)</span></span>,cex=<span class="number">0.8</span>,col=<span class="string">"black"</span>,pos=<span class="number">2</span>)</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spa,asp=<span class="number">1</span>,pch=<span class="number">21</span>,col=<span class="string">"black"</span>,bg=<span class="string">"bisque"</span>,cex=<span class="number">4</span>*sit.pres/max(sit.pres)</span></span>,main=<span class="string">"Map of Species Richness"</span>,xlab=<span class="string">"x coordinate (km)"</span>,ylab=<span class="string">"y coordinate (km)"</span>)#pch，圆形，col，圆形边界颜色；bg，圆形填充颜色；cex用物种丰富度表示大小，太大时，可等比例缩小，比如乘以<span class="number">0.1</span>等。</span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(spa,col=<span class="string">"black"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">text</span><span class="params">(spa,row.names(spa)</span></span>,col=<span class="string">"black"</span>,pos=<span class="number">3</span>,cex=<span class="number">0.8</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-2-exploratorydataanalysis/5.sperichnessinsite.png" alt="5.sperichnessinsite"></p>
<h3 id="生物多样性指数">生物多样性指数</h3>
<p>多度是指种群中个体的数目。<br>
丰富度是指群落中物种的数目。</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">library(vegan)</span><br><span class="line">#物种丰富度(richness)</span><br><span class="line">richness&lt;-rowSums(spe&gt;<span class="number">0</span>) #或richness&lt;-apply(spe&gt;<span class="number">0</span>,<span class="number">1</span>,sum)或richness&lt;-estimateR(spe)[<span class="number">1</span>,]</span><br><span class="line">#香农指数（Shannon index）(以下shannon公式的对数底数均设使用 e，在 R 中即表示为 exp(<span class="number">1</span>))</span><br><span class="line">shannon_index&lt;-diversity(spe,index=<span class="string">"shannon"</span>,base=exp(<span class="number">1</span>))#✨shannon指数或shannon熵指数  </span><br><span class="line">shannon_diversity&lt;-exp(<span class="number">1</span>)^(shannon_index)#shannon多样性指数</span><br><span class="line">#辛普森指数(simpson index)</span><br><span class="line">gini_simpson_index&lt;-diversity(spe,<span class="string">"simpson"</span>)#✨Gini-Simpson指数,即我们平常用的simpson指数。与丰富度成正比。</span><br><span class="line">simpson_index&lt;-<span class="number">1</span>-gini_simpson_index#经典simpson指数，使用频率比较低</span><br><span class="line">invsimpson_index&lt;-<span class="number">1</span>/gini_simpson_index#invsimpson指数（Gini-Simpson指数的倒数）#或invsimpson_index&lt;-diversity(spe,<span class="string">"invsimpson"</span>)</span><br><span class="line">simpson_diversity&lt;-<span class="number">1</span>/(<span class="number">1</span>-gini_simpson_index)#simpson多样性</span><br><span class="line">#均匀度（Evenness）</span><br><span class="line">pielou&lt;-shannon_index/log(richness,exp(<span class="number">1</span>))#✨Shannon均匀度，即pielou均匀度（Hill比率）</span><br><span class="line">equitability&lt;-<span class="number">1</span>/(richness*(<span class="number">1</span>-gini_simpson_index))#simpson均匀度，即equitability均匀度（Hill比率）</span><br><span class="line">#Chao1 &amp; ACE</span><br><span class="line">chao1&lt;-estimateR(spe)[<span class="number">2</span>,] #?estimateR</span><br><span class="line">ace&lt;-estimateR(spe)[<span class="number">4</span>,]</span><br><span class="line">#goods_coverage指数</span><br><span class="line">goods_coverage&lt;-<span class="number">1</span>-rowSums(spe==<span class="number">1</span>)/rowSums(spe)</span><br><span class="line">#谱系多样性（与上述相比，还需指定进化树文件；除了物种丰度外，还考虑了进化距离。）</span><br><span class="line">library(picante)</span><br><span class="line">tree&lt;-read.tree(<span class="string">'otu_tree.tre'</span>)#otu_tree.tre，无根树文件</span><br><span class="line">pd_whole_tree&lt;-pd(otu,tree,include.root=FALSE)#测试时发现有根树和无根树的 PD_whole_tree 计算结果是一样的，但是无根树的计算会更快</span><br><span class="line">#整合数据</span><br><span class="line">div&lt;-data.frame(richness,shannon_index,shannon_diversity,pielou,gini_simpson_index,simpson_index,invsimpson_index,simpson_diversity,equitability,chao1,ace,goods_coverage,#pd_whole_tree)</span><br><span class="line">#保存</span><br><span class="line">write.csv(div, <span class="string">'alphadiversity.csv'</span>, quote = FALSE)</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="http://blog.sciencenet.cn/blog-3406804-1179809.html" target="_blank" rel="noopener">群落多样性分子中常见Alpha多样性指数简介</a><br>
<a href="http://blog.sciencenet.cn/blog-3406804-1179983.html" target="_blank" rel="noopener">R语言计算Alpha多样性指数</a></p>
</blockquote>
<h2 id="物种数据转化">物种数据转化</h2>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">##简单转化  </span><br><span class="line">sqrt()#平方根</span><br><span class="line">sqrt(sqrt())#四次方根</span><br><span class="line">log1p()#多度+<span class="number">1</span>的自然对数，保证<span class="number">0</span>值转化后仍然为<span class="number">0</span>。</span><br><span class="line"></span><br><span class="line">#物种水平：两种方法；有-无数据或多度数据</span><br><span class="line">spe.scal&lt;-decostand(spe,<span class="string">"max"</span>)#通过每个数值除以该物种最大值标准化多度，默认MARGIN为<span class="number">2</span>，即列。</span><br><span class="line">spe.relsp&lt;-decostand(spe,<span class="string">"total"</span>,<span class="number">2</span>)#通过每个数值除以该物种总和去标准化多度（每个物种的相对多度）</span><br><span class="line"></span><br><span class="line">#样方水平：三种方法；有-无数据或多度数据</span><br><span class="line">spe.rel&lt;-decostand(spe,<span class="string">"total"</span>,<span class="number">1</span>)#通过每个数值除以该样方总和标准化多度（每个样方的相对多度）</span><br><span class="line">spe.nrom&lt;-decostand(spe,<span class="string">"normalize"</span>)#“弦转化”，即赋予每个行向量长度（范数）为<span class="number">1</span>，即平方和为<span class="number">1.</span></span><br><span class="line">spe.hel&lt;-decostand(spe,<span class="string">"hellinger"</span>)#<span class="string">"Hellinger"</span>转化，即计算相对频度（样方层面），然后取平方根。<span class="string">"Hellinger"</span>转化等同于数据先平方根转化再进行弦转化。</span><br><span class="line"></span><br><span class="line">#物种和样方同时标准化</span><br><span class="line">spe.chi&lt;-decostand(spe,<span class="string">"chi.square"</span>)#卡方转化</span><br><span class="line">spe.wis&lt;-wisconsin(spe)#Wisconsin标准化,即多度数据首先除以该物种最大值后再除以该样方总和。</span><br></pre></td></tr></table></figure>
<h3 id="标准化后的数据比较和作图">标准化后的数据比较和作图</h3>
<h4 id="鱼LOC的多度数据转化前后箱线图">鱼LOC的多度数据转化前后箱线图</h4>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">par</span><span class="params">(mfrow=c(<span class="number">2</span>,<span class="number">2</span>)</span></span>)</span><br><span class="line"><span class="function"><span class="title">boxplot</span><span class="params">(spe<span class="variable">$LOC</span>,sqrt(spe<span class="variable">$LOC</span>)</span></span>,log1p(spe<span class="variable">$LOC</span>),las=<span class="number">1</span>,main=<span class="string">"Simple transformation"</span>,names=c(<span class="string">"raw data"</span>,<span class="string">"sqrt"</span>,<span class="string">"log"</span>),col=<span class="string">"bisque"</span>)</span><br><span class="line"><span class="function"><span class="title">boxplot</span><span class="params">(spe.scal<span class="variable">$LOC</span>,spe.relsp<span class="variable">$LOC</span>,las=<span class="number">1</span>,main=<span class="string">"Standardization by species"</span>,names=c(<span class="string">"max"</span>,<span class="string">"total"</span>)</span></span>,col=<span class="string">"lightgreen"</span>)</span><br><span class="line"><span class="function"><span class="title">boxplot</span><span class="params">(spe.hel<span class="variable">$LOC</span>,spe.rel<span class="variable">$LOC</span>,spe.nrom<span class="variable">$LOC</span>,las=<span class="number">1</span>,main=<span class="string">"Standardization by sites"</span>,names=c(<span class="string">"Hellinger"</span>,<span class="string">"total"</span>,<span class="string">"nrom"</span>)</span></span>,col=<span class="string">"lightblue"</span>)</span><br><span class="line"><span class="function"><span class="title">boxplot</span><span class="params">(spe.chi<span class="variable">$LOC</span>,spe.wis<span class="variable">$LOC</span>,las=<span class="number">1</span>,main=<span class="string">"Double standardization"</span>,names=c(<span class="string">"Chi-square"</span>,<span class="string">"Wisconsin"</span>)</span></span>,col=<span class="string">"orange"</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-2-exploratorydataanalysis/6.datatransformation.png" alt="6"></p>
<h4 id="物种-多度原始数据及其标准化数据-从河流上游到下游（das）的分布图">物种(多度原始数据及其标准化数据)从河流上游到下游（das）的分布图</h4>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">par</span><span class="params">(mfrow=c(<span class="number">2</span>,<span class="number">2</span>)</span></span>)</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(env<span class="variable">$das</span>,spe<span class="variable">$TRU</span>,type=<span class="string">"l"</span>,col=<span class="number">4</span>,main=<span class="string">"Raw Data"</span>,xlab=<span class="string">"Distance from the source (km)"</span>,ylab=<span class="string">"Raw abundance code"</span>)</span></span></span><br><span class="line">#原始数据</span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe<span class="variable">$OMB</span>,col=<span class="number">3</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe<span class="variable">$BAR</span>,col=<span class="string">"orange"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe<span class="variable">$BCO</span>,col=<span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe<span class="variable">$LOC</span>,col=<span class="number">1</span>,lty=<span class="string">"dotted"</span>)</span></span></span><br><span class="line">#物种水平“max”转化</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(env<span class="variable">$das</span>,spe.scal<span class="variable">$TRU</span>,type=<span class="string">"l"</span>,col=<span class="number">4</span>,main=<span class="string">"Species profiles (max)"</span>,xlab=<span class="string">"Distance from the source (km)"</span>,ylab=<span class="string">"Standardized abundance"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe.scal<span class="variable">$OMB</span>,col=<span class="number">3</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe.scal<span class="variable">$BAR</span>,col=<span class="string">"orange"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe.scal<span class="variable">$BCO</span>,col=<span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe.scal<span class="variable">$LOC</span>,col=<span class="number">1</span>,lty=<span class="string">"dotted"</span>)</span></span></span><br><span class="line">#样方水平“Hellinger”转化</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(env<span class="variable">$das</span>,spe.hel<span class="variable">$TRU</span>,type=<span class="string">"l"</span>,col=<span class="number">4</span>,main=<span class="string">"Species profiles (Hellinger)"</span>,xlab=<span class="string">"Distance from the source (km)"</span>,ylab=<span class="string">"Standardized abundance"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe.hel<span class="variable">$OMB</span>,col=<span class="number">3</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe.hel<span class="variable">$BAR</span>,col=<span class="string">"orange"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe.hel<span class="variable">$BCO</span>,col=<span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe.hel<span class="variable">$LOC</span>,col=<span class="number">1</span>,lty=<span class="string">"dotted"</span>)</span></span></span><br><span class="line">#物种和样方同时转化“Chi-square”</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(env<span class="variable">$das</span>,spe.chi<span class="variable">$TRU</span>,type=<span class="string">"l"</span>,col=<span class="number">4</span>,main=<span class="string">"Species profiles (Chi-square)"</span>,xlab=<span class="string">"Distance from the source (km)"</span>,ylab=<span class="string">"Standardized abundance"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe.chi<span class="variable">$OMB</span>,col=<span class="number">3</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe.chi<span class="variable">$BAR</span>,col=<span class="string">"orange"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe.chi<span class="variable">$BCO</span>,col=<span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(env<span class="variable">$das</span>,spe.chi<span class="variable">$LOC</span>,col=<span class="number">1</span>,lty=<span class="string">"dotted"</span>)</span></span></span><br><span class="line">#添加图例</span><br><span class="line"><span class="function"><span class="title">legend</span><span class="params">(<span class="string">"topright"</span>,c(<span class="string">"Brown trout"</span>,<span class="string">"Grayling"</span>,<span class="string">"Barbel"</span>,<span class="string">"Common bream"</span>,<span class="string">"Stone loach"</span>)</span></span>,col=c(<span class="number">4</span>,<span class="number">3</span>,<span class="string">"orange"</span>,<span class="number">2</span>,<span class="number">1</span>),lty=c(rep(<span class="number">1</span>,<span class="number">4</span>),<span class="number">3</span>),cex=<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-2-exploratorydataanalysis/7.abundancestandarizationplot.png" alt="7"></p>
<h2 id="环境数据">环境数据</h2>
<h3 id="环境数据（海拔、流量、氧含量和硝酸盐浓度）的气泡地图">环境数据（海拔、流量、氧含量和硝酸盐浓度）的气泡地图</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">par</span><span class="params">(mfrow=c(<span class="number">2</span>,<span class="number">2</span>)</span></span>)</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spa,asp=<span class="number">1</span>,main=<span class="string">"Altitude"</span>,pch=<span class="number">21</span>,col=<span class="string">"white"</span>,bg=<span class="string">"red"</span>,cex=<span class="number">5</span>*env<span class="variable">$alt</span>/max(env<span class="variable">$alt</span>)</span></span>,xlab=<span class="string">"x"</span>,ylab=<span class="string">"y"</span>)</span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(spa,col=<span class="string">"black"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spa,asp=<span class="number">1</span>,main=<span class="string">"Discharge"</span>,pch=<span class="number">21</span>,col=<span class="string">"white"</span>,bg=<span class="string">"blue"</span>,cex=<span class="number">5</span>*env<span class="variable">$deb</span>/max(env<span class="variable">$deb</span>)</span></span>,xlab=<span class="string">"x"</span>,ylab=<span class="string">"y"</span>)</span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(spa,col=<span class="string">"black"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spa,asp=<span class="number">1</span>,main=<span class="string">"Oxygen"</span>,pch=<span class="number">21</span>,col=<span class="string">"white"</span>,bg=<span class="string">"green3"</span>,cex=<span class="number">5</span>*env<span class="variable">$oxy</span>/max(env<span class="variable">$oxy</span>)</span></span>,xlab=<span class="string">"x"</span>,ylab=<span class="string">"y"</span>)</span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(spa,col=<span class="string">"black"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spa,asp=<span class="number">1</span>,main=<span class="string">"Nitrate"</span>,pch=<span class="number">21</span>,col=<span class="string">"white"</span>,bg=<span class="string">"brown"</span>,cex=<span class="number">5</span>*env<span class="variable">$nit</span>/max(env<span class="variable">$nit</span>)</span></span>,xlab=<span class="string">"x"</span>,ylab=<span class="string">"y"</span>)</span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(spa,col=<span class="string">"black"</span>)</span></span></span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-2-exploratorydataanalysis/8.envbubblechart.png" alt="8"></p>
<h3 id="环境数据（海拔、流量、氧含量和硝酸盐浓度）沿河流的分布">环境数据（海拔、流量、氧含量和硝酸盐浓度）沿河流的分布</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">par</span><span class="params">(mfrow=c(<span class="number">2</span>,<span class="number">2</span>)</span></span>)</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(env<span class="variable">$das</span>,env<span class="variable">$alt</span>,type=<span class="string">"l"</span>,main=<span class="string">"Altitude"</span>,xlab=<span class="string">"Distance from the source (km)"</span>,ylab=<span class="string">"Altitude (m)"</span>,col=<span class="string">"red"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(env<span class="variable">$das</span>,env<span class="variable">$deb</span>,type=<span class="string">"l"</span>,main=<span class="string">"Discharge"</span>,xlab=<span class="string">"Distance from the source (km)"</span>,ylab=<span class="string">"Discharge (m3/s)"</span>,col=<span class="string">"blue"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(env<span class="variable">$das</span>,env<span class="variable">$oxy</span>,type=<span class="string">"l"</span>,main=<span class="string">"Oxygen"</span>,xlab=<span class="string">"Distance from the source (km)"</span>,ylab=<span class="string">"Oxygen (mg/L)"</span>,col=<span class="string">"green3"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(env<span class="variable">$das</span>,env<span class="variable">$nit</span>,type=<span class="string">"l"</span>,main=<span class="string">"Nitrate"</span>,xlab=<span class="string">"Distance from the source (km)"</span>,ylab=<span class="string">"Nitrate (mg/L)"</span>,col=<span class="string">"brown"</span>)</span></span></span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-2-exploratorydataanalysis/9.envdistribution.das.png" alt="9"></p>
<h3 id="带频度分布的柱状图和光滑拟合曲线的双变量散点图">带频度分布的柱状图和光滑拟合曲线的双变量散点图</h3>
<p>了解任意两个变量之间的关系以及哪些变量符合正态分布,注意pairs()的使用</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line"><span class="keyword">source</span>(<span class="string">"panelutils.R"</span>) #自编的函数R脚本,带LOWESS平滑线的任意两个环境变量之间的散点图</span><br><span class="line">pairs(<span class="keyword">env</span>,<span class="keyword">panel</span>=<span class="keyword">panel</span>.smooth,diag.<span class="keyword">panel</span>=<span class="keyword">panel</span>.hist,main=<span class="string">"Bivariate Plots with Histograms and Smooth Curves"</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-2-exploratorydataanalysis/10.envbivariateplots.png" alt="10"></p>
<p>简单的转化（例如对数转化）可以改善某些变量的数据分布（转化后更接近正态分布）。<br>
另外，由于变量之间的量纲不同，很多统计分析需要将其进行标准化（标准化后均值等于0，方差等于1），这种中心化和标准化后的变量值也被称为z-scores。<br>
中心化和标准化:</p>
<ul>
<li>意义：数据中心化和标准化在回归分析中是取消由于量纲不同、自身变异或者数值相差较大所引起的误差。</li>
<li>原理：数据标准化：是指数值减去均值，再除以标准差； 数据中心化：是指变量减去它的均值。</li>
<li>目的：通过中心化和标准化处理，得到均值为0，标准差为1的服从标准正态分布的数据。</li>
</ul>
<p>下面用案例数据展示转化和标准化后的数据分布:</p>
<h3 id="pen对数转化前后频度分布柱状图和箱线图">pen对数转化前后频度分布柱状图和箱线图</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">par</span><span class="params">(mfrow=c(<span class="number">2</span>,<span class="number">2</span>)</span></span>)</span><br><span class="line"><span class="function"><span class="title">hist</span><span class="params">(env<span class="variable">$pen</span>,col=<span class="string">"bisque"</span>,right=<span class="string">"F"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">hist</span><span class="params">(log(env<span class="variable">$pen</span>,exp(<span class="number">1</span>)</span></span>),col=<span class="string">"light blue"</span>,<span class="attribute">right</span>=<span class="string">"F"</span>,main=<span class="string">"Histogram of ln(env$pen)"</span>,xlab=<span class="string">"ln(env$pen)"</span>)</span><br><span class="line"><span class="function"><span class="title">boxplot</span><span class="params">(env<span class="variable">$pen</span>,col=<span class="string">"bisque"</span>,main=<span class="string">"Boxplot of env$pen"</span>,ylab=<span class="string">"env$pen"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">boxplot</span><span class="params">(log(env<span class="variable">$pen</span>,exp(<span class="number">1</span>)</span></span>),col=<span class="string">"light blue"</span>,main=<span class="string">"Boxplot of ln(env$pen)"</span>,ylab=<span class="string">"ln(env$pen)"</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-2-exploratorydataanalysis/11.rawandlogtransformation.png" alt="11"></p>
<h3 id="环境因子标准化和正态性检验">环境因子标准化和正态性检验</h3>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line"><span class="keyword">env</span>.z&lt;-decostand(<span class="keyword">env</span>,<span class="string">"standardize"</span>)</span><br><span class="line">apply(<span class="keyword">env</span>.z,<span class="number">2</span>,mean)#若小数位不明显，可以用round()函数。均值为<span class="number">0</span></span><br><span class="line">apply(<span class="keyword">env</span>.z,<span class="number">2</span>,sd)#标准差为<span class="number">1</span></span><br><span class="line">#使用<span class="keyword">scale</span>()函数也可以运行相同的标准化(输出的是矩阵)：<span class="keyword">env</span>.z1&lt;-as.data.frame(<span class="keyword">scale</span>(<span class="keyword">env</span>)) 等同于<span class="keyword">env</span>.z。</span><br></pre></td></tr></table></figure>
<p>检验正态分布<br>
通过R里的shapiro.test()函数，用<a href="https://www.jianshu.com/p/e202069489a6" target="_blank" rel="noopener">Shapiro-Wilk检验</a>可以检验向量的正态性。</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">shapiro.test(<span class="keyword">env</span>.z$oxy)</span><br><span class="line">shapiro.test(<span class="keyword">log</span>(<span class="keyword">env</span>)$oxy)</span><br><span class="line">#✨p&gt;<span class="number">0.05</span>则符合正态分布</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>R</category>
      </categories>
      <tags>
        <tag>Rbasics</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记_R语言实战_1.R语言介绍</title>
    <url>/2020/03/10/Ryuyanshizhan1-Ryuyanjieshao/</url>
    <content><![CDATA[<p><strong>摘要</strong>：知识点记录。| 工作空间；输入和输出；包的更新；批处理；将输出用为输入；示例实践。</p>
<a id="more"></a>
<h3 id="1-3-3工作空间">1.3.3工作空间</h3>
<ul>
<li>示例：</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">getwd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">setwd</span><span class="params">(<span class="string">"C:/users/yunmeng.li/Desktop"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">options</span><span class="params">(digits=<span class="number">3</span>)</span></span></span><br><span class="line">a&lt;-<span class="number">0.11111</span></span><br><span class="line">a</span><br><span class="line">b&lt;-<span class="number">4857498356</span></span><br><span class="line">b</span><br><span class="line">x&lt;-rnorm(<span class="number">100</span>) #正态分布</span><br><span class="line">y&lt;-runif(<span class="number">100</span>) #均匀分布</span><br><span class="line"><span class="function"><span class="title">hist</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function"><span class="title">hist</span><span class="params">(y)</span></span></span><br><span class="line">save.image(<span class="string">"wd.RData"</span>) #保存工作空间</span><br><span class="line"><span class="function"><span class="title">load</span><span class="params">(<span class="string">"wd.RData"</span>)</span></span> #加载工作空间</span><br><span class="line">a</span><br><span class="line">dir.create(<span class="string">"filefoldername"</span>) #创建工作目录</span><br></pre></td></tr></table></figure>
<h3 id="1-3-4输入和输出">1.3.4输入和输出</h3>
<ul>
<li>示例：</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">source</span><span class="params">(<span class="string">"myscript.R"</span>)</span></span></span><br><span class="line"></span><br><span class="line">a&lt;-<span class="number">1</span>:<span class="number">10</span></span><br><span class="line"><span class="function"><span class="title">summary</span><span class="params">(a)</span></span></span><br><span class="line"><span class="function"><span class="title">sink</span><span class="params">(<span class="string">"datout.txt"</span>)</span></span> #将结果输出到datout.txt中</span><br><span class="line"><span class="function"><span class="title">summary</span><span class="params">(a)</span></span></span><br><span class="line"></span><br><span class="line">a&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">b&lt;-c(<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span>)</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(a,b)</span></span></span><br><span class="line"><span class="function"><span class="title">png</span><span class="params">(<span class="string">"ab.png"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(a,b)</span></span></span><br><span class="line"><span class="function"><span class="title">jpeg</span><span class="params">(<span class="string">"ab.jpeg"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(a,b)</span></span></span><br><span class="line"><span class="function"><span class="title">pdf</span><span class="params">(<span class="string">"ab.pdf"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(a,b)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="1-4-2包的安装">1.4.2包的安装</h3>
<ul>
<li>更新包</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">update</span><span class="selector-class">.packages</span>()</span><br></pre></td></tr></table></figure>
<h3 id="1-5批处理">1.5批处理</h3>
<ul>
<li>windows  <code>cmd</code></li>
</ul>
<figure class="highlight tp"><table><tr><td class="code"><pre><span class="line"><span class="string">"C:/Program Files/R/R-3.6.2/bin/Rscript.exe"</span> plot<span class="number">1</span>.<span class="keyword">R</span></span><br></pre></td></tr></table></figure>
<ul>
<li>相关资料见：<a href="https://book.2cto.com/201305/21969.html" target="_blank" rel="noopener">批量运行R代码</a></li>
</ul>
<h3 id="1-6将输出用为输入">1.6将输出用为输入</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">lm</span><span class="params">(mpg~wt,data=mtcars)</span></span></span><br><span class="line">lmfit&lt;-lm(mpg~wt,data=mtcars)</span><br><span class="line"><span class="function"><span class="title">summary</span><span class="params">(lmfit)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(lmfit)</span></span></span><br><span class="line">cook&lt;-cooks.distance(lmfit) #计算影响度量统计量？？？</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(cook)</span></span></span><br><span class="line"><span class="function"><span class="title">predict</span><span class="params">(lmfit,mynewdata)</span></span> #进行预测？？？</span><br></pre></td></tr></table></figure>
<h3 id="1-8示例实践">1.8示例实践</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">help.strat() #打开帮助文档首页</span><br><span class="line">install.packages(<span class="string">"vcd"</span>) #安装vcd包</span><br><span class="line"><span class="function"><span class="title">help</span><span class="params">(packages=<span class="string">"vcd"</span>)</span></span> #查看vcd包中的函数和数据集</span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(vcd)</span></span> #加载vcd包</span><br><span class="line"><span class="function"><span class="title">help</span><span class="params">(Arthritis)</span></span> #查看Arthritis数据集</span><br><span class="line">Arthritis #显示Arthritis数据集</span><br><span class="line"><span class="function"><span class="title">example</span><span class="params">(Arthritis)</span></span> #运行Arthritis自带的示例</span><br><span class="line"><span class="function"><span class="title">q</span><span class="params">()</span></span> #退出</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>R</category>
      </categories>
      <tags>
        <tag>Rbasics</tag>
      </tags>
  </entry>
  <entry>
    <title>2021读书清单</title>
    <url>/2021/01/01/ReadingList2021/</url>
    <content><![CDATA[<p><strong>摘要</strong>：可看 -</p>
<a id="more"></a>
<p><em><strong>NOTE</strong></em><br>
★★★及以上，都值得再读一遍。</p>
<h3 id="2021-随笔1-人物传记-小说-散文集">2021 | 随笔1/人物传记?/小说?/散文集?</h3>
<table>
<thead>
<tr>
<th style="text-align:left">序号</th>
<th style="text-align:left">评分</th>
<th style="text-align:left">书名</th>
<th style="text-align:left">作者</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">出版时间</th>
<th style="text-align:left">摘录及书评</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">★★☆☆☆</td>
<td style="text-align:left">目光</td>
<td style="text-align:left">陶勇、李润</td>
<td style="text-align:left">随笔</td>
<td style="text-align:left">2020.10</td>
<td style="text-align:left">陶医生成长感悟</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">?</td>
<td style="text-align:left">明天我要去冰岛</td>
<td style="text-align:left">嘉倩</td>
<td style="text-align:left">随笔</td>
<td style="text-align:left">2017.1</td>
<td style="text-align:left">在看</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>Lists</category>
        <category>Reading List</category>
      </categories>
      <tags>
        <tag>Books</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记_R语言实战_2.创建数据集</title>
    <url>/2020/03/11/Ryuyanshizhan2-chuangjianshujuji/</url>
    <content><![CDATA[<p><strong>摘要</strong>：知识点记录。| 数据结构：向量，矩阵，数组，数据框，因子和列表；数据输入；处理数据对象的函数<code>rbind()</code>和<code>cbind()</code>。</p>
<a id="more"></a>
<h3 id="2-2数据结构">2.2数据结构</h3>
<h4 id="向量：一维数组，相同模式的元素">向量：一维数组，相同模式的元素</h4>
<h4 id="矩阵：二维数组，相同模式的元素">矩阵：二维数组，相同模式的元素</h4>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">y&lt;-matrix(<span class="number">1</span>:<span class="number">20</span>,nrow=4,ncol=5)</span><br><span class="line">y</span><br><span class="line">y&lt;-matrix(<span class="number">1</span>:<span class="number">20</span>,nrow=4,ncol=5,byrow=T)</span><br><span class="line">y</span><br><span class="line">rnames&lt;-c('A','B','C','D')</span><br><span class="line">cnames&lt;-c('treat1','treat2','treat3','treat4','treat5')</span><br><span class="line">y&lt;-matrix(<span class="number">1</span>:<span class="number">20</span>,nrow=4,ncol=5,byrow=T,dimnames=list(<span class="name">rnames</span>,cnames))</span><br><span class="line">y</span><br></pre></td></tr></table></figure>
<h4 id="数组：大于二维，相同模式的元素">数组：大于二维，相同模式的元素</h4>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">dim1&lt;-c('A1','A2','A3')</span><br><span class="line">dim2&lt;-c('B1','B2')</span><br><span class="line">dim3&lt;-c('C1','C2','C3','C4')</span><br><span class="line">x&lt;-array(<span class="number">1</span>:<span class="number">24</span>,c(<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>),dimnames =list(<span class="name">dim1</span>,dim2,dim3))</span><br><span class="line">x</span><br></pre></td></tr></table></figure>
<h4 id="数据框：多种模式的元素">数据框：多种模式的元素</h4>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">age&lt;-c(<span class="string">'23'</span>,<span class="string">'24'</span>,<span class="string">'12'</span>,<span class="string">'34'</span>)</span><br><span class="line">gender&lt;-c(<span class="string">'F'</span>,<span class="string">'M'</span>,<span class="string">'M'</span>,<span class="string">'F'</span>)</span><br><span class="line">weight&lt;-c(<span class="string">"55"</span>,<span class="string">'45'</span>,<span class="string">'67'</span>,<span class="string">'58'</span>)</span><br><span class="line">y&lt;-data.frame(age,gender,weight)</span><br><span class="line">y</span><br><span class="line"></span><br><span class="line">#一个单独的数据框 | attach(); detach()</span><br><span class="line">attach(mtcars) #将数据框y加入到R的搜索路径中</span><br><span class="line">mpg</span><br><span class="line">detach(mtcars) #将数据框y从R的搜索路径中移除</span><br><span class="line">mpg</span><br><span class="line">#多个可能会有重名的数据框 | <span class="keyword">with</span>(dataframe,&#123;&#125;)</span><br><span class="line">mpg&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">mpg</span><br><span class="line">attach(mtcars)</span><br><span class="line">mpg</span><br><span class="line"><span class="keyword">with</span>(mtcars,mpg)</span><br><span class="line">mpg</span><br><span class="line"><span class="keyword">with</span>(mtcars,&#123;</span><br><span class="line">     m &lt;- mean(mpg)</span><br><span class="line">     n &lt;&lt;- mean(mpg)</span><br><span class="line">     &#125;)</span><br><span class="line">m</span><br><span class="line">n</span><br></pre></td></tr></table></figure>
<h4 id="因子：名义型变量和有序型变量">因子：名义型变量和有序型变量</h4>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">grade&lt;-c(<span class="string">"high"</span>,'medium','low')</span><br><span class="line">grade</span><br><span class="line">class(<span class="name">grade</span>)</span><br><span class="line">grade1&lt;-factor(<span class="name">grade</span>)</span><br><span class="line">grade1</span><br><span class="line">class(<span class="name">grade1</span>)</span><br><span class="line">grade1&lt;-factor(<span class="name">grade</span>,order=T)</span><br><span class="line">grade1</span><br><span class="line">grade1&lt;-factor(<span class="name">grade</span>,order=T,levels=c('low','medium','high'))</span><br><span class="line">grade1</span><br><span class="line">grade2&lt;-factor(<span class="name">grade</span>,order=T,levels=c('low','medium','high'),labels=c(<span class="string">"not very good"</span>,'good','very good'))</span><br><span class="line">grade2</span><br></pre></td></tr></table></figure>
<h4 id="列表">列表</h4>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">a&lt;-matrix(<span class="number">1</span>:<span class="number">20</span>,byrow=T)</span><br><span class="line">b&lt;-c(<span class="string">'high'</span>,<span class="string">'medium'</span>,<span class="string">'low'</span>)</span><br><span class="line">c&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">d&lt;-<span class="string">"this is a test"</span></span><br><span class="line">x&lt;-list(title=d,number=c,level=b,grade=a)</span><br><span class="line">x</span><br><span class="line">x[[<span class="number">4</span>]]</span><br><span class="line">x$grade[<span class="number">20</span>,<span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<h3 id="2-3数据的输入">2.3数据的输入</h3>
<ul>
<li>从带分隔符的文本文件导入数据<br>
<code>mydata&lt;-read.table(filename,head=T/F,sep=&quot;,/\t&quot;,row.names=1,stringsAsFactors=F/T) #字符型变量是否转化为因子</code></li>
<li>数据格式转换软件：<a href="https://stattransfer.com/" target="_blank" rel="noopener">Stat/Tranfer</a></li>
</ul>
<h3 id="2-5处理数据对象的实用函数">2.5处理数据对象的实用函数</h3>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">a&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">b&lt;-c(<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>)</span><br><span class="line">c1&lt;-rbind(a,b) #按行合并对象</span><br><span class="line">c2&lt;-cbind(a,b) #按列合并对象</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>R</category>
      </categories>
      <tags>
        <tag>Rbasics</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记_R语言实战_3.图形初阶</title>
    <url>/2020/03/12/Ryuyanshizhan3-tuxingchuji/</url>
    <content><![CDATA[<p><strong>摘要</strong>：知识点记录。| 图形参数：符号和线条；颜色；文本属性；图形尺寸和边界尺寸。添加文本、自定义坐标轴和图例。图形的组合。</p>
<a id="more"></a>
<h3 id="3-1使用图形">3.1使用图形</h3>
<ul>
<li><code>dev.new()</code>;<code>dev.off()</code></li>
</ul>
<h3 id="3-3图形参数">3.3图形参数</h3>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">dose&lt;-c(<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">45</span>,<span class="number">60</span>)</span><br><span class="line">DrugA&lt;-c(<span class="number">16</span>,<span class="number">20</span>,<span class="number">27</span>,<span class="number">40</span>,<span class="number">60</span>)</span><br><span class="line">DrugB&lt;-c(<span class="number">15</span>,<span class="number">18</span>,<span class="number">25</span>,<span class="number">31</span>,<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line">par(lty=<span class="number">2</span>,pch=<span class="number">17</span>) #指定全部图形</span><br><span class="line">plot(dose,DrugA,type=<span class="string">"b"</span>)</span><br><span class="line"></span><br><span class="line">plot(dose,DrugA,type=<span class="string">"b"</span>,lty=<span class="number">2</span>,pch=<span class="number">17</span>) #指定本图形</span><br></pre></td></tr></table></figure>
<h4 id="3-3-1符号和线条">3.3.1符号和线条</h4>
<ul>
<li><code>pch</code>：点的类型，0-25。</li>
<li><code>cex</code>：点的大小。</li>
<li><code>lty</code>：线条的类型，1-6。</li>
<li><code>lwd</code>：线条的宽度。</li>
<li><code>col</code>;<code>bg</code>：点和线的边界色；点的填充色，仅对于点21-25。</li>
</ul>
<h4 id="3-3-2颜色colors">3.3.2颜色<code>colors()</code></h4>
<ul>
<li><code>col</code>;<code>bg</code></li>
<li><code>fg</code> #图形边框的颜色</li>
<li><code>col.axis</code>;<code>col.lab</code> #坐标轴刻度颜色；坐标轴标签颜色</li>
<li><code>col.main</code> #标题颜色</li>
</ul>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">mycolor1&lt;-rainbow(<span class="number">10</span>)</span><br><span class="line">mycolor2&lt;-grey(<span class="number">0</span>:<span class="number">10</span>/<span class="number">10</span>) #由深到浅，发过来即由浅到深。</span><br></pre></td></tr></table></figure>
<h4 id="3-3-3-文本属性">3.3.3.文本属性</h4>
<ul>
<li>文本大小：<code>cex</code>;<code>cex.axis</code>;<code>cex.lab</code>;<code>cex.main</code></li>
<li>文本字样：<code>font</code>;<code>font.axis</code>;<code>font.lab</code>;<code>font.main</code>;<code>family=c('serif','sans','mono')</code></li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">names</span><span class="params">(pdfFonts()</span></span>) #查看pdf文件中有哪些字体可用</span><br><span class="line"><span class="function"><span class="title">pdf</span><span class="params">(<span class="string">'test.pdf'</span>,family=<span class="string">'Palatino'</span>)</span></span> #指定字体</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(mpg~wt,data=mtcars)</span></span></span><br><span class="line">dev.off()</span><br></pre></td></tr></table></figure>
<h4 id="3-3-4图形尺寸与边界尺寸">3.3.4图形尺寸与边界尺寸</h4>
<ul>
<li>图形尺寸：<code>pin=c(width, height)</code></li>
<li>图形边界：<code>mar=c(down,left,up,right)</code></li>
</ul>
<h3 id="3-4添加文本、自定义坐标轴和图例">3.4添加文本、自定义坐标轴和图例</h3>
<ul>
<li><code>main</code>;<code>sub</code>;<code>xlab</code>;<code>ylab</code>;<code>xlim</code>;<code>ylim</code></li>
</ul>
<h4 id="3-4-1标题">3.4.1标题</h4>
<ul>
<li><code>title</code></li>
</ul>
<h4 id="3-4-2坐标轴">3.4.2坐标轴</h4>
<ul>
<li>注意<code>lines</code>,<code>axis</code>,<code>mtext</code>。</li>
</ul>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">x&lt;-c<span class="params">(1:10)</span></span><br><span class="line">y&lt;-x</span><br><span class="line">z&lt;-10/x</span><br><span class="line">par<span class="params">(<span class="attr">mai</span>=c(1,1,1,2)</span>)</span><br><span class="line">plot<span class="params">(x,y,<span class="attr">type</span>="b",<span class="attr">ann</span>=F)</span> <span class="comment">#ann=F，移除函数自带的标题和标签等</span></span><br><span class="line">lines<span class="params">(x,z,<span class="attr">type</span>="b",<span class="attr">col</span>="red")</span></span><br><span class="line">axis<span class="params">(1,<span class="attr">at</span>=x,<span class="attr">labels</span>=x)</span></span><br><span class="line">axis<span class="params">(2,<span class="attr">at</span>=x,<span class="attr">labels</span>=x)</span></span><br><span class="line">axis<span class="params">(4,<span class="attr">at</span>=z,<span class="attr">labels</span>=z,<span class="attr">col</span>="red",col.<span class="attr">axis</span>="red")</span></span><br><span class="line">mtext<span class="params">("<span class="attr">y</span>=10/x",4,<span class="attr">col</span>="red",<span class="attr">las</span>=2,<span class="attr">line</span>=3)</span> <span class="comment">#mtext，在图形边界外添加文本；line调节文本距离图形的距离。</span></span><br><span class="line">title<span class="params">(<span class="attr">main</span>='An example of creative axes',<span class="attr">xlab</span>="x values",<span class="attr">ylab</span>='<span class="attr">y</span>=x')</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#添加次要刻度线</span></span><br><span class="line">library<span class="params">(Hmisc)</span></span><br><span class="line">minor.tick<span class="params">(<span class="attr">nx</span>=?,<span class="attr">ny</span>=?,tick.<span class="attr">ratio</span>=0.5)</span> <span class="comment">#?表示刻度之间的区间数目，tick.ratio用以调节次要刻度线的长度。</span></span><br></pre></td></tr></table></figure>
<h4 id="3-4-3参考线">3.4.3参考线</h4>
<ul>
<li><code>abline</code></li>
</ul>
<h4 id="3-4-4图例">3.4.4图例</h4>
<ul>
<li><code>legend</code></li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">legend</span><span class="params">(<span class="string">'bottomright'</span>,inset=<span class="number">0.05</span>,title=<span class="string">"legend"</span>,legend=c(<span class="string">'A'</span>,<span class="string">'B'</span>)</span></span>,lty=c(<span class="number">1</span>,<span class="number">2</span>),pch=c(<span class="number">21</span>,<span class="number">22</span>),col=c(<span class="string">'red'</span>,<span class="string">'blue'</span>)) <span class="selector-id">#inset</span>,稍微调下位置。</span><br></pre></td></tr></table></figure>
<h4 id="3-4-5文本标注">3.4.5文本标注</h4>
<ul>
<li><code>text</code>;<code>mtext</code></li>
</ul>
<h3 id="3-5图形的组合">3.5图形的组合</h3>
<ul>
<li><code>mfrow=c(nrows,ncols)</code></li>
<li><code>mfcol=c(ncols,nrows)</code></li>
<li><code>layout</code></li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">layout</span><span class="params">(matrix(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span></span>,<span class="number">2</span>,<span class="number">2</span>,byrow=T),widths = c(<span class="number">3</span>,<span class="number">1</span>),heights = c(<span class="number">1</span>,<span class="number">2</span>)) #两行两列，一幅图在第一行，另外两幅图在第二行。第一幅图的高度是另外两幅图的二分之一。第二行左边图的宽度是右边图的三倍。</span><br><span class="line"><span class="function"><span class="title">hist</span><span class="params">(wt)</span></span></span><br><span class="line"><span class="function"><span class="title">hist</span><span class="params">(mpg)</span></span></span><br><span class="line"><span class="function"><span class="title">hist</span><span class="params">(disp)</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li>图形布局的精细控制<code>fig=c(x1,x2,y1,y2)</code></li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">par</span><span class="params">(fig=c(<span class="number">0</span>,<span class="number">0.8</span>,<span class="number">0</span>,<span class="number">0.8</span>)</span></span>) #x1，左下，x2，右下，y1，左上，y2，右上。</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(mpg~wt)</span></span></span><br><span class="line"><span class="function"><span class="title">par</span><span class="params">(fig=c(<span class="number">0</span>,<span class="number">0.8</span>,<span class="number">0.45</span>,<span class="number">1</span>)</span></span>,new=T) #new=T,添加一幅图到现有的图上。</span><br><span class="line"><span class="function"><span class="title">boxplot</span><span class="params">(wt,horizontal = T,axes=F)</span></span></span><br><span class="line"><span class="function"><span class="title">par</span><span class="params">(fig=c(<span class="number">0.65</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0.8</span>)</span></span>,new=T)</span><br><span class="line"><span class="function"><span class="title">boxplot</span><span class="params">(mpg,axes=F)</span></span></span><br><span class="line"><span class="function"><span class="title">mtext</span><span class="params">(<span class="string">'Enhanced Scatterplot'</span>,<span class="number">3</span>,line=-<span class="number">3</span>,outer=T)</span></span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>R</category>
      </categories>
      <tags>
        <tag>Rbasics</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记_数量生态学_5.非约束排序</title>
    <url>/2020/04/24/NumericalEcologywithR-5-unconstrainedordination/</url>
    <content><![CDATA[<p><strong>摘要：</strong> 主要介绍了四种非约束排序：主成分分析（PCA）、对应分析（CA）、主坐标分析（PCoA）和非度量多维尺度分析（NMDS）。</p>
<a id="more"></a>
<h1>目标</h1>
<p>如果说聚类分析的目的在于寻找数据的间断性，那么排序的目的就在于寻找数据的连续性（通过连续的排序轴展示数据的主要趋势）。<br>
本章的主要内容：</p>
<ul>
<li>学习如何选择合适的排序方法（PCA、CA、PCoA和NMDS），如何使用正确的参数选项运行这些排序分析的函数以及如何正确解读排序图；</li>
<li>利用上述排序方法分析Doubs河流数据集；</li>
<li>在排序图上叠加聚类分析的结果，以便更好地解读聚类分析的结果；</li>
<li>将环境变量被动加入非约束排序，解读物种数据结构。</li>
</ul>
<h1>排序概述</h1>
<h2 id="多维空间">多维空间</h2>
<p>排序过程实际上是将多维空间内的数据点尽可能排列在可视化的低维空间，也就是使最前面的几个排序轴尽可能包含数据结构变化的主要趋势。<br>
注意：非约束排序只是描述性方法，不存在用统计检验评估排序结果显著性的问题。</p>
<h2 id="降维空间内的排序">降维空间内的排序</h2>
<p><strong>主成分分析(principal component analysis, PCA)</strong>：基于特征向量的排序方法。<u>分析对象是原始的定量数据。排序图展示样方之间的欧氏距离。</u><br>
<strong>对应分析(correspondence analysis, CA)</strong>：分析对象必须是频度或类频度、同量纲的非负数据。<u>排序图展示行（对象）或列（变量）之间的卡方距离。在生态学研究中主要用于分析物种数据。</u><br>
<strong>主坐标分析(principal coordinate analysis, PCoA)</strong>：分析对象为距离矩阵（大部分为Q模式），而非原始的样方-变量矩阵表格。因此，可以灵活选择关联测度。<br>
<strong>非度量多维尺度分析(nonmetric multidimensional scaling, NMDS)</strong>：与前面三种排序方法不同，NMDS不是基于特征向量提取的排序方法。NMDS尝试在预先设定数量的排序轴去排序对象，目标是保持这些对象排位关系(ordering relationship)不变。<br>
注意：<u>PCoA和NMDS可以对任何一种距离方阵进行排序。</u></p>
<h1>主成分分析（PCA）</h1>
<h2 id="概述">概述</h2>
<p>PCA致力于分析定量数据，展示欧氏距离，线性关系，因此，PCA通常不适合原始的物种多度数据分析。但是适当转化后的物种数据可以进行PCA分析。</p>
<h2 id="使用rda-函数对Doubs环境数据进行PCA分析">使用rda()函数对Doubs环境数据进行PCA分析</h2>
<h3 id="数据准备">数据准备</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">library</span><span class="params">(ade4)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(vegan)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(gclus)</span></span>  </span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(ape)</span></span></span><br><span class="line">spe &lt;- read.csv(<span class="string">"DoubsSpe.csv"</span>, row.names=<span class="number">1</span>)</span><br><span class="line">env &lt;- read.csv(<span class="string">"DoubsEnv.csv"</span>, row.names=<span class="number">1</span>)</span><br><span class="line">spa &lt;- read.csv(<span class="string">"DoubsSpa.csv"</span>, row.names=<span class="number">1</span>)</span><br><span class="line">spe &lt;- spe[-<span class="number">8</span>,]</span><br><span class="line">env &lt;- env[-<span class="number">8</span>,]</span><br><span class="line">spa &lt;- spa[-<span class="number">8</span>,]</span><br><span class="line"><span class="function"><span class="title">summary</span><span class="params">(env)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="基于相关矩阵的PCA">基于相关矩阵的PCA</h3>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">env.pca &lt;- rda(env, <span class="attribute">scale</span>=<span class="literal">TRUE</span>) #<span class="attribute">scale</span>=<span class="literal">TRUE</span>表示对变量进行标准化</span><br><span class="line">env.pca</span><br><span class="line">summary(env.pca) #默认<span class="attribute">scaling</span>=2,分析兴趣在于解读变量之间的关系,箭头之间的角度表示相关性；也可设置scaling=1，分析兴趣在于解读对象之间的关系，箭头之间的角度无意义。species scores表示变量在排序图的坐标；site scores表示对象在排序图的坐标。</span><br></pre></td></tr></table></figure>
<h3 id="提取、解读和绘制vegan程序包输出的PCA结果">提取、解读和绘制vegan程序包输出的PCA结果</h3>
<p>有多少个排序轴值得保留和解读？<br>
①先看特征根，根据被解释方差所占的比例进行选择，比较随意；<br>
②根据Kaiser-Guttman准则：选择保留特征根大于特征根平均值的轴；<br>
③根据断棍模型：可以选择特征根大于断棍长度的轴，或者选择特征根的总和大于所对应断棍长度总和前几轴。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">(ev &lt;- env.pca<span class="variable">$CA</span><span class="variable">$eig</span>)#输出特征根</span><br><span class="line"><span class="comment">#②kaiser-Guttman准则</span></span><br><span class="line">ev[ev &gt; mean(ev)]</span><br><span class="line"><span class="comment">#③断棍模型</span></span><br><span class="line">n &lt;- length(ev)</span><br><span class="line">bsm &lt;- data.frame(<span class="attribute">j</span>=seq(1:n), <span class="attribute">p</span>=0)</span><br><span class="line">bsm<span class="variable">$p</span>[1] &lt;- 1/n</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> 2:n) &#123;</span><br><span class="line">	bsm<span class="variable">$p</span>[i] = bsm<span class="variable">$p</span>[i-1] + (1/(n + 1 - i))</span><br><span class="line">&#125;</span><br><span class="line">bsm<span class="variable">$p</span> &lt;- 100<span class="number">*b</span>sm<span class="variable">$p</span>/n</span><br><span class="line">bsm</span><br><span class="line"><span class="comment">#绘制每轴的特征根和方差百分比</span></span><br><span class="line">par(<span class="attribute">mfrow</span>=c(2,1))</span><br><span class="line">barplot(ev, <span class="attribute">main</span>=<span class="string">"Eigenvalues"</span>, <span class="attribute">col</span>=<span class="string">"bisque"</span>, <span class="attribute">las</span>=2)</span><br><span class="line">abline(<span class="attribute">h</span>=mean(ev), <span class="attribute">col</span>=<span class="string">"red"</span>)</span><br><span class="line">legend(<span class="string">"topright"</span>, <span class="string">"Average eigenvalue"</span>, <span class="attribute">lwd</span>=1, <span class="attribute">col</span>=2, <span class="attribute">bty</span>=<span class="string">"n"</span>)</span><br><span class="line">barplot(t(cbind(100<span class="number">*e</span>v/sum(ev),bsm<span class="variable">$p</span>[n:1])), <span class="attribute">beside</span>=<span class="literal">TRUE</span>,</span><br><span class="line">	<span class="attribute">main</span>=<span class="string">"% variance"</span>, <span class="attribute">col</span>=c("bisque",2), <span class="attribute">las</span>=2)</span><br><span class="line">legend(<span class="string">"topright"</span>, c(<span class="string">"% evigenvalue"</span>, <span class="string">"Broken stick model"</span>),</span><br><span class="line">	<span class="attribute">pch</span>=15, <span class="attribute">col</span>=c("bisque",2), <span class="attribute">bty</span>=<span class="string">"n"</span>)</span><br><span class="line"><span class="comment">#上述代码已集成到自编函数evplot.R中，可以通过source("evplot.R"),evplot(ev)使用。</span></span><br></pre></td></tr></table></figure>
<p>1.pca.eigenvalues<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-5-unconstrainedordination/1.pca.eigenvalues.png" alt="1"></p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用biplot()函数绘制排序图</span></span><br><span class="line">par(<span class="attribute">mfrow</span>=c(1,2))</span><br><span class="line">biplot(env.pca, <span class="attribute">scaling</span>=1, <span class="attribute">main</span>=<span class="string">"PCA-scaling1"</span>)#关注对象</span><br><span class="line">biplot(env.pca, <span class="attribute">main</span>=<span class="string">"PCA-scaling2"</span>)#默认scaling = 2，关注变量</span><br></pre></td></tr></table></figure>
<p>2.pca.biplot<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-5-unconstrainedordination/2.pca.biplot.png" alt="2"></p>
<h3 id="组合聚类分析结果和排序结果">组合聚类分析结果和排序结果</h3>
<p>两种方法：①在排序图上用不同颜色去区分不同样方组；②将聚类树添加到排序图上</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用环境变量数据对样方进行基于变量标准化后欧氏距离的ward聚类分析</span></span><br><span class="line">env.w &lt;- hclust(dist(scale(env)), <span class="string">"ward"</span>)</span><br><span class="line"><span class="comment">#裁剪聚类树，分为4组</span></span><br><span class="line">gr &lt;- cutree(env.w, <span class="attribute">k</span>=4)</span><br><span class="line">grl &lt;- levels(factor(gr))</span><br><span class="line"><span class="comment">#提取样方坐标，1型标尺</span></span><br><span class="line">sit.sc1 &lt;- scores(env.pca, <span class="attribute">display</span>=<span class="string">"wa"</span>, <span class="attribute">scaling</span>=1)</span><br><span class="line"><span class="comment">#①按照聚类分析的结果对样方进行标识和标色（1型标尺）</span></span><br><span class="line">p &lt;- plot(env.pca, <span class="attribute">display</span>=<span class="string">"wa"</span>, <span class="attribute">scaling</span>=1, <span class="attribute">type</span>=<span class="string">"n"</span>,</span><br><span class="line">	<span class="attribute">main</span>=<span class="string">"PCA correlation+clusters"</span>)</span><br><span class="line">abline(<span class="attribute">v</span>=0, <span class="attribute">lty</span>=<span class="string">"dotted"</span>)</span><br><span class="line">abline(<span class="attribute">h</span>=0, <span class="attribute">lty</span>=<span class="string">"dotted"</span>)</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> 1:length(grl)) &#123;</span><br><span class="line">	points(sit.sc1[<span class="attribute">gr</span>==i,], pch=(14+i), <span class="attribute">cex</span>=2, <span class="attribute">col</span>=i+1)</span><br><span class="line">	&#125;</span><br><span class="line">text(sit.sc1, row.names(env), <span class="attribute">cex</span>=.7, <span class="attribute">pos</span>=3)</span><br><span class="line"><span class="comment">#②在排序图内添加聚类树</span></span><br><span class="line">ordicluster(p, env.w, <span class="attribute">col</span>=<span class="string">"dark grey"</span>)</span><br><span class="line">legend(<span class="string">"topright"</span>, paste(<span class="string">"Group"</span>,c(1:length(grl))), <span class="attribute">pch</span>=14+c(1:length(grl)),</span><br><span class="line">  <span class="attribute">col</span>=1+c(1:length(grl)), pt.<span class="attribute">cex</span>=2)</span><br></pre></td></tr></table></figure>
<p>3.pca.cluster<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-5-unconstrainedordination/3.pca.cluster.png" alt="3"></p>
<h2 id="转化后的物种数据的PCA分析">转化后的物种数据的PCA分析</h2>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">spe<span class="selector-class">.h</span> &lt;- decostand(spe, <span class="string">"hellinger"</span>)</span><br><span class="line">spe<span class="selector-class">.h</span><span class="selector-class">.pca</span> &lt;- rda(spe.h)</span><br><span class="line">spe<span class="selector-class">.h</span>.pca</span><br><span class="line">ev &lt;- spe<span class="selector-class">.h</span>.pca<span class="variable">$CA</span><span class="variable">$eig</span></span><br><span class="line"><span class="function"><span class="title">evplot</span><span class="params">(ev)</span></span>#绘制特征根和方差百分比</span><br><span class="line">par（mfrow=c(<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line"><span class="function"><span class="title">biplot</span><span class="params">(spe.h.pca,scaling=<span class="number">1</span>,main=<span class="string">"PCA-scaling1"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">biplot</span><span class="params">(spe.h.pca,main=<span class="string">"PCA-scaling2"</span>)</span></span></span><br></pre></td></tr></table></figure>
<p>4.pca.eigenvalues.spe<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-5-unconstrainedordination/4.pca.eigenvalues.spe.png" alt="4"></p>
<h2 id="PCA应用领域">PCA应用领域</h2>
<p>基于定量环境变量的样方排序，以及经过适当转化后的群落组成数据的样方排序<br>
要求：数据具有相同的量纲</p>
<h2 id="使用自编的PCA-函数进行PCA分析">使用自编的PCA()函数进行PCA分析</h2>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">source(<span class="string">"PCA.R"</span>)</span><br><span class="line">env.PCA.PL1 &lt;- PCA(env, <span class="attribute">stand</span>=<span class="literal">TRUE</span>)</span><br><span class="line">par(<span class="attribute">mfrow</span>=c(1,2))</span><br><span class="line">biplot.PCA(env.PCA.PL1)#这里默认的是1型标尺双序图</span><br><span class="line">abline(<span class="attribute">h</span>=0, <span class="attribute">lty</span>=3)</span><br><span class="line">abline(<span class="attribute">v</span>=0, <span class="attribute">lty</span>=3)</span><br><span class="line">env.PCA.PL2 &lt;- PCA(env, <span class="attribute">stand</span>=<span class="literal">TRUE</span>)</span><br><span class="line">biplot.PCA(env.PCA.PL2 ,<span class="attribute">scaling</span>=2)#生成2型标尺双序图</span><br><span class="line">abline(<span class="attribute">h</span>=0, <span class="attribute">lty</span>=3)</span><br><span class="line">abline(<span class="attribute">v</span>=0, <span class="attribute">lty</span>=3)</span><br></pre></td></tr></table></figure>
<p>5.pca.biplot.spe<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-5-unconstrainedordination/5.pca.biplot.spe.png" alt="5"></p>
<h1>对应分析（CA）</h1>
<h2 id="引言">引言</h2>
<p>长期以来，CA是分析物种有-无或多度数据最受欢迎的工具之一。<br>
CA的排序结果展示的是样方之间的卡方距离，而不是欧氏距离。卡方距离不受双零问题的影响，因此，CA非常适用于原始的物种多度数据分析（无需预转化）。<br>
以样方为行、物种为列的物种矩阵数据，scaling=1强调对象（样方）之间的关系，scaling=2强调变量（物种）之间的关系。</p>
<h2 id="使用vegan包里的cca-函数进行CA分析">使用vegan包里的cca()函数进行CA分析</h2>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">###运行分析和绘制双序图</span><br><span class="line">spe<span class="selector-class">.ca</span> &lt;- cca(spe)</span><br><span class="line">spe.ca</span><br><span class="line"><span class="function"><span class="title">summary</span><span class="params">(spe.ca)</span></span>		#默认scaling= <span class="number">2</span></span><br><span class="line"><span class="function"><span class="title">summary</span><span class="params">(spe.ca, scaling=<span class="number">1</span>)</span></span></span><br><span class="line">(ev2 &lt;- spe.ca<span class="variable">$CA</span><span class="variable">$eig</span>)</span><br><span class="line"><span class="function"><span class="title">evplot</span><span class="params">(ev2)</span></span>#两类标尺下，特征根一样。标尺的选择，只影响特征向量，不影响特征根。</span><br><span class="line">#断棍模型比Kaiser-Guttman准则更保守</span><br><span class="line"><span class="function"><span class="title">par</span><span class="params">(mfrow=c(<span class="number">1</span>,<span class="number">2</span>)</span></span>)</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spe.ca, scaling=<span class="number">1</span>, main=<span class="string">"CA fish abundances-biplot scaling 1"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spe.ca, main=<span class="string">"CA fish abundances-biplot scaling 2"</span>)</span></span></span><br><span class="line">###使用环境变量被动解释排序轴</span><br><span class="line">##在vegan包里，被动加入环境变量可以通过函数envfit()实现。</span><br><span class="line">spe<span class="selector-class">.ca</span><span class="selector-class">.env</span> &lt;- envfit(spe<span class="selector-class">.ca</span>, env)#envfit()函数也用于解释变量与排序轴回归r2的显著性的置换检验。</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spe.ca.env)</span></span></span><br><span class="line">###基于CA排序轴重排数据表格</span><br><span class="line"><span class="function"><span class="title">vegemite</span><span class="params">(spe, spe.ca)</span></span>#可选</span><br></pre></td></tr></table></figure>
<p>6.ca.eigenvalues<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-5-unconstrainedordination/6.ca.eigenvalues.png" alt="6"><br>
7.ca.biplot.env<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-5-unconstrainedordination/7.ca.biplot.env.png" alt="7"></p>
<h2 id="使用自编的CA-函数进行对应分析">使用自编的CA()函数进行对应分析</h2>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">source(<span class="string">"CA.R"</span>)</span><br><span class="line">spe.<span class="keyword">CA</span>.<span class="keyword">PL</span> &lt;- <span class="keyword">CA</span>(spe)</span><br><span class="line"><span class="keyword">biplot</span>(spe.<span class="keyword">CA</span>.<span class="keyword">PL</span>, cex=1)</span><br><span class="line">#用<span class="keyword">CA</span>第一轴排序结果重新排列数据表格</span><br><span class="line">#重新排列数据表格与vegemite()输出的结果一样</span><br><span class="line">summary(spe.<span class="keyword">CA</span>.<span class="keyword">PL</span>)</span><br><span class="line">t(spe[<span class="keyword">order</span>(spe.<span class="keyword">CA</span>.<span class="keyword">PL</span><span class="variable">$F</span>[,1]),<span class="keyword">order</span>(spe.<span class="keyword">CA</span>.<span class="keyword">PL</span><span class="variable">$V</span>[,1])])</span><br></pre></td></tr></table></figure>
<p>8.ca.biplot<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-5-unconstrainedordination/8.ca.biplot.png" alt="8"></p>
<h2 id="弓形效应和去趋势对应分析（DCA）">弓形效应和去趋势对应分析（DCA）</h2>
<p><code>decorana()</code><br>
查看结果中的“Axis lengths”的第一轴DCA1的值，根据该值判断该采用线性模型还是单峰模型：如果大于4.0，就应该选单峰模型；如果3.0-4.0之间，选线性模型或者单峰模型均可；如果小于3.0, 线性模型的结果要好于单峰模型</p>
<h2 id="多重对应分析（MCA）">多重对应分析（MCA）</h2>
<p>multiple correspondence analysis (MCA)</p>
<h1>主坐标分析（PCoA）</h1>
<h2 id="引言-2">引言</h2>
<p>PCA是欧氏距离，CA是卡方距离。如果认为以其他距离测度为基础去排序对象对于所研究问题更合适，PCoA分析是首选。</p>
<h2 id="利用cmdscale-包和vegan包对Doubs数据进行PCoA分析">利用cmdscale()包和vegan包对Doubs数据进行PCoA分析</h2>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#基于鱼类物种数据Bray-curtis相异矩阵的PCoA分析</span></span><br><span class="line">spe.bray &lt;- vegdist(spe)#默认Bray-curtis相异系数</span><br><span class="line">spe.b.pcoa &lt;- cmdscale(spe.bray, k=(nrow(spe)-1), <span class="attribute">eig</span>=<span class="literal">TRUE</span>)#k indicates the maximum dimension; eig indicates whether eigenvalues should be returned.</span><br><span class="line"><span class="comment">#绘制样方主坐标排序图并用加权平均方法将物种投影到样方的PCoA排序图内</span></span><br><span class="line">ordiplot(scores(spe.b.pcoa)[,c(1,2)], <span class="attribute">type</span>=<span class="string">"t"</span>, <span class="attribute">main</span>=<span class="string">"PCoA with species"</span>)</span><br><span class="line">abline(<span class="attribute">h</span>=0, <span class="attribute">lty</span>=3)</span><br><span class="line">abline(<span class="attribute">v</span>=0, <span class="attribute">lty</span>=3)</span><br><span class="line"><span class="comment">#添加物种</span></span><br><span class="line">spe.wa &lt;- wascores(spe.b.pcoa<span class="variable">$points</span>[,1:2], spe)#以多度加权平均方式将物种被动投影到样方的PCoA排序图内。</span><br><span class="line">text(spe.wa, rownames(spe.wa), <span class="attribute">cex</span>=0.7, <span class="attribute">col</span>=<span class="string">"red"</span>)</span><br></pre></td></tr></table></figure>
<p>9.PCoAwithspecies<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-5-unconstrainedordination/9.PCoAwithspecies.png" alt="9"></p>
<h2 id="使用pcoa-函数对Doubs数据进行PCoA分析">使用pcoa()函数对Doubs数据进行PCoA分析</h2>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#基于物种数据经过hellinger转化后距离矩阵的PCoA分析</span></span><br><span class="line">spe.h.pcoa &lt;- pcoa(dist(spe.h))</span><br><span class="line">par(<span class="attribute">mfrow</span>=c(1,2))</span><br><span class="line"><span class="comment">#被动加入hellinger转化的物种数据</span></span><br><span class="line">biplot.pcoa(spe.h.pcoa, spe.h, dir.<span class="attribute">axis2</span>=-1)</span><br><span class="line">abline(<span class="attribute">h</span>=0, <span class="attribute">lty</span>=3)</span><br><span class="line">abline(<span class="attribute">v</span>=0, <span class="attribute">lty</span>=3)</span><br><span class="line"><span class="comment">#被动加入hellinger转化后标准化的物种数据</span></span><br><span class="line">spe.std &lt;- apply(spe.h, 2, scale)#等同于decostand(spe.h,<span class="string">"standardize"</span>)      </span><br><span class="line">biplot.pcoa(spe.h.pcoa, spe.std, dir.<span class="attribute">axis2</span>=-1)</span><br><span class="line">abline(<span class="attribute">h</span>=0, <span class="attribute">lty</span>=3)</span><br><span class="line">abline(<span class="attribute">v</span>=0, <span class="attribute">lty</span>=3)</span><br><span class="line"><span class="comment">#如果变量方差比较大，标准化对于优化排序图的视觉效果很有用。</span></span><br></pre></td></tr></table></figure>
<p>10.pcoa.biplot<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-5-unconstrainedordination/10.pcoa.biplot.png" alt="10"></p>
<p>对于非欧氏距离，PCoA可能产生一些负特征根。函数pcoa()含有lingeous和cailliez校正可处理负特征根问题，并提供与断棍模型比较的特征根结果。</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">#基于Hellinger距离矩阵的PCoA</span><br><span class="line"><span class="keyword">is</span>.euclid(dist(<span class="keyword">spe</span>.h))#Is <span class="keyword">a</span> Distance Matrix Euclidean?</span><br><span class="line">summary(<span class="keyword">spe</span>.h.pcoa)</span><br><span class="line"><span class="keyword">spe</span>.h.pcoa$<span class="built_in">values</span></span><br><span class="line">#基于Bray-Curtis相异矩阵的PCoA</span><br><span class="line"><span class="keyword">is</span>.euclid(<span class="keyword">spe</span>.bray)</span><br><span class="line"><span class="keyword">spe</span>.bray.pcoa &lt;- pcoa(<span class="keyword">spe</span>.bray)</span><br><span class="line"><span class="keyword">spe</span>.bray.pcoa$<span class="built_in">values</span></span><br><span class="line">#基于Bray-Curtis相异矩阵平方根的PCoA</span><br><span class="line"><span class="keyword">is</span>.euclid(<span class="built_in">sqrt</span>(<span class="keyword">spe</span>.bray))</span><br><span class="line"><span class="keyword">spe</span>.braysq.pcoa &lt;- pcoa(<span class="built_in">sqrt</span>(<span class="keyword">spe</span>.bray))</span><br><span class="line"><span class="keyword">spe</span>.braysq.pcoa$<span class="built_in">values</span></span><br><span class="line">#基于Bray-Curtis相异矩阵的PCoA（Lingoes校正）</span><br><span class="line"><span class="keyword">spe</span>.brayl.pcoa &lt;- pcoa(<span class="keyword">spe</span>.bray, correction=<span class="string">"lingoes"</span>)</span><br><span class="line"><span class="keyword">spe</span>.brayl.pcoa$<span class="built_in">values</span></span><br><span class="line">#基于Bray-Curtis相异矩阵的PCoA（Cailliez校正）</span><br><span class="line"><span class="keyword">spe</span>.brayc.pcoa &lt;- pcoa(<span class="keyword">spe</span>.bray, correction=<span class="string">"cailliez"</span>)</span><br><span class="line"><span class="keyword">spe</span>.brayc.pcoa$values#观察特征根</span><br></pre></td></tr></table></figure>
<h1>非度量多维尺度分析（NMDS）</h1>
<h2 id="引言-3">引言</h2>
<p>如果排序的目的不是最大限度地保留对象之间实际的距离，只是反映对象之间的顺序关系，这个时候非度量多维尺度分析（nonmetrc multidimensional scaling, NMDS)可能是一种解决方案。<br>
与PCoA一样，NMDS可以基于任何类型距离矩阵对对象（样方）进行排序。<br>
与PCoA不同的是，NMDS不再基于距离矩阵数值，而是根据排位顺序进行计算。<br>
NMDS不再是特征根排序技术，也不再以排序轴承载更多的变差为目的，因此NMDS排序图可以任意旋转、中心化和倒置。<br>
NMDS计算需要不断迭代，对计算机的能力要求比较高，排序结果有时会依赖计算机技术。</p>
<h2 id="鱼类数据NMDS分析（使用vegan包的metaMDS-函数">鱼类数据NMDS分析（使用vegan包的metaMDS()函数)</h2>
<p><code>metaMDS()</code>随机构建对象初始结构，并不断尝试以获得最佳的NMDS排序结果。<br>
用<code>wascores()</code>函数将物种加入样方NMDS排序图中<br>
示例：使用鱼类多度bray-curtis相异矩阵数据进行演示</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">spe</span>.nmds &lt;- metaMDS(<span class="keyword">spe</span>, distance=<span class="string">"bray"</span>)</span><br><span class="line"><span class="keyword">spe</span>.nmds</span><br><span class="line"><span class="keyword">spe</span>.nmds$stress</span><br><span class="line">plot(<span class="keyword">spe</span>.nmds, <span class="built_in">type</span>=<span class="string">"t"</span>, main=paste(<span class="string">"NMDS/Bray-Stress="</span>, <span class="built_in">round</span>(<span class="keyword">spe</span>.nmds$stress,<span class="number">3</span>)))</span><br></pre></td></tr></table></figure>
<p>11.nmds<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-5-unconstrainedordination/11.nmds.png" alt="11"></p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#评估NMDS拟合度的shepard图</span></span><br><span class="line">par(<span class="attribute">mfrow</span>=c(1,2))</span><br><span class="line">stressplot(spe.nmds, <span class="attribute">main</span>=<span class="string">"Shepard plot"</span>)</span><br><span class="line">gof = goodness(spe.nmds)</span><br><span class="line">plot(spe.nmds, <span class="attribute">type</span>=<span class="string">"t"</span>, <span class="attribute">main</span>=<span class="string">"Goodness of fit"</span>)</span><br><span class="line">points(spe.nmds, <span class="attribute">display</span>=<span class="string">"sites"</span>, <span class="attribute">cex</span>=gof*200)#拟合度越差的点，气泡越大。</span><br></pre></td></tr></table></figure>
<p>12.nmds.goodness<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-5-unconstrainedordination/12.nmds.goodness.png" alt="12"></p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#计算bray-curtis矩阵的ward聚类分析，然后提取4组，并在NMDS图内对属于不同组的样方进行标色。</span></span><br><span class="line">spe.bray.ward &lt;- hclust(spe.bray, <span class="string">"ward"</span>)</span><br><span class="line">spe.bw.groups &lt;- cutree(spe.bray.ward, <span class="attribute">k</span>=4)</span><br><span class="line">grp.lev &lt;- levels(factor(spe.bw.groups))</span><br><span class="line">sit.sc &lt;- scores(spe.nmds)</span><br><span class="line">p &lt;- ordiplot(sit.sc, <span class="attribute">type</span>=<span class="string">"n"</span>, <span class="attribute">main</span>=<span class="string">"NMDS/Bray + clusters Ward/Bray"</span>)</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> 1:length(grp.lev)) &#123;</span><br><span class="line">	points(sit.sc[spe.bw.<span class="attribute">groups</span>==i,], pch=(14+i), <span class="attribute">cex</span>=2, <span class="attribute">col</span>=i+1)</span><br><span class="line">	&#125;</span><br><span class="line">text(sit.sc, row.names(spe), <span class="attribute">pos</span>=4, <span class="attribute">cex</span>=0.7)</span><br><span class="line">ordicluster(p, spe.bray.ward, <span class="attribute">col</span>=<span class="string">"dark grey"</span>)</span><br><span class="line">legend(locator(1), paste(<span class="string">"Group"</span>,c(1:length(grp.lev))),</span><br><span class="line">  <span class="attribute">pch</span>=14+c(1:length(grp.lev)), <span class="attribute">col</span>=1+c(1:length(grp.lev)), pt.<span class="attribute">cex</span>=2)</span><br></pre></td></tr></table></figure>
<p>13.nmds.cluster<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-5-unconstrainedordination/13.nmds.cluster.png" alt="13"></p>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>R</category>
      </categories>
      <tags>
        <tag>Rbasics</tag>
      </tags>
  </entry>
  <entry>
    <title>R plot_1.How to Make Beautiful Tables</title>
    <url>/2020/06/18/Rplot-2020-1-howtomakebeautifultablesinR/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> R packages: <code>formattable</code></p>
<a id="more"></a>
<h1>formattable</h1>
<h2 id="示例">示例</h2>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">install.packages(<span class="string">"formattable"</span>)library(formattable)</span><br><span class="line">data(<span class="string">"mtcars"</span>)</span><br><span class="line">formattable(mtcars[<span class="number">1</span>:<span class="number">8</span>,<span class="number">1</span>:<span class="number">8</span>],list(<span class="attr">mpg</span> = color_tile(<span class="string">"white"</span>,<span class="string">"orange"</span>),</span><br><span class="line">            <span class="attr">cyl</span> = formatter(<span class="string">"span"</span>,<span class="attr">style</span> = x~ifelse(<span class="attr">x</span> == <span class="number">4</span>,style(<span class="attr">color</span> = <span class="string">"green"</span>,font.<span class="attr">weight</span> = <span class="string">"bold"</span>),NA)),</span><br><span class="line">            area(<span class="attr">col</span> = c(disp,hp))~normalize_bar(<span class="string">"pink"</span>,<span class="number">0.2</span>),</span><br><span class="line">            <span class="attr">wt</span> = formatter(<span class="string">"span"</span>,<span class="attr">style</span> = x~style(<span class="attr">color</span> = ifelse(rank(-x) &lt;= <span class="number">5</span>,<span class="string">"green"</span>,<span class="string">"gray"</span>)),</span><br><span class="line">                           x~sprintf(<span class="string">"%.2f (rank: %02d)"</span>,x,rank(-x))),</span><br><span class="line">            <span class="attr">vs</span> = formatter(<span class="string">"span"</span>,<span class="attr">style</span> = x~style(<span class="attr">color</span> = ifelse(<span class="attr">x</span> == <span class="number">0</span>,<span class="string">"green"</span>,<span class="string">"red"</span>)),</span><br><span class="line">                           x~icontext(ifelse(<span class="attr">x</span> == <span class="number">0</span>,<span class="string">"ok"</span>,<span class="string">"removee"</span>),</span><br><span class="line">                                      ifelse(<span class="attr">x</span> == <span class="number">0</span>,<span class="string">"Yes"</span>,<span class="string">"No"</span>)))))</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Rplot/formattable/formattable.png" alt="formattable"></p>
<h2 id="参数详解">参数详解</h2>
<p>color_tile函数用于输出按照数值量级进行颜色背景填充的列。<br>
formatter函数提供字体显示格式的自定义。<br>
在示例中我们使用ielse将cyl中数值为4的元素设置为绿色加粗，而其它元素格式不变。<br>
使用area和normalize_bar相结合将disp和hp列在对应字体背景位置使用条形图来代表指标量级大小。<br>
使用ielse与sprintf相结合将wt列的元素后添加其排序位置，并将前5位的数值设置为绿色。<br>
使用ifelse与icontext相结合判断vs值是否为0，进一步使用对错的图标进行显示。</p>
<p>Ref:</p>
<blockquote>
<p><a href="https://www.rdocumentation.org/packages/formattable/versions/0.2.0.1" target="_blank" rel="noopener">formattable</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>R</category>
      </categories>
      <tags>
        <tag>Rplot</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记_数量生态学_4.聚类分析</title>
    <url>/2020/04/21/NumericalEcologywithR-4-clustering/</url>
    <content><![CDATA[<p><strong>摘要：</strong> 聚类方法的介绍（以物种数据为例），包括基于连接的层次聚类、平均聚合聚类、ward最小方差聚类、灵活聚类、非层次聚类、多元回归树聚类、模糊聚类等。此外，还介绍了用环境数据进行比较，以及物种集合（如何对物种进行分组）。</p>
<a id="more"></a>
<h1>目标</h1>
<ul>
<li>学习如何选择合适的聚类方法</li>
<li>使用不同的聚类方法分析Doubs数据集，确认样方组和鱼类物种组</li>
<li>学习一种强大的模型方法：约束聚类（constrained clustering)，一种被外部数据集约束聚类过程的方法。</li>
</ul>
<h1>聚类概述</h1>
<p>不同类型的聚类方法：</p>
<ul>
<li>连续（sequential）或同步（simultaneous）</li>
<li>聚合（agglomerative）或分划（divisive）</li>
<li>单元（monothetic）和多元（polythetic）</li>
<li>层次法（hierarchical）和非层次法（non-hierarchical）</li>
<li>概率法（probabistic）和非概率法（non-probabistic）</li>
</ul>
<p>使用Doubs数据集进行演示<br>
预处理</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#load</span> packages</span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(ade4)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(vegan)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(gclus)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(cluster)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(RColorBrewer)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(labdsv)</span></span></span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(mvpart)</span></span> <span class="selector-id">#devtools</span>::install_github(<span class="string">"cran/mvpart"</span>)</span><br><span class="line"><span class="function"><span class="title">library</span><span class="params">(MVPARTwrap)</span></span> <span class="selector-id">#devtools</span>::install_github(<span class="string">"cran/MVPARTwrap"</span>)</span><br><span class="line"><span class="selector-id">#import</span> data</span><br><span class="line">spe &lt;- read.csv(<span class="string">"DoubsSpe.csv"</span>, row.names=<span class="number">1</span>)</span><br><span class="line">env &lt;- read.csv(<span class="string">"DoubsEnv.csv"</span>, row.names=<span class="number">1</span>)</span><br><span class="line">spa &lt;- read.csv(<span class="string">"DoubsSpa.csv"</span>, row.names=<span class="number">1</span>)</span><br><span class="line"><span class="selector-id">#delete</span> sampling site <span class="number">8</span></span><br><span class="line">spe &lt;- spe[-<span class="number">8</span>,]</span><br><span class="line">env &lt;- env[-<span class="number">8</span>,]</span><br><span class="line">spa &lt;- spa[-<span class="number">8</span>,]</span><br></pre></td></tr></table></figure>
<h1>基于连接的层次聚类</h1>
<h2 id="单连接聚合聚类">单连接聚合聚类</h2>
<p>依据 <strong>最短的成对距离</strong>：一对对象连接第三个对象，成为新的一组，再连接另外一个对象，直到全部对象被连接完毕为止。</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">spe</span>.<span class="keyword">norm</span> &lt;- decostand(<span class="keyword">spe</span>, <span class="string">"normalize"</span>)</span><br><span class="line"><span class="keyword">spe</span>.ch &lt;- vegdist(<span class="keyword">spe</span>.<span class="keyword">norm</span>, <span class="string">"euc"</span>) #弦距离矩阵；equal <span class="keyword">to</span> <span class="keyword">spe</span>.ch&lt;-dist(<span class="keyword">spe</span>.<span class="keyword">norm</span>)</span><br><span class="line"><span class="keyword">spe</span>.ch.single &lt;- hclust(<span class="keyword">spe</span>.ch, method=<span class="string">"single"</span>)</span><br><span class="line">plot(<span class="keyword">spe</span>.ch.single,main=<span class="string">"Cluster Dendrogram"</span>,ylab=<span class="string">"height"</span>,xlab=<span class="string">"single linkage agglomerative clustering"</span>)</span><br></pre></td></tr></table></figure>
<p>1.single<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/1.single.png" alt="1"></p>
<h2 id="完全连接聚合聚类">完全连接聚合聚类</h2>
<p>依据 <strong>最远的距离对</strong>：比较与组内所有成员与备选新成员形成的对象对最远的距离。<br>
相比于单连接，<u>完全连接更适于寻找和识别数据的间断分布</u>。</p>
<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">spe.ch.complete &lt;- hclust(spe.ch, <span class="function"><span class="keyword">method</span>="<span class="title">complete</span>")</span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spe.ch.complete,main="Cluster Dendrogram",ylab="height",xlab="complete linkage agglomerative clustering")</span></span></span><br></pre></td></tr></table></figure>
<p>2.complete<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/2.complete.png" alt="2"></p>
<h1>平均聚合聚类</h1>
<p>基于对象间平均相异性或聚类簇形心的聚类方法。<br>
包括四类（最常用 <strong>UPGMA</strong>，UPGMC和WPGMC易发生翻转）：</p>
<ul>
<li>使用算术平均的非权重成对组法（UPGMA，‘average’)：算术平均，等权重；</li>
<li>使用算术平均的权重成对组法（WPGMA，‘mcquitty’)：算术平均，不等权重；</li>
<li>使用形心的非权重成对组法（UPGMC，‘centroid’)：形心聚类，等权重；</li>
<li>使用形心的权重成对组法（WPGMC，‘median’)：形心聚类，不等权重；</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.UPGMA</span> &lt;- hclust(spe<span class="selector-class">.ch</span>, method=<span class="string">"average"</span>)#UPGMA</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spe.ch.UPGMA,main=<span class="string">"Cluster Dendrogram"</span>,ylab=<span class="string">"height"</span>,xlab=<span class="string">"UPGMA agglomerative clustering"</span>)</span></span></span><br><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.WPGMA</span> &lt;- hclust(spe<span class="selector-class">.ch</span>, method=<span class="string">"mcquitty"</span>)#WPGMA</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spe.ch.WPGMA,main=<span class="string">"Cluster Dendrogram"</span>,ylab=<span class="string">"height"</span>,xlab=<span class="string">"WPGMA agglomerative clustering"</span>)</span></span></span><br><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.centroid</span> &lt;- hclust(spe<span class="selector-class">.ch</span>, method=<span class="string">"centroid"</span>)#UPGMC</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spe.ch.centroid,main=<span class="string">"Cluster Dendrogram"</span>,ylab=<span class="string">"height"</span>,xlab=<span class="string">"UPGMC agglomerative clustering"</span>)</span></span></span><br><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.WPGMC</span> &lt;- hclust(spe<span class="selector-class">.ch</span>, method=<span class="string">"median"</span>)#WPGMC</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spe.ch.WPGMC,main=<span class="string">"Cluster Dendrogram"</span>,ylab=<span class="string">"height"</span>,xlab=<span class="string">"WPGMC agglomerative clustering"</span>)</span></span></span><br></pre></td></tr></table></figure>
<p>3.UPGMA<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/3.UPGMA.png" alt="3"><br>
4.WPGMA<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/4.WPGMA.png" alt="4"><br>
5.UPGMC<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/5.UPGMC.png" alt="5"><br>
6.WPGMC<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/6.WPGMC.png" alt="6"></p>
<h1>Ward最小方差聚类</h1>
<p>基于最小二乘法线性模型准则的聚类方法，分组的依据是使组内平方和（即方差分析的方差）最小化。<br>
注意：虽然组内平方和的计算是基于欧氏模型，但ward聚类并不要求输入的数据一定是欧氏距离矩阵。</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.ward</span> &lt;- hclust(spe<span class="selector-class">.ch</span>, method=<span class="string">"ward.D"</span>)</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spe.ch.ward,main=<span class="string">"Cluster Dendrogram"</span>,ylab=<span class="string">"height"</span>,xlab=<span class="string">"Ward clustering"</span>)</span></span></span><br><span class="line">#使用距离平方造成此聚类树上半部分过于膨胀。为了使聚类树比例看起来更协调而不影响其拓扑结构，可以使用当前融合水平的平方根重新绘图。</span><br><span class="line">spe<span class="selector-class">.ch</span>.ward<span class="variable">$height</span> &lt;- sqrt(spe<span class="selector-class">.ch</span>.ward<span class="variable">$height</span>)</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(spe.ch.ward,main=<span class="string">"Cluster Dendrogram"</span>,ylab=<span class="string">"height"</span>,xlab=<span class="string">"Ward clustering"</span>)</span></span></span><br></pre></td></tr></table></figure>
<p>7.ward<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/7.ward.png" alt="7"><br>
8.sqrt.ward<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/8.sqrt.ward.png" alt="8"></p>
<h1>灵活聚类</h1>
<p>cluster程序包内的agnes()函数通过参数method和par.method的设置可以实现灵活聚类。</p>
<h1>解读和比较层次聚类结果</h1>
<h2 id="引言">引言</h2>
<p>聚类分析是一种探索性分析，而非统计检验。影响其结果的因素包括聚类方法本身和用于聚类分析的关联系数的选择。</p>
<h2 id="同表型相关">同表型相关</h2>
<p>=&gt; 两个对象交汇节点所在的层次水平即是两个对象 <strong>同表型距离</strong>。<br>
<strong>同表型相关（cophenetic correlation）</strong> 是原始的距离矩阵和同表型距离矩阵之间的<u>perason相关系数，也可以用spearman或kendall秩相关系数</u>。<br>
<strong>具有最高的同表型相关系数的聚类方法可视为原始矩阵最好的聚类模型。</strong><br>
=&gt; 另一个比较聚类结果的指标是 <strong>Gower</strong>。它等于原始距离与同表型距离之间差值的平方和。<br>
<strong>具有最小Gower距离的聚类方法也可视为原始矩阵最好的聚类模型。</strong><br>
<u>注意：同表型相关系数和Gower距离分析结果并不总是一致。</u></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">#同表型相关系数</span><br><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.single</span><span class="selector-class">.coph</span> &lt;- cophenetic(spe<span class="selector-class">.ch</span>.single)#同表型矩阵</span><br><span class="line"><span class="function"><span class="title">cor</span><span class="params">(spe.ch, spe.ch.single.coph)</span></span>#同表型相关，默认pearson</span><br><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.comp</span><span class="selector-class">.coph</span> &lt;- cophenetic(spe<span class="selector-class">.ch</span>.complete)</span><br><span class="line"><span class="function"><span class="title">cor</span><span class="params">(spe.ch, spe.ch.comp.coph)</span></span></span><br><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.UPGMA</span><span class="selector-class">.coph</span> &lt;- cophenetic(spe<span class="selector-class">.ch</span>.UPGMA)</span><br><span class="line"><span class="function"><span class="title">cor</span><span class="params">(spe.ch, spe.ch.UPGMA.coph)</span></span></span><br><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.ward</span><span class="selector-class">.coph</span> &lt;- cophenetic(spe<span class="selector-class">.ch</span>.ward)</span><br><span class="line"><span class="function"><span class="title">cor</span><span class="params">(spe.ch, spe.ch.ward.coph)</span></span></span><br><span class="line"><span class="function"><span class="title">cor</span><span class="params">(spe.ch, spe.ch.ward.coph, method=<span class="string">"spearman"</span>)</span></span></span><br><span class="line">#同表型相关系数的可视化: Shepard图</span><br><span class="line"><span class="function"><span class="title">par</span><span class="params">(mfrow=c(<span class="number">2</span>,<span class="number">2</span>)</span></span>)</span><br><span class="line">plot(spe<span class="selector-class">.ch</span>, spe<span class="selector-class">.ch</span><span class="selector-class">.single</span><span class="selector-class">.coph</span>, xlab=<span class="string">"Chord distance"</span>,</span><br><span class="line">  ylab=<span class="string">"Cophenetic distance"</span>, asp=<span class="number">1</span>, xlim=c(<span class="number">0</span>,sqrt(<span class="number">2</span>)), ylim=c(<span class="number">0</span>,sqrt(<span class="number">2</span>)),</span><br><span class="line">  main=c(<span class="string">"Single linkage"</span>,paste(<span class="string">"Cophenetic correlation"</span>,</span><br><span class="line">  round(cor(spe<span class="selector-class">.ch</span>, spe<span class="selector-class">.ch</span><span class="selector-class">.single</span>.coph),<span class="number">3</span>))))</span><br><span class="line"><span class="function"><span class="title">abline</span><span class="params">(<span class="number">0</span>,<span class="number">1</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(lowess(spe.ch, spe.ch.single.coph)</span></span>, col=<span class="string">"red"</span>)</span><br><span class="line">plot(spe<span class="selector-class">.ch</span>, spe<span class="selector-class">.ch</span><span class="selector-class">.comp</span><span class="selector-class">.coph</span>, xlab=<span class="string">"Chord distance"</span>,</span><br><span class="line">	ylab=<span class="string">"Cophenetic distance"</span>, asp=<span class="number">1</span>, xlim=c(<span class="number">0</span>,sqrt(<span class="number">2</span>)), ylim=c(<span class="number">0</span>,sqrt(<span class="number">2</span>)),</span><br><span class="line">  main=c(<span class="string">"Complete linkage"</span>, paste(<span class="string">"Cophenetic correlation"</span>,</span><br><span class="line">  round(cor(spe<span class="selector-class">.ch</span>, spe<span class="selector-class">.ch</span><span class="selector-class">.comp</span>.coph),<span class="number">3</span>))))</span><br><span class="line"><span class="function"><span class="title">abline</span><span class="params">(<span class="number">0</span>,<span class="number">1</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(lowess(spe.ch, spe.ch.comp.coph)</span></span>, col=<span class="string">"red"</span>)</span><br><span class="line">plot(spe<span class="selector-class">.ch</span>, spe<span class="selector-class">.ch</span><span class="selector-class">.UPGMA</span><span class="selector-class">.coph</span>, xlab=<span class="string">"Chord distance"</span>,</span><br><span class="line">	ylab=<span class="string">"Cophenetic distance"</span>, asp=<span class="number">1</span>, xlim=c(<span class="number">0</span>,sqrt(<span class="number">2</span>)), ylim=c(<span class="number">0</span>,sqrt(<span class="number">2</span>)),</span><br><span class="line">  main=c(<span class="string">"UPGMA"</span>, paste(<span class="string">"Cophenetic correlation"</span>,</span><br><span class="line">  round(cor(spe<span class="selector-class">.ch</span>, spe<span class="selector-class">.ch</span><span class="selector-class">.UPGMA</span>.coph),<span class="number">3</span>))))</span><br><span class="line"><span class="function"><span class="title">abline</span><span class="params">(<span class="number">0</span>,<span class="number">1</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(lowess(spe.ch, spe.ch.UPGMA.coph)</span></span>, col=<span class="string">"red"</span>)</span><br><span class="line">plot(spe<span class="selector-class">.ch</span>, spe<span class="selector-class">.ch</span><span class="selector-class">.ward</span><span class="selector-class">.coph</span>, xlab=<span class="string">"Chord distance"</span>,</span><br><span class="line">	ylab=<span class="string">"Cophenetic distance"</span>, asp=<span class="number">1</span>, xlim=c(<span class="number">0</span>,sqrt(<span class="number">2</span>)),</span><br><span class="line">  ylim=c(<span class="number">0</span>,max(spe<span class="selector-class">.ch</span>.ward<span class="variable">$height</span>)),</span><br><span class="line">  main=c(<span class="string">"Ward clustering"</span>, paste(<span class="string">"Cophenetic correlation"</span>,</span><br><span class="line">  round(cor(spe<span class="selector-class">.ch</span>, spe<span class="selector-class">.ch</span><span class="selector-class">.ward</span>.coph),<span class="number">3</span>))))</span><br><span class="line"><span class="function"><span class="title">abline</span><span class="params">(<span class="number">0</span>,<span class="number">1</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">lines</span><span class="params">(lowess(spe.ch, spe.ch.ward.coph)</span></span>, col=<span class="string">"red"</span>)</span><br></pre></td></tr></table></figure>
<p>9.shepard<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/9.shepard.png" alt="9"></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#Gower</span>距离</span><br><span class="line"><span class="selector-tag">gow</span><span class="selector-class">.dist</span><span class="selector-class">.single</span> &lt;<span class="selector-tag">-</span> <span class="selector-tag">sum</span>((<span class="selector-tag">spe</span><span class="selector-class">.ch-spe</span><span class="selector-class">.ch</span><span class="selector-class">.single</span><span class="selector-class">.coph</span>)^2)</span><br><span class="line"><span class="selector-tag">gow</span><span class="selector-class">.dist</span><span class="selector-class">.comp</span> &lt;<span class="selector-tag">-</span> <span class="selector-tag">sum</span>((<span class="selector-tag">spe</span><span class="selector-class">.ch-spe</span><span class="selector-class">.ch</span><span class="selector-class">.comp</span><span class="selector-class">.coph</span>)^2)</span><br><span class="line"><span class="selector-tag">gow</span><span class="selector-class">.dist</span><span class="selector-class">.UPGMA</span> &lt;<span class="selector-tag">-</span> <span class="selector-tag">sum</span>((<span class="selector-tag">spe</span><span class="selector-class">.ch-spe</span><span class="selector-class">.ch</span><span class="selector-class">.UPGMA</span><span class="selector-class">.coph</span>)^2)</span><br><span class="line"><span class="selector-tag">gow</span><span class="selector-class">.dist</span><span class="selector-class">.ward</span> &lt;<span class="selector-tag">-</span> <span class="selector-tag">sum</span>((<span class="selector-tag">spe</span><span class="selector-class">.ch-spe</span><span class="selector-class">.ch</span><span class="selector-class">.ward</span><span class="selector-class">.coph</span>)^2)</span><br><span class="line"><span class="selector-tag">gow</span><span class="selector-class">.dist</span><span class="selector-class">.single</span></span><br><span class="line"><span class="selector-tag">gow</span><span class="selector-class">.dist</span><span class="selector-class">.comp</span></span><br><span class="line"><span class="selector-tag">gow</span><span class="selector-class">.dist</span><span class="selector-class">.UPGMA</span></span><br><span class="line"><span class="selector-tag">gow</span><span class="selector-class">.dist</span><span class="selector-class">.ward</span></span><br></pre></td></tr></table></figure>
<h2 id="寻找可解读的聚类簇">寻找可解读的聚类簇</h2>
<p>可以对聚类树进行裁剪，裁剪到那个水平可以通过视觉判断，也可以通过满足一些标准来确定:</p>
<ul>
<li>融合水平值（fusion level value）：聚类树中两个分支融合处的相异性的数值；</li>
<li>轮廓宽度（silhouette width）：一个对象同同一组内其他对象的平均距离与该对象同最邻近聚类簇内所有对象的平均距离的比较，范围-1到1;</li>
<li>距离矩阵和代表分组的二元矩阵的比较：计算原始距离与代表不同分类水平的二元矩阵之间的相关性，然后选择最高的相关（mantel相关）系数所对应的分类水平作为最优分组方案。</li>
</ul>
<p>可视化</p>
<ul>
<li>最终分组的轮廓图：确定了分组数和相关的聚类方法之后，用此确定这样分组是否真的合理（即没有或极少的对象被分到不合适的组里）。</li>
<li>利用绘图工具修饰的最终聚类树</li>
<li>聚类结果空间分布图</li>
<li>热图和排序的群落表</li>
</ul>
<h3 id="融合水平值图">融合水平值图</h3>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">par(<span class="attribute">mfrow</span>=c(2,2))</span><br><span class="line">summary(spe.ch.single)</span><br><span class="line">plot(spe.ch.single<span class="variable">$height</span>, nrow(spe):2, <span class="attribute">type</span>=<span class="string">"S"</span>, <span class="attribute">main</span>=<span class="string">"Fusion levels - Chord - Single"</span>, <span class="attribute">ylab</span>=<span class="string">"k (number of clusters)"</span>, <span class="attribute">xlab</span>=<span class="string">"h (node height)"</span>, <span class="attribute">col</span>=<span class="string">"grey"</span>)</span><br><span class="line">text(spe.ch.single<span class="variable">$height</span>, nrow(spe):2, nrow(spe):2, <span class="attribute">col</span>=<span class="string">"red"</span>, <span class="attribute">cex</span>=0.5)</span><br><span class="line">plot(spe.ch.complete<span class="variable">$height</span>, nrow(spe):2, <span class="attribute">type</span>=<span class="string">"S"</span>, <span class="attribute">main</span>=<span class="string">"Fusion levels - Chord - Complete"</span>, <span class="attribute">ylab</span>=<span class="string">"k (number of clusters)"</span>, <span class="attribute">xlab</span>=<span class="string">"h (node height)"</span>, <span class="attribute">col</span>=<span class="string">"grey"</span>)</span><br><span class="line">text(spe.ch.complete<span class="variable">$height</span>, nrow(spe):2, nrow(spe):2, <span class="attribute">col</span>=<span class="string">"red"</span>, <span class="attribute">cex</span>=0.5)</span><br><span class="line">plot(spe.ch.UPGMA<span class="variable">$height</span>, nrow(spe):2, <span class="attribute">type</span>=<span class="string">"S"</span>, <span class="attribute">main</span>=<span class="string">"Fusion levels - Chord - UPGMA"</span>, <span class="attribute">ylab</span>=<span class="string">"k (number of clusters)"</span>, <span class="attribute">xlab</span>=<span class="string">"h (node height)"</span>, <span class="attribute">col</span>=<span class="string">"grey"</span>)</span><br><span class="line">text(spe.ch.UPGMA<span class="variable">$height</span>, nrow(spe):2, nrow(spe):2, <span class="attribute">col</span>=<span class="string">"red"</span>, <span class="attribute">cex</span>=0.5)</span><br><span class="line">plot(spe.ch.ward<span class="variable">$height</span>, nrow(spe):2, <span class="attribute">type</span>=<span class="string">"S"</span>, <span class="attribute">main</span>=<span class="string">"Fusion levels - Chord - Ward"</span>, <span class="attribute">ylab</span>=<span class="string">"k (number of clusters)"</span>, <span class="attribute">xlab</span>=<span class="string">"h (node height)"</span>, <span class="attribute">col</span>=<span class="string">"grey"</span>)</span><br><span class="line">text(spe.ch.ward<span class="variable">$height</span>, nrow(spe):2, nrow(spe):2, <span class="attribute">col</span>=<span class="string">"red"</span>, <span class="attribute">cex</span>=0.5)</span><br></pre></td></tr></table></figure>
<p>10.fusionlevelvalue<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/10.fusionlevelvalue.png" alt="10"></p>
<p>使用<code>cutree()函数</code>设定分类组的数量，并使用列联表比较分类组的差异。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">#裁剪聚类树以获得<span class="selector-tag">k</span>个分类组并使用列联表比较组之间的差异</span><br><span class="line"><span class="selector-tag">k</span> &lt;<span class="selector-tag">-</span> 4#从融合水平值图可以观察到分4组水平在所有图里有小的跳跃</span><br><span class="line"><span class="selector-tag">spebc</span><span class="selector-class">.single</span><span class="selector-class">.g</span> &lt;<span class="selector-tag">-</span> <span class="selector-tag">cutree</span>(<span class="selector-tag">spe</span><span class="selector-class">.ch</span><span class="selector-class">.single</span>, <span class="selector-tag">k</span>)#裁剪聚类树</span><br><span class="line"><span class="selector-tag">spebc</span><span class="selector-class">.complete</span><span class="selector-class">.g</span> &lt;<span class="selector-tag">-</span> <span class="selector-tag">cutree</span>(<span class="selector-tag">spe</span><span class="selector-class">.ch</span><span class="selector-class">.complete</span>, <span class="selector-tag">k</span>)</span><br><span class="line"><span class="selector-tag">spebc</span><span class="selector-class">.UPGMA</span><span class="selector-class">.g</span> &lt;<span class="selector-tag">-</span> <span class="selector-tag">cutree</span>(<span class="selector-tag">spe</span><span class="selector-class">.ch</span><span class="selector-class">.UPGMA</span>, <span class="selector-tag">k</span>)</span><br><span class="line"><span class="selector-tag">spebc</span><span class="selector-class">.ward</span><span class="selector-class">.g</span> &lt;<span class="selector-tag">-</span> <span class="selector-tag">cutree</span>(<span class="selector-tag">spe</span><span class="selector-class">.ch</span><span class="selector-class">.ward</span>, <span class="selector-tag">k</span>)</span><br><span class="line"><span class="selector-tag">table</span>(<span class="selector-tag">spebc</span><span class="selector-class">.single</span><span class="selector-class">.g</span>, <span class="selector-tag">spebc</span><span class="selector-class">.complete</span><span class="selector-class">.g</span>)#通过列联表比较分类结果。如果两个聚类的结果完全一样，那么这个列联表每行和每列只有一个非零数字，其他应该为0.</span><br><span class="line"><span class="selector-tag">table</span>(<span class="selector-tag">spebc</span><span class="selector-class">.single</span><span class="selector-class">.g</span>, <span class="selector-tag">spebc</span><span class="selector-class">.UPGMA</span><span class="selector-class">.g</span>)</span><br><span class="line"><span class="selector-tag">table</span>(<span class="selector-tag">spebc</span><span class="selector-class">.single</span><span class="selector-class">.g</span>, <span class="selector-tag">spebc</span><span class="selector-class">.ward</span><span class="selector-class">.g</span>)#解读：单连接聚类第二组有26个样方，这些样方在<span class="selector-tag">ward</span>聚类中被分散到4个组里。</span><br><span class="line"><span class="selector-tag">table</span>(<span class="selector-tag">spebc</span><span class="selector-class">.complete</span><span class="selector-class">.g</span>, <span class="selector-tag">spebc</span><span class="selector-class">.UPGMA</span><span class="selector-class">.g</span>)</span><br><span class="line"><span class="selector-tag">table</span>(<span class="selector-tag">spebc</span><span class="selector-class">.complete</span><span class="selector-class">.g</span>, <span class="selector-tag">spebc</span><span class="selector-class">.ward</span><span class="selector-class">.g</span>)</span><br><span class="line"><span class="selector-tag">table</span>(<span class="selector-tag">spebc</span><span class="selector-class">.UPGMA</span><span class="selector-class">.g</span>, <span class="selector-tag">spebc</span><span class="selector-class">.ward</span><span class="selector-class">.g</span>)</span><br></pre></td></tr></table></figure>
<h3 id="轮廓宽度图">轮廓宽度图</h3>
<p>轮廓宽度值越大，对象聚类越好，负值意味着该对象有可能被错分到当前聚类簇内。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">asw &lt;- numeric(nrow(spe))#创建指定长度的双精度向量，每个元素等于0.</span><br><span class="line"><span class="keyword">for</span> (k <span class="keyword">in</span> 2:(nrow(spe)-1)) &#123;</span><br><span class="line">	sil &lt;- silhouette(cutree(spe.ch.ward, <span class="attribute">k</span>=k), spe.ch)</span><br><span class="line">	asw[k] &lt;- summary(sil)<span class="variable">$avg</span>.width</span><br><span class="line">	&#125;</span><br><span class="line">k.best &lt;- which.max(asw)#选择最佳（最大）轮廓宽度值的分组数</span><br><span class="line">plot(1:nrow(spe), asw, <span class="attribute">type</span>=<span class="string">"h"</span>,</span><br><span class="line">  <span class="attribute">main</span>=<span class="string">"Silhouette-optimal number of clusters, Ward"</span>,</span><br><span class="line">	<span class="attribute">xlab</span>=<span class="string">"k (number of groups)"</span>, <span class="attribute">ylab</span>=<span class="string">"Average silhouette width"</span>)</span><br><span class="line">axis(1, k.best, paste(<span class="string">"optimum"</span>,k.best,<span class="attribute">sep</span>=<span class="string">"\n"</span>), <span class="attribute">col</span>=<span class="string">"red"</span>, <span class="attribute">font</span>=2,</span><br><span class="line">  col.<span class="attribute">axis</span>=<span class="string">"red"</span>)</span><br><span class="line">points(k.best, max(asw), <span class="attribute">pch</span>=16, <span class="attribute">col</span>=<span class="string">"red"</span>, <span class="attribute">cex</span>=1.5)</span><br><span class="line">cat(<span class="string">""</span>, <span class="string">"Silhouette-optimal number of clusters k ="</span>, k.best, <span class="string">"\n"</span>,</span><br><span class="line">	<span class="string">"with an average silhouette width of"</span>, max(asw), <span class="string">"\n"</span>)</span><br><span class="line"><span class="comment">####不一定推算出来的分组值就是适合的，还要考虑到生态学的意义等。</span></span><br></pre></td></tr></table></figure>
<p>11.sihouette<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/11.sihouette.png" alt="11"></p>
<h3 id="距离矩阵和代表分组的二元矩阵的比较">距离矩阵和代表分组的二元矩阵的比较</h3>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#编写计算代表分类水平的二元距离矩阵的函数</span></span><br><span class="line">grpdist &lt;- function(X)</span><br><span class="line">  &#123;</span><br><span class="line">  require(cluster)</span><br><span class="line">  gr &lt;- as.data.frame(as.factor(X))</span><br><span class="line">  distgr &lt;- daisy(gr, <span class="string">"gower"</span>)</span><br><span class="line">  distgr</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">#基于ward聚类结果运行该函数</span></span><br><span class="line">kt &lt;- data.frame(<span class="attribute">k</span>=1:nrow(spe), <span class="attribute">r</span>=0)</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> 2:(nrow(spe)-1)) &#123;</span><br><span class="line">	gr &lt;- cutree(spe.ch.ward, i)</span><br><span class="line">	distgr &lt;- grpdist(gr)</span><br><span class="line">	mt &lt;- cor(spe.ch, distgr, <span class="attribute">method</span>=<span class="string">"pearson"</span>)</span><br><span class="line">	kt[i,2] &lt;- mt</span><br><span class="line">&#125;</span><br><span class="line">kt</span><br><span class="line">k.best &lt;- which.max(kt<span class="variable">$r</span>)</span><br><span class="line"><span class="comment">#通过cluster程序包内plot.silhouette函数绘制分析图</span></span><br><span class="line">plot(kt<span class="variable">$k</span>, kt<span class="variable">$r</span>, <span class="attribute">type</span>=<span class="string">"h"</span>, <span class="attribute">main</span>=<span class="string">"Mantel-optimal number of clusters-Ward"</span>,</span><br><span class="line">	<span class="attribute">xlab</span>=<span class="string">"k (number of groups)"</span>, <span class="attribute">ylab</span>=<span class="string">"Pearson's correlation"</span>)</span><br><span class="line">axis(1, k.best, paste(<span class="string">"optimum"</span>, k.best, <span class="attribute">sep</span>=<span class="string">"\n"</span>), <span class="attribute">col</span>=<span class="string">"red"</span>, <span class="attribute">font</span>=2,</span><br><span class="line">	col.<span class="attribute">axis</span>=<span class="string">"red"</span>)</span><br><span class="line">points(k.best, max(kt<span class="variable">$r</span>), <span class="attribute">pch</span>=16, <span class="attribute">col</span>=<span class="string">"red"</span>, <span class="attribute">cex</span>=1.5)</span><br></pre></td></tr></table></figure>
<p>12.mantel<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/12.mantel.png" alt="12"></p>
<h3 id="最终分组的轮廓图">最终分组的轮廓图</h3>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">k &lt;- <span class="number">4</span></span><br><span class="line">cutg &lt;- cutree(spe.ch.ward, k=k)#裁剪聚类树,进行分组</span><br><span class="line">sil &lt;- silhouette(cutg, spe.ch)#计算轮廓宽度</span><br><span class="line">silo &lt;- sortSilhouette(sil)#轮廓宽度降序排列</span><br><span class="line">rownames(silo) &lt;- row.names(spe)[attr(silo,<span class="string">"iOrd"</span>)]#指定行名</span><br><span class="line">plot(silo, main=<span class="string">"Silhouette plot - Chord - Ward"</span>,</span><br><span class="line">	cex.names=<span class="number">0.8</span>, col=cutg+<span class="number">1</span>, nmax.lab=<span class="number">100</span>,border=<span class="string">"white"</span></span><br><span class="line">) #组<span class="number">1</span>和组<span class="number">3</span>最连贯，而组<span class="number">2</span>可能含有被错分的对象。</span><br></pre></td></tr></table></figure>
<p>13.finalsilhouette<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/13.finalsilhouette.png" alt="13"></p>
<h3 id="利用绘图工具修饰的最终聚类树">利用绘图工具修饰的最终聚类树</h3>
<p><code>reorder.hclust()</code>的作用是重新排列从函数hclust()获得的聚类树，使聚类树内对象的排列顺序与原始矩阵内对象的排列顺序尽可能一致。重排不影响聚类树的结构。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">spe.chwo &lt;- reorder.hclust(spe.ch.ward, spe.ch)</span><br><span class="line"><span class="comment">#hang=-1，设定聚类树的开端从0开始。</span></span><br><span class="line">plot(spe.chwo, <span class="attribute">hang</span>=-1, <span class="attribute">xlab</span>=<span class="string">"4 groups"</span>, <span class="attribute">sub</span>=<span class="string">""</span>, <span class="attribute">ylab</span>=<span class="string">"Height"</span>,</span><br><span class="line">	<span class="attribute">main</span>=<span class="string">"Chord - Ward (reordered)"</span>)</span><br><span class="line">rect.hclust(spe.chwo, <span class="attribute">k</span>=4)#为聚类簇加框</span><br><span class="line"></span><br><span class="line">source(<span class="string">"hcoplot.R"</span>)</span><br><span class="line">hcoplot(spe.ch.ward, spe.ch, <span class="attribute">k</span>=4)</span><br></pre></td></tr></table></figure>
<p>14.finaldendrogram0<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/14.finaldendrogram0.png" alt="14"><br>
15.finaldendrogram<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/15.finaldendrogram.png" alt="15"></p>
<h3 id="聚类结果空间分布图">聚类结果空间分布图</h3>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">plot(spa, <span class="attribute">asp</span>=1, <span class="attribute">type</span>=<span class="string">"n"</span>, <span class="attribute">main</span>=<span class="string">"Four Ward groups"</span>,</span><br><span class="line">	<span class="attribute">xlab</span>=<span class="string">"x coordinate (km)"</span>, <span class="attribute">ylab</span>=<span class="string">"y coordinate (km)"</span>)</span><br><span class="line">lines(spa, <span class="attribute">col</span>=<span class="string">"light blue"</span>)</span><br><span class="line">text(50, 10, <span class="string">"Upstream"</span>, <span class="attribute">cex</span>=1.2, <span class="attribute">col</span>=<span class="string">"red"</span>)</span><br><span class="line">text(15, 115, <span class="string">"Downstream"</span>, <span class="attribute">cex</span>=1.2, <span class="attribute">col</span>=<span class="string">"red"</span>)</span><br><span class="line"><span class="comment">####添加4组分类信息</span></span><br><span class="line">grw &lt;- spebc.ward.g</span><br><span class="line">k &lt;- length(levels(factor(grw)))#4</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> 1:k) &#123;</span><br><span class="line">   points(spa[<span class="attribute">grw</span>==i,1], spa[<span class="attribute">grw</span>==i,2], <span class="attribute">pch</span>=i+20, <span class="attribute">cex</span>=2, <span class="attribute">col</span>=i+1, <span class="attribute">bg</span>=i+1)</span><br><span class="line">   &#125;</span><br><span class="line">text(spa, row.names(spa), <span class="attribute">cex</span>=0.8, <span class="attribute">col</span>=<span class="string">"white"</span>, <span class="attribute">font</span>=2)</span><br><span class="line">legend(<span class="string">"bottomright"</span>, paste(<span class="string">"Group"</span>,1:k), pch=(1:k)+20, <span class="attribute">col</span>=2:(k+1),</span><br><span class="line">  pt.<span class="attribute">bg</span>=2:(k+1), pt.<span class="attribute">cex</span>=1.5, <span class="attribute">bty</span>=<span class="string">"n"</span>)</span><br></pre></td></tr></table></figure>
<p>16.spatialcluster<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/16.spatialcluster.png" alt="16"></p>
<h3 id="热图和排序的群落表">热图和排序的群落表</h3>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">dend &lt;- as.dendrogram(spe.chwo)</span><br><span class="line">heatmap(as.matrix(spe.ch), <span class="attribute">Rowv</span>=dend, <span class="attribute">symm</span>=<span class="literal">TRUE</span>, <span class="attribute">margin</span>=c(3,3), <span class="attribute">col</span>=colorRampPalette(c("black","red"))(30))#弦距离矩阵。Rowv表示对行进行重排；symm=T表示对称；margin表示行名和列名的边距。</span><br><span class="line"></span><br><span class="line"><span class="keyword">or</span> &lt;- vegemite(spe, spe.chwo)#物种按照在样方得分加权平均进行排列</span><br><span class="line">heatmap(t(spe[rev(<span class="keyword">or</span><span class="variable">$species</span>)]), <span class="attribute">Rowv</span>=NA, <span class="attribute">Colv</span>=dend,</span><br><span class="line">	<span class="attribute">col</span>=c("white", brewer.pal(5,<span class="string">"Greens"</span>)), <span class="attribute">scale</span>=<span class="string">"none"</span>, <span class="attribute">margin</span>=c(4,4),</span><br><span class="line">	<span class="attribute">ylab</span>=<span class="string">"Species (weighted averages of sites)"</span>, <span class="attribute">xlab</span>=<span class="string">"Sites"</span>)#scale="none"表示不进行缩放</span><br></pre></td></tr></table></figure>
<p>17.heatmapcluster<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/17.heatmapcluster.png" alt="17"><br>
18.pheatmap2<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/18.pheatmap2.png" alt="18"></p>
<h1>非层次聚类</h1>
<ul>
<li>分组的依据：尽量使组内的对象之间比组间对象之间的相似性更高。</li>
<li>两种非层次聚类方法： <strong>k-means partitioning（k-均值划分）</strong> 和 <strong>partitioning around medoids（围绕中心点划分,PAM）</strong>。</li>
<li>注意：<u>不同量纲的变量在进行非层次聚类之前应该进行标准化，因为方差的量纲等于变量量纲的平方，如果不标准化，方差无意义。</u></li>
</ul>
<h2 id="k-均值划分">k-均值划分</h2>
<p>k-means划分是一种线性方法，不适合含有很多零值的原始数据。但有一个解决办法，<strong>数据预转化</strong>。此处使用范数标准化的物种数据spe.norm进行演示。</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">spe<span class="selector-class">.kmeans</span> &lt;- kmeans(spe<span class="selector-class">.norm</span>, centers=<span class="number">4</span>, nstart=<span class="number">100</span>)#centers=k，结合上述研究，此处使用<span class="number">4</span>.</span><br><span class="line"><span class="function"><span class="title">table</span><span class="params">(spe.kmeans<span class="variable">$cluster</span>, spebc.ward.g)</span></span> #当前的结果与之前ward聚类结果比较</span><br></pre></td></tr></table></figure>
<p>kmeans()函数每次只能产生一个简单的预先设定组数的分组结果。但是多少组是最好的分类方案呢？可从以下两个指标进行评判：</p>
<ul>
<li>最大化Calinski-Harabasz指数</li>
<li>ssi（简单结构指数simple structure index）</li>
</ul>
<p>示例：k均值划分，2组到10组</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">spe.KM.cascade &lt;- cascadeKM(spe.norm, inf.<span class="attribute">gr</span>=2, sup.<span class="attribute">gr</span>=10, <span class="attribute">iter</span>=100,</span><br><span class="line">  <span class="attribute">criterion</span>=<span class="string">"ssi"</span>) #也可在criterion中选择<span class="string">"calinski"</span>方法</span><br><span class="line">plot(spe.KM.cascade, <span class="attribute">sortg</span>=<span class="literal">TRUE</span>,border="white")#sortg=T表示每个聚类簇内按照对象之间紧密程度重新排列对象。</span><br><span class="line">summary(spe.KM.cascade)</span><br><span class="line">spe.KM.cascade<span class="variable">$results</span>#最大ssi组数为最佳组数</span><br><span class="line">spe.KM.cascade<span class="variable">$partition</span>#不同分组数中各样方的归属</span><br><span class="line">spe[order(spe.kmeans<span class="variable">$cluster</span>),]#按照k-均值划分结果重新排列样方</span><br><span class="line">ord.KM &lt;- vegemite(spe, spe.kmeans<span class="variable">$cluster</span>)#使用函数vegemite()重新排列样方-物种矩阵</span><br><span class="line">spe[ord.KM<span class="variable">$sites</span>, ord.KM<span class="variable">$species</span>]</span><br></pre></td></tr></table></figure>
<p>19.kmeans.ssi<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/19.kmeans.ssi.png" alt="19"><br>
k-均值聚类结果空间分布图</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">plot(spa, <span class="attribute">asp</span>=1, <span class="attribute">type</span>=<span class="string">"n"</span>, <span class="attribute">main</span>=<span class="string">"Four k-means groups"</span>,</span><br><span class="line">	<span class="attribute">xlab</span>=<span class="string">"x coordinate (km)"</span>, <span class="attribute">ylab</span>=<span class="string">"y coordinate (km)"</span>)</span><br><span class="line">lines(spa, <span class="attribute">col</span>=<span class="string">"light blue"</span>)</span><br><span class="line">text(50, 10, <span class="string">"Upstream"</span>, <span class="attribute">cex</span>=1.2, <span class="attribute">col</span>=<span class="string">"red"</span>)</span><br><span class="line">text(25, 115, <span class="string">"Downstream"</span>, <span class="attribute">cex</span>=1.2, <span class="attribute">col</span>=<span class="string">"red"</span>)</span><br><span class="line">grKM &lt;- spe.kmeans<span class="variable">$cluster</span></span><br><span class="line">k &lt;- length(levels(factor(grKM)))</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> 1:k) &#123;</span><br><span class="line">   points(spa[<span class="attribute">grKM</span>==i,1], spa[<span class="attribute">grKM</span>==i,2], <span class="attribute">pch</span>=i+20, <span class="attribute">cex</span>=2, <span class="attribute">col</span>=i+1, <span class="attribute">bg</span>=i+1)</span><br><span class="line">   &#125;</span><br><span class="line">text(spa, row.names(spa), <span class="attribute">cex</span>=0.8, <span class="attribute">col</span>=<span class="string">"white"</span>, <span class="attribute">font</span>=2)</span><br><span class="line">legend(<span class="string">"bottomright"</span>, paste(<span class="string">"Group"</span>,1:k), pch=(1:k)+20, <span class="attribute">col</span>=2:(k+1),</span><br><span class="line">  pt.<span class="attribute">bg</span>=2:(k+1), pt.<span class="attribute">cex</span>=2, <span class="attribute">bty</span>=<span class="string">"n"</span>)</span><br></pre></td></tr></table></figure>
<p>22.spatial.kmeans<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/22.spatial.kmeans.png" alt="22"></p>
<h2 id="围绕中心点划分（PAM）">围绕中心点划分（PAM）</h2>
<ul>
<li>k-均值法师传统的最小二乘法，但PAM不是。pam的优势是可以输入原始数据和相异矩阵，并且允许通过轮廓宽度值确定最佳的分组数量。</li>
</ul>
<p>示例：利用轮廓图比较k-均值法和PAM法的分组结果<br>
基于弦距离矩阵进行计算</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">asw &lt;- numeric(nrow(spe))</span><br><span class="line"><span class="comment">#循环计算2到28组分类数下平均轮廓宽度（asw）</span></span><br><span class="line"><span class="keyword">for</span> (k <span class="keyword">in</span> 2:(nrow(spe)-1))</span><br><span class="line">	asw[k] &lt;- pam(spe.ch, k, <span class="attribute">diss</span>=<span class="literal">TRUE</span>)$silinfo$avg.width #<span class="attribute">diss</span>=<span class="literal">TRUE</span>表示是相异矩阵</span><br><span class="line">k.best &lt;- which.max(asw)</span><br><span class="line">cat(<span class="string">""</span>, <span class="string">"Silhouette-optimal number of clusters k ="</span>, k.best, <span class="string">"\n"</span>,</span><br><span class="line">	<span class="string">"with an average silhouette width of"</span>, max(asw), <span class="string">"\n"</span>)</span><br><span class="line">plot(1:nrow(spe), asw, <span class="attribute">type</span>=<span class="string">"h"</span>, <span class="attribute">main</span>=<span class="string">"Choice of the number of clusters"</span>,</span><br><span class="line">	<span class="attribute">xlab</span>=<span class="string">"k (number of groups)"</span>, <span class="attribute">ylab</span>=<span class="string">"Average silhouette width"</span>)</span><br><span class="line">axis(1, k.best, paste(<span class="string">"optimum"</span>,k.best,<span class="attribute">sep</span>=<span class="string">"\n"</span>), <span class="attribute">col</span>=<span class="string">"red"</span>, <span class="attribute">font</span>=2,</span><br><span class="line">	col.<span class="attribute">axis</span>=<span class="string">"red"</span>)</span><br><span class="line">points(k.best, max(asw), <span class="attribute">pch</span>=16, <span class="attribute">col</span>=<span class="string">"red"</span>, <span class="attribute">cex</span>=1.5)</span><br></pre></td></tr></table></figure>
<p>20.pam<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/20.pam.png" alt="20"><br>
可见k=2时，PAM具有最佳方案。尽管如此，下面我们还是使用k=4进行演示。</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.pam</span> &lt;- pam(spe<span class="selector-class">.ch</span>, k=<span class="number">4</span>, diss=TRUE)</span><br><span class="line"><span class="function"><span class="title">summary</span><span class="params">(spe.ch.pam)</span></span></span><br><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.pam</span><span class="selector-class">.g</span> &lt;- spe<span class="selector-class">.ch</span>.pam<span class="variable">$clustering</span>#裁剪的分组</span><br><span class="line">spe<span class="selector-class">.ch</span>.pam<span class="variable">$silinfo</span><span class="variable">$widths</span>#asw值</span><br><span class="line">#将当前的结果与之前的ward聚类和k-均值划分进行比较</span><br><span class="line"><span class="function"><span class="title">table</span><span class="params">(spe.ch.pam.g, spebc.ward.g)</span></span></span><br><span class="line"><span class="function"><span class="title">table</span><span class="params">(spe.ch.pam.g, spe.kmeans<span class="variable">$cluster</span>)</span></span></span><br><span class="line">#绘制k-均值法和PAM法的轮廓宽度图</span><br><span class="line"><span class="function"><span class="title">par</span><span class="params">(mfrow=c(<span class="number">1</span>,<span class="number">2</span>)</span></span>)</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(silhouette(spe.kmeans<span class="variable">$cluster</span>,spe.ch)</span></span>, main=<span class="string">"Silhouette plot - k-means"</span>,</span><br><span class="line">  cex.names=<span class="number">0.8</span>, col= spe.kmeans<span class="variable">$cluster</span>+<span class="number">1</span>,<span class="attribute">border</span>=<span class="string">"white"</span>)</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(silhouette(spe.ch.pam)</span></span>, main=<span class="string">"Silhouette plot - PAM"</span>, cex.names=<span class="number">0.8</span>,</span><br><span class="line">	col=spe<span class="selector-class">.ch</span>.pam<span class="variable">$silinfo</span><span class="variable">$widths</span>+<span class="number">1</span>,<span class="attribute">border</span>=<span class="string">"white"</span>)#哪个更好？</span><br></pre></td></tr></table></figure>
<p>21.kmeanspam<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/21.kmeanspam.png" alt="21"><br>
可见，即使是目标相同且属于同一大类的两种方法，结果也可能完全不同。用户应该根据哪种方法的结果能够提供更多有用的信息，或能更好地被环境变量解释来选择合适的方法。</p>
<h1>用环境数据进行比较</h1>
<p>上述均是基于物种多度数据进行的演示，也可以用于其他类型的数据，特别是环境数据。</p>
<h2 id="用外部数据进行类型比较（方差分析途径）">用外部数据进行类型比较（方差分析途径）</h2>
<ul>
<li>作为响应数据，可以用 <strong>判别式分析</strong>；</li>
<li>作为解释变量（因子），可以进行 <strong>方差分析</strong>，了解解释变量在各组间是否有显著差异。</li>
</ul>
<p>示例：基于k-均值划分结果（分4组）的样方聚类簇与4个环境变量的关系</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">attach(env) #避免对象名称的重复输入</span><br><span class="line">par(<span class="attribute">mfrow</span>=c(2,2))</span><br><span class="line"><span class="comment">#定量环境变量箱线图</span></span><br><span class="line">boxplot(sqrt(alt) ~ spe.kmeans<span class="variable">$cluster</span>, <span class="attribute">main</span>=<span class="string">"Alititude"</span>, <span class="attribute">las</span>=1,</span><br><span class="line">  <span class="attribute">ylab</span>=<span class="string">"sqrt(alt)"</span>, <span class="attribute">col</span>=2:5, <span class="attribute">varwidth</span>=<span class="literal">TRUE</span>)</span><br><span class="line">boxplot(log(pen) ~ spe.kmeans<span class="variable">$cluster</span>, <span class="attribute">main</span>=<span class="string">"Pen"</span>, <span class="attribute">las</span>=1,</span><br><span class="line">  <span class="attribute">ylab</span>=<span class="string">"log(pen)"</span>, <span class="attribute">col</span>=2:5, <span class="attribute">varwidth</span>=<span class="literal">TRUE</span>)</span><br><span class="line">boxplot(oxy ~ spe.kmeans<span class="variable">$cluster</span>, <span class="attribute">main</span>=<span class="string">"Oxygen"</span>, <span class="attribute">las</span>=1,</span><br><span class="line">  <span class="attribute">ylab</span>=<span class="string">"oxy"</span>, <span class="attribute">col</span>=2:5, <span class="attribute">varwidth</span>=<span class="literal">TRUE</span>)</span><br><span class="line">boxplot(sqrt(amm) ~ spe.kmeans<span class="variable">$cluster</span>, <span class="attribute">main</span>=<span class="string">"Ammonium"</span>, <span class="attribute">las</span>=1,</span><br><span class="line">  <span class="attribute">ylab</span>=<span class="string">"sqrt(amm)"</span>, <span class="attribute">col</span>=2:5, <span class="attribute">varwidth</span>=<span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment">#检验方差分析的假设</span></span><br><span class="line"><span class="comment">##检验残差的正态性(P&gt;0.05则满足正态分布)</span></span><br><span class="line">shapiro.test(resid(lm(sqrt(alt) ~ as.factor(spe.kmeans<span class="variable">$cluster</span>))))</span><br><span class="line">shapiro.test(resid(lm(log(pen) ~ as.factor(spe.kmeans<span class="variable">$cluster</span>))))</span><br><span class="line">shapiro.test(resid(lm(oxy ~ as.factor(spe.kmeans<span class="variable">$cluster</span>))))</span><br><span class="line">shapiro.test(resid(lm(sqrt(amm) ~ as.factor(spe.kmeans<span class="variable">$cluster</span>))))</span><br><span class="line"><span class="comment">##检验方差齐性(P&gt;0.05则满足方差齐性)</span></span><br><span class="line">bartlett.test(sqrt(alt), as.factor(spe.kmeans<span class="variable">$cluster</span>))#不满足</span><br><span class="line">bartlett.test(log(pen), as.factor(spe.kmeans<span class="variable">$cluster</span>))</span><br><span class="line">bartlett.test(oxy, as.factor(spe.kmeans<span class="variable">$cluster</span>))</span><br><span class="line">bartlett.test(sqrt(amm), as.factor(spe.kmeans<span class="variable">$cluster</span>))</span><br><span class="line"><span class="comment">#显著性检验：aov比较多组（参数）；kruskal.test比较多组（非参数）。</span></span><br><span class="line">kruskal.test(alt ~ as.factor(spe.kmeans<span class="variable">$cluster</span>))#P&lt;0.05则差异显著，下同。</span><br><span class="line">summary(aov(log(pen) ~ as.factor(spe.kmeans<span class="variable">$cluster</span>)))</span><br><span class="line">summary(aov(oxy ~ as.factor(spe.kmeans<span class="variable">$cluster</span>)))</span><br><span class="line">summary(aov(sqrt(amm) ~ as.factor(spe.kmeans<span class="variable">$cluster</span>)))</span><br><span class="line">detach(env)</span><br></pre></td></tr></table></figure>
<p>23.envboxplot<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/23.envboxplot.png" alt="23"></p>
<h2 id="双类型比较（列联表分析）">双类型比较（列联表分析）</h2>
<ul>
<li>直接比较分别基于物种数据和环境数据的聚类结果</li>
</ul>
<p>示例</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">env2 &lt;- env[,-1]</span><br><span class="line">env.<span class="keyword">de</span> &lt;- vegdist(scale(env2), <span class="string">"euc"</span>)</span><br><span class="line">env.kmeans &lt;- kmeans(env.<span class="keyword">de</span>, centers=4, nstart=100)</span><br><span class="line">env.KM.4 &lt;- env.kmeans<span class="variable">$cluster</span></span><br><span class="line">#比较两种聚类的结果</span><br><span class="line"><span class="keyword">table</span>(<span class="keyword">as</span>.<span class="keyword">factor</span>(spe.kmeans<span class="variable">$cluster</span>), <span class="keyword">as</span>.<span class="keyword">factor</span>(env.kmeans<span class="variable">$cluster</span>))</span><br><span class="line">#用卡方检验分析两种聚类之间的差异</span><br><span class="line">chisq.<span class="keyword">test</span>(<span class="keyword">as</span>.<span class="keyword">factor</span>(spe.kmeans<span class="variable">$cluster</span>), <span class="keyword">as</span>.<span class="keyword">factor</span>(env.kmeans<span class="variable">$cluster</span>))</span><br><span class="line">#改用置换的方法(蒙特卡洛检验）进行卡方检验分析</span><br><span class="line">chisq.<span class="keyword">test</span>(<span class="keyword">as</span>.<span class="keyword">factor</span>(spe.kmeans<span class="variable">$cluster</span>), <span class="keyword">as</span>.<span class="keyword">factor</span>(env.kmeans<span class="variable">$cluster</span>),</span><br><span class="line">	<span class="keyword">simulate</span>.p.value=TRUE)#<span class="keyword">simulate</span>.p.value, a logical indicating whether to compute p-values <span class="keyword">by</span> Monte Carlo simulation.</span><br></pre></td></tr></table></figure>
<h1>物种集合</h1>
<p>识别数据集内的物种关联</p>
<h2 id="组内数据简单统计：平均多度">组内数据简单统计：平均多度</h2>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">#k-均值样方聚类平均多度</span><br><span class="line">groups &lt;- <span class="keyword">as</span>.<span class="keyword">factor</span>(spe.kmeans<span class="variable">$cluster</span>)</span><br><span class="line">spe.<span class="keyword">means</span> &lt;- <span class="built_in">matrix</span>(0, ncol(spe), <span class="built_in">length</span>(<span class="keyword">levels</span>(groups)))#<span class="built_in">matrix</span>(data,nrow,ncol,...)</span><br><span class="line">row.names(spe.<span class="keyword">means</span>) &lt;- colnames(spe)</span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> 1:ncol(spe)) &#123;</span><br><span class="line">  spe.<span class="keyword">means</span>[i,] &lt;- tapply(spe[,i], spe.kmeans<span class="variable">$cluster</span>, <span class="keyword">mean</span>)</span><br><span class="line">  &#125;</span><br><span class="line">#每组的物种平均多度</span><br><span class="line">group1 &lt;- <span class="built_in">round</span>(<span class="keyword">sort</span>(spe.<span class="keyword">means</span>[,1], decreasing=TRUE), 2)</span><br><span class="line">group2 &lt;- <span class="built_in">round</span>(<span class="keyword">sort</span>(spe.<span class="keyword">means</span>[,2], decreasing=TRUE), 2)</span><br><span class="line">group3 &lt;- <span class="built_in">round</span>(<span class="keyword">sort</span>(spe.<span class="keyword">means</span>[,3], decreasing=TRUE), 2)</span><br><span class="line">group4 &lt;- <span class="built_in">round</span>(<span class="keyword">sort</span>(spe.<span class="keyword">means</span>[,4], decreasing=TRUE), 2)</span><br><span class="line">#显示多度大于平均值的物种</span><br><span class="line">group1.domin &lt;- <span class="keyword">which</span>(group1&gt;<span class="keyword">mean</span>(group1))</span><br><span class="line">group1.domin #...对其他组进行相同的分析</span><br></pre></td></tr></table></figure>
<h2 id="Kendall共性系数（W）">Kendall共性系数（W）</h2>
<p>不适用于物种有-无数据<br>
“当判断的数量[=物种数]很少时，Kendall共性检验最适合。”<br>
示例</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">#提取多度最大的物种（选择前<span class="number">20</span>种）</span><br><span class="line"><span class="keyword">sp</span>.sum &lt;- apply(<span class="keyword">spe</span>, <span class="number">2</span>, sum)</span><br><span class="line"><span class="keyword">spe</span>.sorted &lt;- <span class="keyword">spe</span>[,order(<span class="keyword">sp</span>.sum, decreasing=TRUE)]</span><br><span class="line"><span class="keyword">spe</span>.small &lt;- <span class="keyword">spe</span>.sorted[,<span class="number">1</span>:<span class="number">20</span>]</span><br><span class="line">#物种数据转化和矩阵转置</span><br><span class="line"><span class="keyword">spe</span>.small.hel &lt;- decostand(<span class="keyword">spe</span>.small, <span class="string">"hellinger"</span>)</span><br><span class="line"><span class="keyword">spe</span>.small.std &lt;- decostand(<span class="keyword">spe</span>.small.hel, <span class="string">"standardize"</span>)</span><br><span class="line"><span class="keyword">spe</span>.small.t &lt;- t(<span class="keyword">spe</span>.small.std)</span><br><span class="line">#物种<span class="keyword">k</span>-均值划分</span><br><span class="line"><span class="keyword">spe</span>.t.kmeans.casc &lt;- cascadeKM(<span class="keyword">spe</span>.small.t, inf.<span class="keyword">gr</span>=<span class="number">2</span>, sup.<span class="keyword">gr</span>=<span class="number">8</span>,</span><br><span class="line">	iter=<span class="number">100</span>, criterion=<span class="string">"calinski"</span>)</span><br><span class="line">plot(<span class="keyword">spe</span>.t.kmeans.casc, sortg=TRUE)#结果显示划分为<span class="number">2</span>组最合适</span><br><span class="line">#选择<span class="number">2</span>组的划分</span><br><span class="line">clusters &lt;- <span class="keyword">spe</span>.t.kmeans.casc$partition[,<span class="number">1</span>]</span><br><span class="line">clusters</span><br><span class="line">#对这两组进行全局的Kendall W检验，识别所有物种组是否显著关联</span><br><span class="line"><span class="keyword">spe</span>.kendall.<span class="keyword">global</span> &lt;- kendall.<span class="keyword">global</span>(<span class="keyword">spe</span>.small.hel, clusters)</span><br><span class="line"><span class="keyword">spe</span>.kendall.global#w，kendall共性系数；corrected prob.perm，显著性</span><br><span class="line">#若显著关联，则对每个组物种进行后验概率检验，验证同一组内的物种是否具有共性。</span><br><span class="line"><span class="keyword">spe</span>.kendall.post &lt;- kendall.post(<span class="keyword">spe</span>.small.hel, clusters, nperm=<span class="number">9999</span>)</span><br><span class="line"><span class="keyword">spe</span>.kendall.post#p&gt;<span class="number">0.05</span>，要排除；spearman.mean，负值要排除，如果负值较多，表明当前的分组可能需要细分。</span><br></pre></td></tr></table></figure>
<p>24.kmeansclusters<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/24.kmeansclusters.png" alt="24"></p>
<h2 id="基于有-无数据的物种集合">基于有-无数据的物种集合</h2>
<p>计算R-模式Jaccard系数的a组分（物种间共发生的测度）并通过Raup和Crick系数置换检验评估a的概率。此时p值可以当作距离：共发生度越高的两个物种，其p值越小。</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">#使用自编的test.a()计算</span><br><span class="line"><span class="function"><span class="title">source</span><span class="params">(<span class="string">"test.a.R"</span>)</span></span>                </span><br><span class="line">spe<span class="selector-class">.pa</span> &lt;- decostand(spe,<span class="string">"pa"</span>)#将物种数据转化为有-无数据</span><br><span class="line">res &lt;- test.a(spe<span class="selector-class">.pa</span>, nperm=<span class="number">99999</span>)#设定置换检验中足够的置换次数以获得多重检验的显著水平。</span><br><span class="line"><span class="function"><span class="title">summary</span><span class="params">(res)</span></span>#输出的结果是res<span class="variable">$p</span><span class="selector-class">.a</span>.dist包含一个p值的矩阵。下一步计算向量化的p值矩阵的Holm校正数。</span><br><span class="line">res<span class="selector-class">.p</span><span class="selector-class">.vec</span> &lt;- as.vector(res<span class="variable">$p</span><span class="selector-class">.a</span>.dist)</span><br><span class="line">adjust<span class="selector-class">.res</span> &lt;- <span class="selector-tag">p</span>.adjust(res<span class="selector-class">.p</span><span class="selector-class">.vec</span>,method=<span class="string">"holm"</span>)</span><br><span class="line">#不明白怎么出来的<span class="number">0.00018</span>？？？？</span><br><span class="line">res<span class="selector-class">.pa</span><span class="selector-class">.dist</span> &lt;- res<span class="variable">$p</span><span class="selector-class">.a</span>.dist</span><br><span class="line">res<span class="selector-class">.pa</span><span class="selector-class">.dist</span>[res<span class="selector-class">.pa</span>.dist&gt;<span class="number">0.00018</span>] &lt;- <span class="number">1</span></span><br><span class="line">#由p值构成的相异矩阵可以用热图表示</span><br><span class="line"><span class="function"><span class="title">source</span><span class="params">(<span class="string">"coldiss.R"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">coldiss</span><span class="params">(res.pa.dist, nc=<span class="number">10</span>, byrank=TRUE, diag=TRUE)</span></span></span><br><span class="line">#运行模糊非层次聚类(fanny())，尝试使用多k值获得最佳的分组</span><br><span class="line">res<span class="selector-class">.pa</span><span class="selector-class">.fuz</span> &lt;- fanny(res<span class="selector-class">.pa</span><span class="selector-class">.dist</span>, k=<span class="number">5</span>, memb.exp=<span class="number">1.5</span>)</span><br><span class="line"><span class="function"><span class="title">summary</span><span class="params">(res.pa.fuz)</span></span></span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(silhouette(res.pa.fuz)</span></span>, main=<span class="string">"Silhouette plot - Fuzzy clustering"</span>, cex.names=<span class="number">0.8</span>, col=res<span class="selector-class">.pa</span>.fuz<span class="variable">$silinfo</span><span class="variable">$widths</span>+<span class="number">1</span>)</span><br><span class="line">res<span class="selector-class">.pa</span>.fuz<span class="variable">$silinfo</span> #轮廓信息，包含一个聚类簇中最可能的成员(<span class="string">"cluster"</span>)、最近邻体聚类簇(<span class="string">"neighbor"</span>)和轮廓宽度值(<span class="string">"sil_width"</span>).</span><br></pre></td></tr></table></figure>
<h2 id="IndVal：物种指示值">IndVal：物种指示值</h2>
<p>先基于非物种数据（例如环境数据）对样方进行聚类，然后再找指示物种。此时，指示物种才是真正具有指示意义的指示种，即该物种与该样方组所在的生态环境关系最为密切。<br>
指示值的后验统计显著性（即观察值和随机值的比较）可以通过置换检验进行评估。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#依据das（离源头距离）环境变量将样方分为4组</span></span><br><span class="line">das.D1 &lt;- dist(data.frame(<span class="attribute">das</span>=env[,1], row.<span class="attribute">names</span>=rownames(env)))</span><br><span class="line">dasD1.kmeans &lt;- kmeans(das.D1, <span class="attribute">centers</span>=4, <span class="attribute">nstart</span>=100)</span><br><span class="line">dasD1.kmeans<span class="variable">$cluster</span></span><br><span class="line"><span class="comment">#样方组的指示种</span></span><br><span class="line">(iva &lt;- indval(spe, dasD1.kmeans<span class="variable">$cluster</span>) )#relfrq：物种在每个组的相对频度；relabu：物种在组间的相对多度；indval：每个物种的指示值</span><br><span class="line"><span class="comment">#下面两项内容将从indval表格内提取出来（含有最高指示值的组）和置换检验的结果。</span></span><br><span class="line"><span class="comment">#显著指示物种的表格</span></span><br><span class="line">gr &lt;- iva<span class="variable">$maxcls</span>[iva<span class="variable">$pval</span>&lt;=0.05]#maxcls表示具有最大指示值的分类</span><br><span class="line">iv &lt;- iva<span class="variable">$indcls</span>[iva<span class="variable">$pval</span>&lt;=0.05]#indcls表示每个物种在最大分类中的指示值</span><br><span class="line">pv &lt;- iva<span class="variable">$pval</span>[iva<span class="variable">$pval</span>&lt;=0.05]#pval表示获得观察到的指定迭代中高指示值的可能性</span><br><span class="line">fr &lt;- apply(spe&gt;0, 2, sum)[iva<span class="variable">$pval</span>&lt;=0.05]#计算每个物种出现的频数</span><br><span class="line">fidg &lt;- data.frame(<span class="attribute">group</span>=gr, <span class="attribute">indval</span>=iv, <span class="attribute">pvalue</span>=pv, <span class="attribute">freq</span>=fr)</span><br><span class="line">fidg &lt;- fidg[order(fidg<span class="variable">$group</span>, -fidg<span class="variable">$indval</span>),]#fidg<span class="variable">$group</span>升序，fidg<span class="variable">$indval</span>降序。</span><br><span class="line">fidg</span><br><span class="line"><span class="comment">#将结果输出为csv文件</span></span><br><span class="line">write.csv(fidg, <span class="string">"IndVal-das.csv"</span>)</span><br></pre></td></tr></table></figure>
<h1>多元回归树：约束聚类</h1>
<h2 id="引言-2">引言</h2>
<p>多元回归树（multivariate regression tree, MRT）目的：在定量或分类解释变量的控制下递归划分一个定量变量。<br>
在约束排序中，选择解释变量的依据是依照解释能力的大小，而MRT选择解释变量是侧重预测能力的大小。</p>
<h2 id="计算（原理）">计算（原理）</h2>
<p>MRT的计算由两个一起运行的程序组成：①数据约束划分；②分组结果交叉验证。</p>
<h3 id="数据约束划分">数据约束划分</h3>
<p>1.对于每一个解释变量，将样方分为所有可能的两组情况：①对于一个定量解释变量，按照变量值大小先对样方进行排列，然后在第1个、第2个…第n-1个间隔点将样方划分为n-1种可能的两组分组情况；②对于分类变量，将变量所有水平随机组合成所有可能的两组，在每种情况下，样方也跟随变量水平的组合分为两组。两种情况，选择 <strong>最小距离平方和的分组情况</strong>，并确认此分组情况所对应的解释变量的分割点或分类变量的水平组合。<br>
2.继续按照上述方法划分亚组。<br>
3.直到每个对象成为独立的一组位置。我们一般需要的是 <strong>大小（组数）合适的树</strong>。如何确定大小合适的树，<strong>交叉验证</strong>。<br>
4.<strong>相对误差（RE）</strong> 是回归树不能解释的方差比例。如果没有 <strong>交叉验证</strong>，我们应该保留 <strong>最小RE</strong> 的回归树，即 <strong>保留最高R<SUP>2</SUP>的回归树</strong>。然而R<SUP>2</SUP>最高的回归树解释能力最好，不代表预测能力最好。</p>
<h3 id="交叉验证和回归树的裁剪">交叉验证和回归树的裁剪</h3>
<p>如何对回归树进行裁剪（即保留最佳分类方案）？从预测的角度，可以利用原始数据的一部分构建一棵树，剩下另一部分验证训练组构建的树的准确性。<br>
<strong>预测误差的测度称为CVRE。CVRE为0是最完美的预测，接近1是最差的预测。</strong></p>
<h2 id="使用mvpart和MVPARTwrap程序包运行MRT">使用mvpart和MVPARTwrap程序包运行MRT</h2>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">library(mvpart)</span><br><span class="line">spe.ch.mvpart &lt;- mvpart(data.matrix(spe.norm) ~ ., env, <span class="attribute">margin</span>=0.08, <span class="attribute">cp</span>=0,</span><br><span class="line">	<span class="attribute">xv</span>=<span class="string">"pick"</span>, <span class="attribute">xval</span>=nrow(spe), <span class="attribute">xvmult</span>=100, <span class="attribute">which</span>=4)#人机交互；交叉验证分组为29,迭代次数100，分为4组。</span><br><span class="line">summary(spe.ch.mvpart)</span><br><span class="line">printcp(spe.ch.mvpart)</span><br><span class="line"><span class="comment">#橘红色的水平线指示最小CVRE（大红点）的1个标准差范围。</span></span><br><span class="line"><span class="comment">#可以①选择在1个最小CRVE的标准误差范围内分组最少的分类树，即橙色点；</span></span><br><span class="line"><span class="comment">#或②选择最小CRVE，即红色点。</span></span><br><span class="line"><span class="comment">#从图中可见，两者相差不大。</span></span><br></pre></td></tr></table></figure>
<p>25.CVRE<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/25.CVRE.jpg" alt="25"><br>
交互模式下，在想要的分组组数的地方惦记鼠标左键，会生成一个回归树。最下面显示的是物种多度分布条形图、RE和所含样方数目。<br>
26.MRT<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/26.MRT.png" alt="26"><br>
下面的代码可以查看残差，并检索每个节点的不同对象并查看每个节点的特征：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">par</span><span class="params">(mfrow=c(<span class="number">1</span>,<span class="number">2</span>)</span></span>)</span><br><span class="line"><span class="function"><span class="title">hist</span><span class="params">(residuals(spe.ch.mvpart)</span></span>, col=<span class="string">"grey"</span>) #残差</span><br><span class="line"><span class="function"><span class="title">plot</span><span class="params">(predict(spe.ch.mvpart)</span></span>, apply(residuals(spe<span class="selector-class">.ch</span>.mvpart),<span class="number">1</span>,mean),</span><br><span class="line">	main=<span class="string">"Residuals vs Predicted"</span>)</span><br><span class="line"><span class="function"><span class="title">abline</span><span class="params">(h=<span class="number">0</span>, lty=<span class="number">3</span>, col=<span class="string">"grey"</span>)</span></span></span><br><span class="line">spe<span class="selector-class">.ch</span>.mvpart<span class="variable">$where</span>#组的名称</span><br><span class="line">(groups<span class="selector-class">.mrt</span> &lt;- levels(as.factor(spe<span class="selector-class">.ch</span>.mvpart<span class="variable">$where</span>)))#识别组的名称</span><br><span class="line">spe<span class="selector-class">.norm</span>[which(spe<span class="selector-class">.ch</span>.mvpart<span class="variable">$where</span>==groups<span class="selector-class">.mrt</span>[<span class="number">1</span>]),]#第一片叶子的物种鱼类组成</span><br><span class="line">env[which(spe<span class="selector-class">.ch</span>.mvpart<span class="variable">$where</span>==groups<span class="selector-class">.mrt</span>[<span class="number">1</span>]),]#第一片叶子的环境变量组成</span><br><span class="line">#叶子的鱼类物种组成表格和饼图</span><br><span class="line">leaf<span class="selector-class">.sum</span> &lt;- matrix(<span class="number">0</span>, length(groups.mrt), ncol(spe))</span><br><span class="line"><span class="function"><span class="title">colnames</span><span class="params">(leaf.sum)</span></span> &lt;- colnames(spe)</span><br><span class="line"><span class="function"><span class="title">for</span><span class="params">(i in <span class="number">1</span>:length(groups.mrt)</span></span>)&#123;</span><br><span class="line">  leaf<span class="selector-class">.sum</span>[<span class="selector-tag">i</span>,] &lt;- apply(spe<span class="selector-class">.norm</span>[which(spe<span class="selector-class">.ch</span>.mvpart<span class="variable">$where</span>==groups<span class="selector-class">.mrt</span>[i]),],</span><br><span class="line">    <span class="number">2</span>, sum)</span><br><span class="line">&#125;</span><br><span class="line">leaf.sum</span><br><span class="line"><span class="function"><span class="title">par</span><span class="params">(mfrow=c(<span class="number">2</span>,<span class="number">2</span>)</span></span>)</span><br><span class="line"><span class="function"><span class="title">for</span><span class="params">(i in <span class="number">1</span>:length(groups.mrt)</span></span>)&#123;</span><br><span class="line">	pie(which(leaf<span class="selector-class">.sum</span>[<span class="selector-tag">i</span>,]&gt;<span class="number">0</span>), radius=<span class="number">1</span>, main=c(<span class="string">"leaf #"</span>, groups<span class="selector-class">.mrt</span>[i]))</span><br><span class="line">&#125;</span><br><span class="line">#从mvpart()函数获得的结果对象无法提取更多的数量信息，所以开发了附加程序包：MVPARTwrap。</span><br><span class="line">##从mvpart()函数获得的结果对象中提取MRT结果</span><br><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.mvpart</span><span class="selector-class">.wrap</span> &lt;- MRT(spe<span class="selector-class">.ch</span><span class="selector-class">.mvpart</span>, percent=<span class="number">10</span>, species=colnames(spe))</span><br><span class="line"><span class="function"><span class="title">summary</span><span class="params">(spe.ch.mvpart.wrap)</span></span> #可查看判别物种（Discriminant species）。</span><br></pre></td></tr></table></figure>
<h2 id="组合MRT和IndVal">组合MRT和IndVal</h2>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">#在MRT的结果中寻找指示种</span><br><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.MRT</span><span class="selector-class">.indval</span> &lt;- indval(spe<span class="selector-class">.norm</span>, spe<span class="selector-class">.ch</span>.mvpart<span class="variable">$where</span>)</span><br><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.MRT</span>.indval<span class="variable">$pval</span> #概率</span><br><span class="line">#为每个显著的物种寻找最高指示值的叶子</span><br><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.MRT</span>.indval<span class="variable">$maxcls</span>[which(spe<span class="selector-class">.ch</span><span class="selector-class">.MRT</span>.indval<span class="variable">$pval</span>&lt;=<span class="number">0.05</span>)]</span><br><span class="line">#每个显著的物种在最高指示值的叶子中的指示值</span><br><span class="line">spe<span class="selector-class">.ch</span><span class="selector-class">.MRT</span>.indval<span class="variable">$indcls</span>[which(spe<span class="selector-class">.ch</span><span class="selector-class">.MRT</span>.indval<span class="variable">$pval</span>&lt;=<span class="number">0.05</span>)]</span><br></pre></td></tr></table></figure>
<h2 id="作为时序性（chronological）聚类方法的MRT">作为时序性（chronological）聚类方法的MRT</h2>
<p>在某些情况下，数据本身具有空间和时间系列属性，此时对数据进行分组时需要考虑数据之间的连续性。<br>
利用MRT解决时间和空间序列问题很简单：将空间变量（或时间变量）作为唯一的解释变量进行MRT分析。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#MRT作为空间和时间系列约束聚类方法</span></span><br><span class="line">spe.ch.seq &lt;- mvpart(as.matrix(spe) ~ das, env, <span class="attribute">cp</span>=0, <span class="attribute">xv</span>=<span class="string">"pick"</span>, <span class="attribute">margin</span>=0.08,</span><br><span class="line">  <span class="attribute">xval</span>=nrow(spe), <span class="attribute">xvmult</span>=100, <span class="attribute">which</span>=4)</span><br><span class="line"><span class="comment">#此时可以点击所期望的分组组数</span></span><br><span class="line">summary(spe.ch.seq)</span><br><span class="line"><span class="comment">#组的组成（终端节点的标识）</span></span><br><span class="line">(gr &lt;- spe.ch.seq<span class="variable">$where</span>)</span><br><span class="line"><span class="comment">#重新编排聚类簇的编号</span></span><br><span class="line">aa &lt;- 1</span><br><span class="line">gr2 &lt;- rep(1,length(gr))</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> 2:length(gr)) &#123;</span><br><span class="line">  <span class="keyword">if</span> (gr[i]!=gr[i-1]) aa &lt;- aa+1</span><br><span class="line">  gr2[i] &lt;- aa</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#在Doubs河地图上标注样方所属的聚类簇</span></span><br><span class="line">plot(spa, <span class="attribute">asp</span>=1, <span class="attribute">type</span>=<span class="string">"n"</span>, <span class="attribute">main</span>=<span class="string">"MRT groups"</span>,</span><br><span class="line">	<span class="attribute">xlab</span>=<span class="string">"x coordinate (km)"</span>, <span class="attribute">ylab</span>=<span class="string">"y coordinate (km)"</span>)</span><br><span class="line">lines(spa, <span class="attribute">col</span>=<span class="string">"light blue"</span>)</span><br><span class="line">text(40, 15, <span class="string">"Upstream"</span>, <span class="attribute">cex</span>=1.2, <span class="attribute">col</span>=<span class="string">"red"</span>)</span><br><span class="line">text(15, 115, <span class="string">"Downstream"</span>, <span class="attribute">cex</span>=1.2, <span class="attribute">col</span>=<span class="string">"red"</span>)</span><br><span class="line">k &lt;- length(levels(factor(gr2)))</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> 1:k) &#123;</span><br><span class="line">   points(spa[<span class="attribute">gr2</span>==i,1], spa[<span class="attribute">gr2</span>==i,2], <span class="attribute">pch</span>=i+20, <span class="attribute">cex</span>=2, <span class="attribute">col</span>=i+1, <span class="attribute">bg</span>=i+1)</span><br><span class="line">   &#125;</span><br><span class="line">text(spa, row.names(spa), <span class="attribute">cex</span>=0.6, <span class="attribute">col</span>=<span class="string">"white"</span>, <span class="attribute">font</span>=2)</span><br><span class="line">legend(<span class="string">"bottomright"</span>, paste(<span class="string">"Group"</span>,1:k), pch=(1:k)+20, <span class="attribute">col</span>=2:(k+1),</span><br><span class="line">  pt.<span class="attribute">bg</span>=2:(k+1), pt.<span class="attribute">cex</span>=2, <span class="attribute">bty</span>=<span class="string">"n"</span>)</span><br></pre></td></tr></table></figure>
<p>27.spatial.mrt<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/27.spatial.mrt.png" alt="27"></p>
<h1>另类途径：模糊聚类</h1>
<p>模糊聚类，聚类簇的界限并不明显。<br>
下面简单介绍一下c-均值聚类：</p>
<h2 id="使用cluster程序包内fanny-函数进行c-均值模糊聚类">使用cluster程序包内fanny()函数进行c-均值模糊聚类</h2>
<p>一个对象可以赋予不同的组，对象与组之间的归属程度可以通过成员值（membership value）衡量。一个对象在某一组内的成员值越高，表示该对象与该组之间的关系越紧密，反之亦然。每个对象的成员值总和为1.</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#鱼类数据的c-均值模糊聚类</span></span><br><span class="line">k &lt;- 4  #选择聚类分组的数量</span><br><span class="line">spe.fuz &lt;- fanny(spe.ch, <span class="attribute">k</span>=k, memb.<span class="attribute">exp</span>=1.5)</span><br><span class="line">summary(spe.fuz)</span><br><span class="line">spefuz.g &lt;- spe.fuz<span class="variable">$clustering</span></span><br><span class="line"><span class="comment">#样方成员值</span></span><br><span class="line">spe.fuz<span class="variable">$membership</span></span><br><span class="line"><span class="comment">#每个样方最接近的聚类簇</span></span><br><span class="line">spe.fuz<span class="variable">$clustering</span></span><br><span class="line"><span class="comment">#轮廓图</span></span><br><span class="line">plot(silhouette(spe.fuz), <span class="attribute">main</span>=<span class="string">"Silhouette plot - Fuzzy clustering"</span>,</span><br><span class="line">  cex.<span class="attribute">names</span>=0.8, <span class="attribute">col</span>=spe.fuz$silinfo$widths+1,border="white")</span><br></pre></td></tr></table></figure>
<p>28.fuzzy.silhouette<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/28.fuzzy.silhouette.png" alt="28"></p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#模糊聚类簇的主坐标排序（PCoA）</span></span><br><span class="line">dc.pcoa &lt;- cmdscale(spe.ch)</span><br><span class="line">dc.scores &lt;- scores(dc.pcoa, <span class="attribute">choices</span>=c(1,2))</span><br><span class="line">plot(scores(dc.pcoa), <span class="attribute">asp</span>=1, <span class="attribute">type</span>=<span class="string">"n"</span>,</span><br><span class="line">	<span class="attribute">main</span>=<span class="string">"Ordination of fuzzy clusters (PCoA)"</span>)</span><br><span class="line">abline(<span class="attribute">h</span>=0, <span class="attribute">lty</span>=<span class="string">"dotted"</span>)</span><br><span class="line">abline(<span class="attribute">v</span>=0, <span class="attribute">lty</span>=<span class="string">"dotted"</span>)</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> 1:k) &#123;</span><br><span class="line">	gg &lt;- dc.scores[spefuz.<span class="attribute">g</span>==i,]</span><br><span class="line">	hpts &lt;- chull(gg)  </span><br><span class="line">	hpts &lt;- c(hpts, hpts[1])</span><br><span class="line">	lines(gg[hpts,], <span class="attribute">col</span>=i+1)</span><br><span class="line">	&#125;</span><br><span class="line">stars(spe.fuz<span class="variable">$membership</span>, <span class="attribute">location</span>=scores(dc.pcoa), draw.<span class="attribute">segments</span>=<span class="literal">TRUE</span>,</span><br><span class="line">	<span class="attribute">add</span>=<span class="literal">TRUE</span>, <span class="attribute">scale</span>=<span class="literal">FALSE</span>, <span class="attribute">len</span>=0.1, col.<span class="attribute">segments</span>=2:(k+1))</span><br><span class="line">legend(locator(1), paste(<span class="string">"Cluster"</span>, 1:k, <span class="attribute">sep</span>=<span class="string">""</span>),</span><br><span class="line">	<span class="attribute">pch</span>=15, pt.<span class="attribute">cex</span>=2, <span class="attribute">col</span>=2:(k+1), <span class="attribute">bty</span>=<span class="string">"n"</span>)#在图上任意点击某一处放置图例</span><br></pre></td></tr></table></figure>
<p>29.fuzzy.pcoa<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/NumericalEcologywithR-4-clustering/29.fuzzy.pcoa.png" alt="29"><br>
虽然“硬”聚类产生的分类结果往往不太符合自然界真实的情况，但在需要明确区分对象时，硬聚类的结果很有用。相比之下，模糊聚类在描述对象归类时更加谨慎，也更贴近自然界的实际情况。</p>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>R</category>
      </categories>
      <tags>
        <tag>Rbasics</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记_R语言实战_4.基本数据管理</title>
    <url>/2020/03/14/Ryuyanshizhan4-jibenshujuguanli/</url>
    <content><![CDATA[<p><strong>摘要</strong>：知识点记录。| 创建新变量；变量的重编码；变量的重命名；缺失值：检测缺失值，重编码某些值为缺失值，在分析中排除缺失值；日期值；类型转换；数据排序；数据集的合并；数据集取子集：选入(保留)变量，剔除(丢弃)变量，选入观测，<code>subset()</code>函数，随机抽样<code>sample()</code>。</p>
<a id="more"></a>
<h3 id="4-1一个示例">4.1一个示例</h3>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">manager&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">date&lt;-c('<span class="number">10</span>/<span class="number">24</span>/<span class="number">08</span>','<span class="number">10</span>/<span class="number">28</span>/<span class="number">08</span>','<span class="number">10</span>/<span class="number">01</span>/<span class="number">08</span>','<span class="number">10</span>/<span class="number">12</span>/<span class="number">08</span>','<span class="number">05</span>/<span class="number">01</span>/<span class="number">09</span>')</span><br><span class="line">country&lt;-c('US','US','UK','UK','UK')</span><br><span class="line">gender&lt;-c('M','F','F','M','F')</span><br><span class="line">age&lt;-c(<span class="number">32</span>,<span class="number">45</span>,<span class="number">25</span>,<span class="number">39</span>,<span class="number">99</span>)</span><br><span class="line">q1&lt;-c(<span class="number">5</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line">q2&lt;-c(<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line">q3&lt;-c(<span class="number">5</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>)</span><br><span class="line">q4&lt;-c(<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,NA,<span class="number">2</span>)</span><br><span class="line">q5&lt;-c(<span class="number">5</span>,<span class="number">5</span>,<span class="number">2</span>,NA,<span class="number">1</span>)</span><br><span class="line">leadship&lt;-data.frame(manager,date, country,gender,age,q1,q2,q3,q4,q5,stringsAsFactors = F)</span><br><span class="line">str(leadship)</span><br></pre></td></tr></table></figure>
<h3 id="4-2创建新变量">4.2创建新变量</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">mydata&lt;-data.frame(x1=c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>),x2=c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>))</span><br><span class="line">mydata</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#method</span> <span class="number">1</span></span><br><span class="line">mydata<span class="variable">$sumx</span>&lt;-mydata<span class="variable">$x1</span>+mydata<span class="variable">$x2</span></span><br><span class="line">mydata<span class="variable">$meanx</span>&lt;-(mydata<span class="variable">$x1</span>+mydata<span class="variable">$x2</span>)/<span class="number">2</span></span><br><span class="line">mydata</span><br><span class="line"></span><br><span class="line">#method2</span><br><span class="line"><span class="function"><span class="title">attach</span><span class="params">(mydata)</span></span></span><br><span class="line">mydata<span class="variable">$sumx</span>&lt;-x1+x2</span><br><span class="line">mydata<span class="variable">$meanx</span>&lt;-(x1+x2)/<span class="number">2</span></span><br><span class="line">mydata</span><br><span class="line"><span class="function"><span class="title">detach</span><span class="params">(mydata)</span></span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#method</span> <span class="number">3</span></span><br><span class="line">mydata&lt;-<span class="attribute">transform</span>(mydata,sumx=x1+x2,meanx=(x1+x2)/<span class="number">2</span>)</span><br><span class="line">mydata</span><br></pre></td></tr></table></figure>
<h3 id="4-3变量的重编码">4.3变量的重编码</h3>
<p>将年龄为99设置成空值。将年龄大于75的设置成Elder，年龄大于等于55小于等于75设置成Middle Aged，年龄小于55的设置成Young。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">method 1</span></span><br><span class="line"><span class="meta">leadship$</span><span class="bash">age[leadship<span class="variable">$age</span> == 99]&lt;-NA</span></span><br><span class="line"><span class="meta">leadship$</span><span class="bash">age[leadship<span class="variable">$age</span>&gt;75]&lt;-<span class="string">'Elder'</span></span></span><br><span class="line"><span class="meta">leadship$</span><span class="bash">age[leadship<span class="variable">$age</span>&gt;=55 &amp; leadship<span class="variable">$age</span>&lt;=75]&lt;-<span class="string">'Middle Aged'</span></span></span><br><span class="line"><span class="meta">leadship$</span><span class="bash">age[leadship<span class="variable">$age</span>&lt;55]&lt;-<span class="string">"Young"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">method 2</span></span><br><span class="line">leadship&lt;-within(leadship,&#123;</span><br><span class="line">  agecat&lt;-NA</span><br><span class="line"><span class="meta">  agecat[age&gt;</span><span class="bash">75]&lt;-<span class="string">'Elder'</span></span></span><br><span class="line"><span class="meta">  agecat[age&gt;</span><span class="bash">=55 &amp; age&lt;=75]&lt;-<span class="string">'Middle Aged'</span></span></span><br><span class="line">  agecat[age&lt;55]&lt;-"Young"</span><br><span class="line">  &#125;</span><br><span class="line">  )</span><br></pre></td></tr></table></figure>
<h3 id="4-4变量的重命名">4.4变量的重命名</h3>
<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">#<span class="function"><span class="keyword">method</span> 1:</span> 调用交互编辑器</span><br><span class="line">fix(leadship)</span><br><span class="line"></span><br><span class="line">#<span class="function"><span class="keyword">method</span> 2:</span> reshape包的rename()函数</span><br><span class="line"><span class="keyword">library</span>(reshape)</span><br><span class="line">leadship&lt;-rename(leadship,c(date=<span class="string">'dateID'</span>))</span><br><span class="line"></span><br><span class="line">#<span class="function"><span class="keyword">method</span> 3:</span> names()</span><br><span class="line">names(leadship)[<span class="number">3</span>]&lt;-<span class="string">'testcountry'</span></span><br></pre></td></tr></table></figure>
<h3 id="4-5缺失值">4.5缺失值</h3>
<p><code>is.na()</code>：检测缺失值是否存在。</p>
<h4 id="4-5-1重编码某些值为缺失值">4.5.1重编码某些值为缺失值</h4>
<p>见4.3</p>
<h4 id="4-5-2在分析中排除缺失值">4.5.2在分析中排除缺失值</h4>
<p><code>na.rm=T</code>：计算之前移除缺失值并使用剩下的值进行计算。<br>
<code>na.omit()</code>：移除具有缺失值的行</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">#含有缺失值的算术表达式和函数的计算结果也是缺失值</span><br><span class="line">x&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,NA,<span class="number">5</span>)</span><br><span class="line">y&lt;-c(<span class="number">2</span>,<span class="number">2</span>,NA,<span class="number">2</span>,NA)</span><br><span class="line">z1&lt;-x+y</span><br><span class="line">z1</span><br><span class="line">z2&lt;-sum(x)</span><br><span class="line">z2</span><br><span class="line">z2&lt;-sum(x,na.rm = T)</span><br><span class="line">z2</span><br><span class="line"></span><br><span class="line">leadship1&lt;-na.omit(leadship)</span><br><span class="line">leadship1</span><br></pre></td></tr></table></figure>
<h3 id="4-6日期值">4.6日期值</h3>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">Sys<span class="meta">.Date(</span>) #返回当前的日期</span><br><span class="line">date() #返回当前的日期和时间</span><br><span class="line"><span class="meta">format</span>(Sys<span class="meta">.Date(</span>), <span class="string">"%a %b %d"</span>) #指定日期的输出格式</span><br><span class="line"><span class="meta">x</span> &lt;- c(<span class="string">"1jan1960"</span>, <span class="string">"2jan1960"</span>, <span class="string">"31mar1960"</span>, <span class="string">"30jul1960"</span>)</span><br><span class="line">z &lt;- <span class="meta">as</span><span class="meta">.Date(</span><span class="meta">x</span>, <span class="string">"%d%b%Y"</span>) #?<span class="meta">as</span>.Date</span><br><span class="line">z</span><br><span class="line">x1 &lt;- <span class="meta">as</span><span class="meta">.Date(</span><span class="string">"1960-01-01"</span>)</span><br><span class="line">x2 &lt;- <span class="meta">as</span><span class="meta">.Date(</span><span class="string">"1960-09-01"</span>)</span><br><span class="line">days&lt;-x2-x1</span><br><span class="line">dif<span class="meta">ftime(</span>x1,x2,units=<span class="string">'days'</span>) #计算时间间隔</span><br><span class="line">dif<span class="meta">ftime(</span>x1,x2,units=<span class="string">'weeks'</span>)</span><br></pre></td></tr></table></figure>
<h3 id="4-7类型转换">4.7类型转换</h3>
<p>判断：<code>is.numeric()</code><br>
转换：<code>as.numeric()</code></p>
<h3 id="4-8数据排序order">4.8数据排序<code>order</code></h3>
<figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="title">age</span>&lt;-c(<span class="number">12</span>,<span class="number">12</span>,<span class="number">34</span>,<span class="number">16</span>,<span class="number">49</span>,<span class="number">49</span>)</span><br><span class="line"><span class="title">gender</span>&lt;-c('<span class="type">F'</span>,'<span class="type">M'</span>,'<span class="type">F'</span>,'<span class="type">M'</span>,'<span class="type">M'</span>,'<span class="type">F'</span>)</span><br><span class="line"><span class="class"><span class="keyword">data</span>&lt;-<span class="keyword">data</span>.frame(<span class="title">age</span>,<span class="title">gender</span>,<span class="title">stringsAsFactors</span>=<span class="type">F</span>)</span></span><br><span class="line"><span class="class"><span class="keyword">data</span></span></span><br><span class="line"><span class="title">data1</span>&lt;-<span class="class"><span class="keyword">data</span>[order(<span class="title">age</span>,<span class="title">decreasing</span>=<span class="type">F</span>),]</span></span><br><span class="line"><span class="title">data1</span></span><br><span class="line"><span class="title">data2</span>&lt;-<span class="class"><span class="keyword">data</span>[order(-<span class="title">age</span>),]</span></span><br><span class="line"><span class="title">data2</span></span><br><span class="line"><span class="title">data3</span>&lt;-<span class="class"><span class="keyword">data</span>[order(-<span class="title">age</span>,<span class="title">gender</span>),]</span></span><br><span class="line"><span class="title">data3</span></span><br></pre></td></tr></table></figure>
<h3 id="4-9数据集的合并">4.9数据集的合并</h3>
<p><code>cbind()</code>;<code>rbind()</code><br>
<code>merge()</code></p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="keyword">a</span>&lt;-data.frame(age=c(<span class="string">'12'</span>,<span class="string">'13'</span>,<span class="string">'14'</span>),gender=c(<span class="string">'F'</span>,<span class="string">'F'</span>,<span class="string">'m'</span>))</span><br><span class="line">b&lt;-data.frame(age=c(<span class="string">'12'</span>,<span class="string">'13'</span>,<span class="string">'14'</span>),country=c(<span class="string">'US'</span>,<span class="string">'UK'</span>,<span class="string">'US'</span>))</span><br><span class="line">c&lt;-<span class="built_in">merge</span>(<span class="keyword">a</span>,b,<span class="keyword">by</span>=<span class="string">'age'</span>)</span><br><span class="line">c</span><br></pre></td></tr></table></figure>
<h3 id="4-10数据集取子集">4.10数据集取子集</h3>
<h4 id="4-10-1选入（保留）变量">4.10.1选入（保留）变量</h4>
<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">#选择变量q1,q2,q3,q4和q5</span><br><span class="line">#<span class="function"><span class="keyword">method</span> 1</span></span><br><span class="line"><span class="function"><span class="title">newdata</span>&lt;-<span class="title">leadship</span>[,<span class="title">c</span><span class="params">(6:10)</span>]</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">#<span class="title">method</span> 2</span></span><br><span class="line"><span class="function"><span class="title">myvars</span>&lt;-<span class="title">c</span><span class="params">(<span class="string">'q1'</span>,<span class="string">'q2'</span>,<span class="string">'q3'</span>,<span class="string">'q4'</span>,<span class="string">'q5'</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">newdata1</span>&lt;-<span class="title">leadship</span>[<span class="title">myvars</span>]</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">#<span class="title">method3</span></span></span><br><span class="line"><span class="function"><span class="title">myvars</span>&lt;-<span class="title">paste</span><span class="params">(<span class="string">'q'</span>,1:5,sep="")</span></span></span><br><span class="line"><span class="function"><span class="title">newdata1</span>&lt;-<span class="title">leadship</span>[<span class="title">myvars</span>]</span></span><br></pre></td></tr></table></figure>
<h4 id="4-10-2剔除（丢弃）变量">4.10.2剔除（丢弃）变量</h4>
<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">#剔除变量q3和q4</span><br><span class="line">#<span class="function"><span class="keyword">method</span> 1</span></span><br><span class="line"><span class="function"><span class="title">data</span>&lt;-<span class="title">leadship</span>[,-<span class="title">c</span><span class="params">(8,9)</span>]</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">#<span class="title">method</span> 2</span></span><br><span class="line"><span class="function"><span class="title">myvars</span>&lt;-<span class="title">names</span><span class="params">(leadship)</span> %<span class="title">in</span>% <span class="title">c</span><span class="params">(<span class="string">'q3'</span>,<span class="string">'q4'</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">data</span>&lt;-<span class="title">leadship</span>[!<span class="title">myvars</span>]</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">#<span class="title">method</span> 3</span></span><br><span class="line"><span class="function"><span class="title">leadship1</span>$<span class="title">q3</span>&lt;-<span class="title">leadship1</span>$<span class="title">q4</span>&lt;-<span class="title">NULL</span></span></span><br></pre></td></tr></table></figure>
<h4 id="4-10-3选入观测">4.10.3选入观测</h4>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">leadship[<span class="type">c</span>(<span class="number">1</span>:<span class="number">3</span>),] <span class="comment">#选择1到3行</span></span><br><span class="line"><span class="keyword">data</span>&lt;<span class="literal">-leadship</span>[<span class="type">which</span>(<span class="type">leadship</span><span class="variable">$age</span>&gt;<span class="number">30</span> &amp; <span class="type">leadship</span><span class="variable">$gender</span>==<span class="string">'M'</span>),] <span class="comment">#选择年龄大于30岁的男性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#选择2009年1月1日到2009年12月31收集的数据</span></span><br><span class="line">leadship<span class="variable">$date</span>&lt;<span class="operator">-as</span>.Date(leadship<span class="variable">$date</span>,<span class="string">'%m/%d/%y'</span>)</span><br><span class="line">startdate&lt;<span class="operator">-as</span>.Date(<span class="string">'2009-01-01'</span>)</span><br><span class="line">enddate&lt;<span class="operator">-as</span>.Date(<span class="string">'2009-12-31'</span>)</span><br><span class="line">newdata&lt;<span class="literal">-leadship</span>[<span class="type">which</span>(<span class="type">leadship</span><span class="variable">$date</span>&gt;<span class="type">startdate</span> &amp; <span class="type">leadship</span><span class="variable">$date</span>&lt;<span class="type">enddate</span>),]</span><br></pre></td></tr></table></figure>
<h4 id="4-10-4subset-函数">4.10.4<code>subset()</code>函数</h4>
<p><code>subset(leadship,age&gt;=35 | age&lt;24,select=q1:q5)</code></p>
<h4 id="4-10-5随机抽样">4.10.5随机抽样</h4>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">x&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="function"><span class="title">sample</span><span class="params">(x,<span class="number">2</span>,replace=T)</span></span></span><br><span class="line"><span class="function"><span class="title">sample</span><span class="params">(x,<span class="number">2</span>,replace=F)</span></span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>R</category>
      </categories>
      <tags>
        <tag>Rbasics</tag>
      </tags>
  </entry>
  <entry>
    <title>bracken - a highly accurate statistical method that computes the abundance of species in DNA sequences from a metagenomics sample</title>
    <url>/2020/07/02/biosoft-bracken/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> bracken (Bayesian Reestimation of Abundance with KrakEN): estimate the abundance of species.</p>
<a id="more"></a>
<h1>Installation</h1>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">conda <span class="keyword">install </span>-y <span class="keyword">bracken</span></span><br><span class="line"><span class="keyword">which </span><span class="keyword">bracken</span></span><br></pre></td></tr></table></figure>
<h1>Full usage</h1>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Usage</span>: bracken -d MY_DB -i <span class="keyword">INPUT</span> -o OUTPUT -w OUTREPORT -r READ_LEN -l <span class="keyword">LEVEL</span> -t THRESHOLD</span><br><span class="line">  MY_DB          <span class="keyword">location</span> <span class="keyword">of</span> Kraken <span class="keyword">database</span></span><br><span class="line">  <span class="keyword">INPUT</span>          Kraken REPORT file <span class="keyword">to</span> use <span class="keyword">for</span> abundance estimation</span><br><span class="line">  OUTPUT         file <span class="type">name</span> <span class="keyword">for</span> Bracken <span class="keyword">default</span> output</span><br><span class="line">  OUTREPORT      <span class="built_in">New</span> Kraken REPORT output file <span class="keyword">with</span> Bracken <span class="keyword">read</span> estimates</span><br><span class="line">  READ_LEN       <span class="keyword">read</span> length <span class="keyword">to</span> <span class="keyword">get</span> <span class="keyword">all</span> classifications <span class="keyword">for</span> (<span class="keyword">default</span>: <span class="number">100</span>)</span><br><span class="line">  <span class="keyword">LEVEL</span>          <span class="keyword">level</span> <span class="keyword">to</span> estimate abundance at [<span class="keyword">options</span>: D,P,C,O,F,G,S] (<span class="keyword">default</span>: S)</span><br><span class="line">  THRESHOLD      number <span class="keyword">of</span> reads required PRIOR <span class="keyword">to</span> abundance estimation <span class="keyword">to</span> <span class="keyword">perform</span> reestimation (<span class="keyword">default</span>: <span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<h1>Use cases</h1>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">/<span class="meta">data</span>/qiime2_data/miniconda3/<span class="keyword">bin/bracken </span>-d ~/YunmengLi/database/kraken2/<span class="number">16</span>S_SILVA132_k2db/ -i <span class="keyword">barcode08_kraken2_report.xls </span>-o <span class="keyword">barcode08_bracken_report.xls </span>-w <span class="keyword">barcode08_kraken2_bracken.xls </span>-t <span class="number">8</span> -l G</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/nanopore-analysis-fulllength16Sdatabyflongle/7.bracken_result.png" alt="7.bracken_result"></p>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Biosoft</category>
      </categories>
      <tags>
        <tag>Biosoft</tag>
      </tags>
  </entry>
  <entry>
    <title>STAMP - a software package for analyzing metagenomic profiles that promotes ‘best practices’ in choosing appropriate statistical techniques and reporting results</title>
    <url>/2020/07/14/biosoft-STAMP/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> STAMP, used for taxon comparison among different groups or samples.</p>
<a id="more"></a>
<h1>Introduction</h1>
<p>STAMP is a software package for analyzing taxonomic or metabolic profiles that promotes ‘best practices’ in choosing appropriate statistical techniques and reporting results. Statistical hypothesis tests for <u>pairs of samples or groups of samples</u> is support along with a wide range of exploratory plots. <u>STAMP encourages the use of effect sizes and confidence intervals in assessing biological importance.</u> A user friendly, graphical interface permits easy exploration of statistical results and generation of publication quality plots for inferring the biological relevance of features in a metagenomic profile. STAMP is open source, extensible via a plugin framework, and available for all major platforms.</p>
<blockquote>
<p>STAMP: <a href="https://beikolab.cs.dal.ca/software/STAMP" target="_blank" rel="noopener">https://beikolab.cs.dal.ca/software/STAMP</a></p>
</blockquote>
<h1>Data</h1>
<p>relative abundance table at phylum level: <code>feature-table-relative-phylum-stamp.txt</code><br>
mapping file: <code>mapping.txt</code></p>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Other Software</category>
      </categories>
      <tags>
        <tag>16S</tag>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>nanofilt - filtering and trimming of long read sequencing data</title>
    <url>/2020/07/01/biosoft-nanofilt/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> Filtering and Trimming on <code>*.fastq</code> format data: filtering on quality and/or read length, and optional trimming after passing filters.</p>
<a id="more"></a>
<h1>Installation</h1>
<p><code>conda install -c bioconda nanofilt</code></p>
<h1>Full usage</h1>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">usage: NanoFilt [-h] [-v] [--logfile LOGFILE] [-l LENGTH]</span><br><span class="line">                [--maxlength MAXLENGTH] [-q QUALITY] [--minGC MINGC]</span><br><span class="line">                [--maxGC MAXGC] [--headcrop HEADCROP] [--tailcrop TAILCROP]</span><br><span class="line">                [-s SUMMARY] [--readtype &#123;1D,2D,1D2&#125;]</span><br><span class="line">                [input]</span><br><span class="line"></span><br><span class="line">Perform quality <span class="keyword">and</span>/<span class="keyword">or</span> length <span class="keyword">and</span>/<span class="keyword">or</span> GC filtering of (long read) fastq data.           Reads on stdin.</span><br><span class="line"></span><br><span class="line">General options:</span><br><span class="line">  -h, --help            show the help <span class="keyword">and</span> exit</span><br><span class="line">  -v, --version         <span class="builtin-name">Print</span> version <span class="keyword">and</span> exit.</span><br><span class="line">  --logfile LOGFILE     Specify the path <span class="keyword">and</span> filename <span class="keyword">for</span> the log file.</span><br><span class="line">  input                 input, uncompressed fastq file</span><br><span class="line"></span><br><span class="line">Options <span class="keyword">for</span> filtering reads on.:</span><br><span class="line">  -l LENGTH, --length LENGTH</span><br><span class="line">                       <span class="built_in"> Filter </span>on a minimum read length</span><br><span class="line">  --maxlength MAXLENGTH</span><br><span class="line">                       <span class="built_in"> Filter </span>on a maximum read length</span><br><span class="line">  -q QUALITY, --quality QUALITY</span><br><span class="line">                       <span class="built_in"> Filter </span>on a minimum average read quality score</span><br><span class="line">  --minGC MINGC         Sequences must have GC content &gt;= <span class="keyword">to</span> this. Float between 0.0 <span class="keyword">and</span> 1.0. Ignored <span class="keyword">if</span></span><br><span class="line">                        using summary file.</span><br><span class="line">  --maxGC MAXGC         Sequences must have GC content &lt;= <span class="keyword">to</span> this. Float between 0.0 <span class="keyword">and</span> 1.0. Ignored <span class="keyword">if</span></span><br><span class="line">                        using summary file.</span><br><span class="line"></span><br><span class="line">Options <span class="keyword">for</span> trimming reads.:</span><br><span class="line">  --headcrop HEADCROP   Trim n nucleotides <span class="keyword">from</span> start of read</span><br><span class="line">  --tailcrop TAILCROP   Trim n nucleotides <span class="keyword">from</span> end of read</span><br><span class="line"></span><br><span class="line">Input options.:</span><br><span class="line">  -s SUMMARY, --summary SUMMARY</span><br><span class="line">                        Use albacore <span class="keyword">or</span> guppy summary file <span class="keyword">for</span> quality scores</span><br><span class="line">  --readtype &#123;1D,2D,1D2&#125;</span><br><span class="line">                        Which read<span class="built_in"> type </span><span class="keyword">to</span> extract information about <span class="keyword">from</span> summary. Options are 1D, 2D <span class="keyword">or</span></span><br><span class="line">                        1D2</span><br><span class="line"></span><br><span class="line">EXAMPLES:</span><br><span class="line">  gunzip -c reads.fastq.gz | NanoFilt -q 10 -l 500 --headcrop 50 | minimap2 genome.fa - | samtools sort -O BAM -@24 -o alignment.bam -</span><br><span class="line">  gunzip -c reads.fastq.gz | NanoFilt -q 12 --headcrop 75 | gzip &gt; trimmed-reads.fastq.gz</span><br><span class="line">  gunzip -c reads.fastq.gz | NanoFilt -q 10 | gzip &gt; highQuality-reads.fastq.gz</span><br></pre></td></tr></table></figure>
<h1>Use cases</h1>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">gunzip -c all.trimmed.fastq.gz | NanoFilt -l <span class="number">500</span> --maxlength <span class="number">1550</span> -q <span class="number">7</span> --headcrop <span class="number">50</span> --tailcrop <span class="number">50</span> |gzip &gt; all.filtered.fastq.gz</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/nanopore-analysis-fulllength16Sdatabyflongle/5.nanofilt_result.png" alt="5"></p>
<p>Ref:</p>
<blockquote>
<p>nanofilt: <a href="https://github.com/wdecoster/nanofilt" target="_blank" rel="noopener">https://github.com/wdecoster/nanofilt</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Biosoft</category>
      </categories>
      <tags>
        <tag>Biosoft</tag>
      </tags>
  </entry>
  <entry>
    <title>kraken2 - the second version of the Kraken taxonomic sequence classification system</title>
    <url>/2020/07/02/biosoft-kraken2/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> taxonomic assignment</p>
<a id="more"></a>
<h1>Installation</h1>
<p><code>conda install -y kraken2</code></p>
<h1>Download kraken2 database</h1>
<p><a href="ftp://ftp.ccb.jhu.edu/pub/data/kraken2_dbs/">ftp://ftp.ccb.jhu.edu/pub/data/kraken2_dbs/</a></p>
<h1>Full usage</h1>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Usage</span>: kraken2 [options] &lt;filename(s)&gt;</span><br><span class="line"></span><br><span class="line"><span class="attribute">Options:</span></span><br><span class="line">  --db NAME               Name for Kraken 2 DB</span><br><span class="line">                          (default: none)</span><br><span class="line">  --threads NUM           Number of threads (default: 1)</span><br><span class="line">  --quick                 Quick operation (use first hit or hits)</span><br><span class="line">  --unclassified-out FILENAME</span><br><span class="line">                          Print unclassified sequences to filename</span><br><span class="line">  --classified-out FILENAME</span><br><span class="line">                          Print classified sequences to filename</span><br><span class="line">  --output FILENAME       Print output to filename (default: stdout); "-" will</span><br><span class="line">                          suppress normal output</span><br><span class="line">  --confidence FLOAT      Confidence score threshold (default: 0.0); must be</span><br><span class="line">                          in [0, 1].</span><br><span class="line">  --minimum-base-quality NUM</span><br><span class="line">                          Minimum base quality used in classification (def: 0,</span><br><span class="line">                          only effective with FASTQ input).</span><br><span class="line">  --report FILENAME       Print a report with aggregrate counts/clade to file</span><br><span class="line">  --use-mpa-style         With --report, format report output like Kraken 1's</span><br><span class="line">                          kraken-mpa-report</span><br><span class="line">  --report-zero-counts    With --report, report counts for ALL taxa, even if</span><br><span class="line">                          counts are zero</span><br><span class="line">  --memory-mapping        Avoids loading database into RAM</span><br><span class="line">  --paired                The filenames provided have paired-end reads</span><br><span class="line">  --use-names             Print scientific names instead of just taxids</span><br><span class="line">  --gzip-compressed       Input files are compressed with gzip</span><br><span class="line">  --bzip2-compressed      Input files are compressed with bzip2</span><br><span class="line">  --minimum-hit-groups NUM</span><br><span class="line">                          Minimum number of hit groups (overlapping k-mers</span><br><span class="line">                          sharing the same minimizer) needed to make a call</span><br><span class="line">                          (default: 2)</span><br><span class="line">  --help                  Print this message</span><br><span class="line">  --version               Print version information</span><br><span class="line"></span><br><span class="line">If none of the *-compressed flags are specified, and the filename provided</span><br><span class="line">is a regular file, automatic format detection is attempted.</span><br></pre></td></tr></table></figure>
<h1>Use cases</h1>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">kraken2 <span class="params">--db</span> ~<span class="string">/YunmengLi/database/kraken2/16S_SILVA132_k2db/</span> <span class="params">--threads</span> 4 ~<span class="string">/YunmengLi/nanopore/Flongle/pascal0515/filtered_nanofilt/filtered_barcode08.fastq</span> <span class="params">--report</span> barcode08_kraken2_report.xls <span class="params">--output</span> barcode08.txt</span><br></pre></td></tr></table></figure>
<p>The output of kraken-report (report.xls) is tab-delimited, with one line per taxon. The fields of the output, from left-to-right, are as follows:</p>
<ul>
<li>Percentage of reads covered by the clade rooted at this taxon</li>
<li>Number of reads covered by the clade rooted at this taxon</li>
<li>Number of reads assigned directly to this taxon</li>
<li>A rank code, indicating (U)nclassified, (D)omain, (K)ingdom, §hylum, ©lass, (O)rder, (F)amily, (G)enus, or (S)pecies. All other ranks are simply ‘-’.</li>
<li>NCBI taxonomy ID</li>
<li>indented scientific name<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/nanopore-analysis-fulllength16Sdatabyflongle/7.kraken2_result.png" alt="7.kraken2_result"></li>
</ul>
<p>Ref:</p>
<blockquote>
<p>kraken2: <a href="https://ccb.jhu.edu/software/kraken2/" target="_blank" rel="noopener">https://ccb.jhu.edu/software/kraken2/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Biosoft</category>
      </categories>
      <tags>
        <tag>Biosoft</tag>
      </tags>
  </entry>
  <entry>
    <title>Using QIIME2 to process 16S rRNA metabarcoding illumina Miseq sequencing data</title>
    <url>/2020/07/03/bioplatform-qiime2/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> This documents shows the use of qiime2 to process metabarcoding data.</p>
<a id="more"></a>
<h1>Environment</h1>
<ul>
<li>Ubuntu 16.04.6 LTS #cat /etc/issue</li>
<li>qiime2-2020.2</li>
</ul>
<blockquote>
<p>qiime2 install: <a href="https://docs.qiime2.org/2020.2/install/native/" target="_blank" rel="noopener">https://docs.qiime2.org/2020.2/install/native/</a></p>
</blockquote>
<h1>Data</h1>
<ul>
<li><code>raw_data</code> folder: 1) paired-end illumina Miseq sequencing data of 16S rRNA gene in the format of <code>*.fastq</code>; 2) <code>manifest.txt</code>; 3) <code>mapping.txt</code>.</li>
<li>classifier: <code>gg-13-8-99-nb-classifier.qza</code></li>
</ul>
<h1>Workflow</h1>
<h2 id="Check-the-quality-of-raw-reads">Check the quality of raw reads</h2>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">mkdir</span> <span class="string">fastqc_out</span></span><br><span class="line"><span class="attr">fastqc</span> <span class="string">raw_data/*.fastq -o fasqc_out/</span></span><br><span class="line"><span class="attr">cd</span> <span class="string">fasqc_out/</span></span><br><span class="line"><span class="attr">multiqc</span> <span class="string">.</span></span><br></pre></td></tr></table></figure>
<p>-&gt; get multiqc_report.html -&gt; see if most of <u>per sequence quality scores</u> is above 30</p>
<blockquote>
<p>multiqc: <a href="https://github.com/ewels/MultiQC" target="_blank" rel="noopener">https://github.com/ewels/MultiQC</a></p>
</blockquote>
<h2 id="Importing-data">Importing data</h2>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">mkdir results</span><br><span class="line">qiime tools import --type <span class="string">'SampleData[PairedEndSequencesWithQuality]'</span> --<span class="meta">input</span>-path raw_data/manifest.txt --<span class="meta">output</span>-path results/paired-<span class="meta">end</span>-demux.qza --<span class="meta">input</span>-<span class="meta">format</span> PairedEndFastqManifestPhred33</span><br></pre></td></tr></table></figure>
<p>-&gt; get paired-end-demux.qza file</p>
<h2 id="Trim-adapter-optional">Trim adapter (optional)</h2>
<p><code>--p-discard-untrimmed</code>: discard reads in which no adapter was found.<br>
<code>--p-no-indels</code>: don’t allow insertions or deletions of bases when matching adapters</p>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">qiime</span> <span class="comment">cutadapt</span> <span class="comment">trim</span><span class="literal">-</span><span class="comment">paired</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">demultiplexed</span><span class="literal">-</span><span class="comment">sequences</span> <span class="comment">paired</span><span class="literal">-</span><span class="comment">end</span><span class="literal">-</span><span class="comment">demux</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">cores</span> <span class="comment">8</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">front</span><span class="literal">-</span><span class="comment">f</span> <span class="comment">CCTACGGGNGGCWGCAG</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">front</span><span class="literal">-</span><span class="comment">r</span> <span class="comment">GACTACHVGGGTATCTAATCC</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">discard</span><span class="literal">-</span><span class="comment">untrimmed</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">no</span><span class="literal">-</span><span class="comment">indels</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">trimmed</span><span class="literal">-</span><span class="comment">sequences</span> <span class="comment">reads_trimmed</span><span class="string">.</span><span class="comment">qza</span></span><br><span class="line"><span class="comment">qiime</span> <span class="comment">demux</span> <span class="comment">summarize</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">data</span> <span class="comment">reads_trimmed</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">visualization</span> <span class="comment">reads_trimmed</span><span class="string">.</span><span class="comment">qzv</span></span><br></pre></td></tr></table></figure>
<p><code>*.fastq*</code> here don’t contain primer, so we don’t do this procedure.</p>
<h2 id="Quality-control">Quality control</h2>
<h3 id="stats-demux">stats_demux</h3>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">qiime</span> demux summarize --i-<span class="meta">data</span> results/paired-<span class="meta">end</span>-demux.qza --o-visualization results/paired-<span class="meta">end</span>-demux.qzv</span><br></pre></td></tr></table></figure>
<p>-&gt; get paired-end-demux.qzv -&gt; visualization</p>
<blockquote>
<p>Importing data: <a href="https://docs.qiime2.org/2020.6/tutorials/importing/" target="_blank" rel="noopener">https://docs.qiime2.org/2020.6/tutorials/importing/</a><br>
Visualization: <a href="https://view.qiime2.org/" target="_blank" rel="noopener">https://view.qiime2.org/</a></p>
</blockquote>
<h3 id="stats-dada2">stats_dada2</h3>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">qiime</span> <span class="comment">dada2</span> <span class="comment">denoise</span><span class="literal">-</span><span class="comment">paired</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">demultiplexed</span><span class="literal">-</span><span class="comment">seqs</span> <span class="comment">results/paired</span><span class="literal">-</span><span class="comment">end</span><span class="literal">-</span><span class="comment">demux</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">trunc</span><span class="literal">-</span><span class="comment">len</span><span class="literal">-</span><span class="comment">f</span> <span class="comment">220</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">trunc</span><span class="literal">-</span><span class="comment">len</span><span class="literal">-</span><span class="comment">r</span> <span class="comment">230</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">trim</span><span class="literal">-</span><span class="comment">left</span><span class="literal">-</span><span class="comment">f</span> <span class="comment">0</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">trim</span><span class="literal">-</span><span class="comment">left</span><span class="literal">-</span><span class="comment">r</span> <span class="comment">0</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">trunc</span><span class="literal">-</span><span class="comment">q</span> <span class="comment">5</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">chimera</span><span class="literal">-</span><span class="comment">method</span> <span class="comment">pooled</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">table</span> <span class="comment">results/table</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">representative</span><span class="literal">-</span><span class="comment">sequences</span> <span class="comment">results/rep</span><span class="literal">-</span><span class="comment">seqs</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">denoising</span><span class="literal">-</span><span class="comment">stats</span> <span class="comment">results/denoising</span><span class="literal">-</span><span class="comment">stats</span><span class="string">.</span><span class="comment">qza</span></span><br><span class="line"><span class="comment">qiime</span> <span class="comment">metadata</span> <span class="comment">tabulate</span> --<span class="comment">m</span><span class="literal">-</span><span class="comment">input</span><span class="literal">-</span><span class="comment">file</span> <span class="comment">results/denoising</span><span class="literal">-</span><span class="comment">stats</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">visualization</span> <span class="comment">results/denoising</span><span class="literal">-</span><span class="comment">stats</span><span class="string">.</span><span class="comment">qzv</span></span><br></pre></td></tr></table></figure>
<p>-&gt; get denoising-stats.qza -&gt; get <code>*.qzv</code> -&gt; visualization</p>
<p>in addition,<br>
-&gt; get table.qza =&gt; see ##abundance table<br>
-&gt; get rep-seqs.qza =&gt; see ##sequence alignment and taxonomic assignment</p>
<h2 id="Filter-ASV-optional">Filter ASV (optional)</h2>
<h3 id="don’t-filter">don’t filter</h3>
<blockquote>
<p>“I don’t consider filtering features to be an essential step, especially given how well the modern denoisers (such as DADA2 and Deblur) work.</p>
</blockquote>
<h3 id="filter">filter</h3>
<blockquote>
<p>“When I do filter features,  (a) by requiring them to show up in some minimum number of samples, or (b) if they don’t achieve some minimum level of taxonomy assignment.”</p>
</blockquote>
<p>详见参考中的 <em>扩增子分析流程</em></p>
<ul>
<li><code>qiime feature-table filter-features</code></li>
<li><code>qiime taxa filter-table</code></li>
</ul>
<h2 id="Sequence-alignment">Sequence alignment</h2>
<p>-&gt; get rep-seqs.qza -&gt; get <code>*.qzv</code> -&gt; visualization</p>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">qiime</span> <span class="comment">feature</span><span class="literal">-</span><span class="comment">table</span> <span class="comment">tabulate</span><span class="literal">-</span><span class="comment">seqs</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">data</span> <span class="comment">results/rep</span><span class="literal">-</span><span class="comment">seqs</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">visualization</span> <span class="comment">results/rep</span><span class="literal">-</span><span class="comment">seqs</span><span class="string">.</span><span class="comment">qzv</span></span><br><span class="line"><span class="comment">qiime</span> <span class="comment">tools</span> <span class="comment">export</span> --<span class="comment">input</span><span class="literal">-</span><span class="comment">path</span> <span class="comment">results/rep</span><span class="literal">-</span><span class="comment">seqs</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">output</span><span class="literal">-</span><span class="comment">path</span> <span class="comment">results/</span></span><br></pre></td></tr></table></figure>
<p>=&gt; <code>rep-seqs.qzv</code>中是每个ASV的序列，点击序列可以直接跳转到blast，非常方便。<br>
=&gt; get <code>dna-sequences.fasta</code> file</p>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">qiime</span> <span class="comment">alignment</span> <span class="comment">mafft</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">sequences</span> <span class="comment">results/rep</span><span class="literal">-</span><span class="comment">seqs</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">alignment</span> <span class="comment">results/aligned</span><span class="literal">-</span><span class="comment">rep</span><span class="literal">-</span><span class="comment">seqs</span><span class="string">.</span><span class="comment">qza</span></span><br><span class="line"><span class="comment">qiime</span> <span class="comment">alignment</span> <span class="comment">mask</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">alignment</span> <span class="comment">results/aligned</span><span class="literal">-</span><span class="comment">rep</span><span class="literal">-</span><span class="comment">seqs</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">masked</span><span class="literal">-</span><span class="comment">alignment</span> <span class="comment">results/masked</span><span class="literal">-</span><span class="comment">aligned</span><span class="literal">-</span><span class="comment">rep</span><span class="literal">-</span><span class="comment">seqs</span><span class="string">.</span><span class="comment">qza</span></span><br><span class="line"><span class="comment">qiime</span> <span class="comment">phylogeny</span> <span class="comment">fasttree</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">alignment</span> <span class="comment">results/masked</span><span class="literal">-</span><span class="comment">aligned</span><span class="literal">-</span><span class="comment">rep</span><span class="literal">-</span><span class="comment">seqs</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">tree</span> <span class="comment">results/unrooted</span><span class="literal">-</span><span class="comment">tree</span><span class="string">.</span><span class="comment">qza</span></span><br><span class="line"><span class="comment">qiime</span> <span class="comment">phylogeny</span> <span class="comment">midpoint</span><span class="literal">-</span><span class="comment">root</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">tree</span> <span class="comment">results/unrooted</span><span class="literal">-</span><span class="comment">tree</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">rooted</span><span class="literal">-</span><span class="comment">tree</span> <span class="comment">results/rooted</span><span class="literal">-</span><span class="comment">tree</span><span class="string">.</span><span class="comment">qza</span></span><br></pre></td></tr></table></figure>
<p>-&gt; get <code>unrooted-tree.qza</code> and <code>rooted-tree.qza</code></p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">qiime tools export --input-<span class="built_in">path</span> results/rooted-<span class="built_in">tree</span>.qza --output-<span class="built_in">path</span> results/rooted-<span class="built_in">tree</span></span><br><span class="line">qiime tools export --input-<span class="built_in">path</span> results/unrooted-<span class="built_in">tree</span>.qza --output-<span class="built_in">path</span> results/unrooted-<span class="built_in">tree</span></span><br></pre></td></tr></table></figure>
<p>-&gt; get <code>unrooted-tree.nwk</code> and <code>rooted-tree.nwk</code></p>
<h2 id="Taxonomic-assignment">Taxonomic assignment</h2>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">qiime feature-classifier classify-sklearn --i-classifier classifiers/gg<span class="number">-13</span><span class="number">-8</span><span class="number">-99</span>-nb-classifier.qza --i-reads results/rep-seqs.qza --o-classification results/taxonomy.qza</span><br></pre></td></tr></table></figure>
<blockquote>
<p>if the version of scikit-learn is not match, <code>pip install -U scikit-learn==version No.</code><br>
Installing scikit-learn: <a href="http://ogrisel.github.io/scikit-learn.org/sklearn-tutorial/install.html" target="_blank" rel="noopener">http://ogrisel.github.io/scikit-learn.org/sklearn-tutorial/install.html</a></p>
</blockquote>
<p>-&gt; get taxonomy.qza -&gt; get <code>*.qzv</code> -&gt; visualization</p>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">qiime</span> <span class="comment">tools</span> <span class="comment">export</span> --<span class="comment">input</span><span class="literal">-</span><span class="comment">path</span> <span class="comment">results/taxonomy</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">output</span><span class="literal">-</span><span class="comment">path</span> <span class="comment">results/taxonomy</span></span><br><span class="line"><span class="comment">qiime</span> <span class="comment">metadata</span> <span class="comment">tabulate</span> --<span class="comment">m</span><span class="literal">-</span><span class="comment">input</span><span class="literal">-</span><span class="comment">file</span> <span class="comment">results/taxonomy</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">visualization</span> <span class="comment">results/taxonomy</span><span class="string">.</span><span class="comment">qzv</span></span><br></pre></td></tr></table></figure>
<p>-&gt; get <code>taxonomy.tsv</code> and <code>taxonomy.qzv</code></p>
<h2 id="Phylogenetic-tree">Phylogenetic tree</h2>
<p>=&gt; <code>rooted-tree.qza</code> and <code>rooted-tree.nwk</code> both can be imported into iTOL to build phylogenetic tree. using <code>taxonomy.qza</code> as annotation file.</p>
<blockquote>
<p>iTOL: <a href="https://itol.embl.de/tree/21222422923956981594160007" target="_blank" rel="noopener">https://itol.embl.de/tree/21222422923956981594160007</a></p>
</blockquote>
<h2 id="Diversity">Diversity</h2>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">qiime feature-<span class="keyword">table</span> <span class="keyword">summarize</span> --i-<span class="keyword">table</span> results/<span class="keyword">table</span>.qza --<span class="keyword">m</span>-<span class="keyword">sample</span>-metadata-<span class="keyword">file</span> raw_data/mapping.txt --o-visualization results/<span class="keyword">table</span>.qzv</span><br></pre></td></tr></table></figure>
<p>=&gt; 注意生成的这个table.qzv (100%相似程度)，需要通过它来了解，在测序深度选择多少合适。</p>
<p>-&gt; get core-metrics</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">mkdir results/<span class="number">2</span>.Diversity</span><br><span class="line">qiime diversity core-metrics-phylogenetic --i-phylogeny results/rooted-tree<span class="selector-class">.qza</span> --i-<span class="selector-tag">table</span> results/<span class="selector-tag">table</span><span class="selector-class">.qza</span> --p-sampling-depth <span class="number">1132</span> --m-metadata-file raw_data/mapping<span class="selector-class">.txt</span> --output-dir results/core-metrics</span><br></pre></td></tr></table></figure>
<h3 id="Alpha-diversity">Alpha diversity</h3>
<h4 id="alpha-rarefaction">alpha rarefaction</h4>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">qiime</span> <span class="comment">diversity</span> <span class="comment">alpha</span><span class="literal">-</span><span class="comment">rarefaction</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">table</span> <span class="comment">results/table</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">max</span><span class="literal">-</span><span class="comment">depth</span> <span class="comment">30000</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">phylogeny</span> <span class="comment">results/rooted</span><span class="literal">-</span><span class="comment">tree</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">m</span><span class="literal">-</span><span class="comment">metadata</span><span class="literal">-</span><span class="comment">file</span> <span class="comment">raw_data/mapping</span><span class="string">.</span><span class="comment">txt</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">visualization</span> <span class="comment">results/rare</span><span class="string">.</span><span class="comment">qzv</span></span><br></pre></td></tr></table></figure>
<h4 id="significance-analysis-kruskal-Wallis-test">significance analysis (kruskal-Wallis test)</h4>
<p>-&gt; visualization</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">qiime diversity alpha-<span class="keyword">group</span>-significance --i-alpha-diversity results<span class="regexp">/core-metrics/</span>observed_otus_vector.qza --m-metadata-<span class="keyword">file</span> raw_data<span class="regexp">/mapping.txt --o-visualization results/</span>core-metrics<span class="regexp">/observed_otus_vector.qzv</span></span><br></pre></td></tr></table></figure>
<h3 id="Beta-diversity">Beta diversity</h3>
<h4 id="PCoA-plot">PCoA plot</h4>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">qiime</span> <span class="comment">emperor</span> <span class="comment">plot</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">pcoa</span> <span class="comment">results/co</span><span class="literal">-</span><span class="comment">metrics/weighted_unifrac_pcoa_results</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">m</span><span class="literal">-</span><span class="comment">metadata</span><span class="literal">-</span><span class="comment">file</span> <span class="comment">raw_data/mapping</span><span class="string">.</span><span class="comment">txt</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">visualization</span> <span class="comment">results/co</span><span class="literal">-</span><span class="comment">metrics/weighted_unifrac_emperor</span><span class="string">.</span><span class="comment">qzv</span></span><br></pre></td></tr></table></figure>
<h4 id="significance-analysis-PERMANOVA-and-paired-comparison">significance analysis (PERMANOVA and paired comparison)</h4>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">qiime</span> <span class="comment">diversity</span> <span class="comment">beta</span><span class="literal">-</span><span class="comment">group</span><span class="literal">-</span><span class="comment">significance</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">distance</span><span class="literal">-</span><span class="comment">matrix</span> <span class="comment">results/core</span><span class="literal">-</span><span class="comment">metrics/unweighted_unifrac_distance_matrix</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">m</span><span class="literal">-</span><span class="comment">metadata</span><span class="literal">-</span><span class="comment">file</span> <span class="comment">raw_data/mapping</span><span class="string">.</span><span class="comment">txt</span> --<span class="comment">m</span><span class="literal">-</span><span class="comment">metadata</span><span class="literal">-</span><span class="comment">column</span> <span class="comment">group2</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">visualization</span> <span class="comment">results/core</span><span class="literal">-</span><span class="comment">metrics/unweighted_unifrac_significance</span><span class="string">.</span><span class="comment">qzv</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">pairwise</span></span><br></pre></td></tr></table></figure>
<h2 id="Abundance-table">Abundance table</h2>
<h3 id="Absolute-abundance">Absolute abundance</h3>
<p>-&gt; get total absolute abundance table with taxonomy information</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">qiime tools export --input-path results/<span class="keyword">table</span>.qza <span class="comment">--output-path feature-table</span></span><br><span class="line">biom convert -i results/feature_table/feature-<span class="keyword">table</span>.biom <span class="comment">-o results</span>/feature_table/<span class="comment">feature-table.txt --to-tsv</span></span><br><span class="line">biom add-metadata -i results/feature_table/feature-<span class="keyword">table</span>.biom <span class="comment">-o results</span>/feature_table/<span class="comment">feature-table-tax.biom --observation-metadata-fp results</span>/taxonomy/<span class="comment">taxonomy.tsv --observation-header OTUID,taxonomy,confidence</span></span><br><span class="line">biom convert -i results/feature-<span class="keyword">table</span>/feature-<span class="keyword">table</span>-tax.biom <span class="comment">-o results</span>/feature-<span class="keyword">table</span>/<span class="comment">feature-table-tax.txt --to-tsv --header-key taxonomy</span></span><br></pre></td></tr></table></figure>
<p>-&gt; get absolute abundance table with taxonomy information at different level (e.g. Phylum)</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">qiime taxa collapse --i-<span class="keyword">table</span> results/<span class="keyword">table</span>.qza <span class="comment">--i-taxonomy results</span>/taxonomy.qza --p-level <span class="number">2</span> --o-collapsed-<span class="keyword">table</span> results/<span class="comment">table-phylum.qza</span></span><br><span class="line">qiime tools export --input-path results/<span class="keyword">table</span>-phylum.qza <span class="comment">--output-path results</span>/feature_table/<span class="comment">phylum</span></span><br><span class="line">biom convert -i results/feature_table/phylum/feature-<span class="keyword">table</span>.biom <span class="comment">-o results</span>/feature_table/<span class="comment">phylum</span>/feature-<span class="keyword">table</span>.txt --to-tsv</span><br></pre></td></tr></table></figure>
<p>-&gt; get absolute abundance table with taxonomy information at different level (e.g. phylum) and treatment (e.g. group2)</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">qiime feature-<span class="keyword">table</span> group --i-<span class="keyword">table</span> results/<span class="keyword">table</span>-phylum.qza --p-axis <span class="keyword">sample</span> --p-mode <span class="keyword">sum</span> --<span class="keyword">m</span>-metadata-<span class="keyword">file</span> raw_data/mapping.txt --<span class="keyword">m</span>-metadata-column group2 --o-grouped-<span class="keyword">table</span> results/<span class="keyword">table</span>-phylum-group2.qza</span><br><span class="line">qiime metadata <span class="keyword">tabulate</span> --<span class="keyword">m</span>-<span class="keyword">input</span>-<span class="keyword">file</span> results/<span class="keyword">table</span>-phylum-group2.qza --o-visualization results/<span class="keyword">table</span>-phylum-group2.qzv</span><br><span class="line">qiime tools export --<span class="keyword">input</span>-path results/<span class="keyword">table</span>-phylum-group2.qza --output-path results/<span class="keyword">table</span>-phylum-group2</span><br><span class="line">biom convert -i results/<span class="keyword">table</span>-phylum-group2/feature-<span class="keyword">table</span>.biom -o results/<span class="keyword">table</span>-phylum-group2/feature-<span class="keyword">table</span>-group2.txt --to-tsv</span><br></pre></td></tr></table></figure>
<h3 id="Relative-abundance">Relative abundance</h3>
<p>-&gt; get total relative abundance table with taxonomy information</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">qiime feature-<span class="keyword">table</span> relative-frequency <span class="comment">--i-table results</span>/<span class="keyword">table</span>.qza --o-relative-frequency-<span class="keyword">table</span> results/<span class="comment">table-relative.qza</span></span><br><span class="line">qiime tools export --input-path results/<span class="keyword">table</span>-relative.qza <span class="comment">--output-path results</span>/feature_table_relative</span><br><span class="line">biom convert -i results/<span class="comment">feature_table_relative</span>/feature-<span class="keyword">table</span>.biom -o results/<span class="comment">feature_table_relative</span>/feature-<span class="keyword">table</span>-relative.txt --to-tsv</span><br><span class="line">biom add-metadata -i results/<span class="comment">feature_table_relative</span>/feature-<span class="keyword">table</span>.biom -o results/<span class="comment">feature_table_relative</span>/feature-<span class="keyword">table</span>-relative-taxonomy.biom --observation-metadata-fp results/<span class="comment">taxonomy</span>/taxonomy.tsv --observation-header OTUID,taxonomy,confidence</span><br><span class="line">biom convert -i results/<span class="comment">feature_table_relative</span>/feature-<span class="keyword">table</span>-relative-taxonomy.biom -o results/<span class="comment">feature_table_relative</span>/feature-<span class="keyword">table</span>-relative-taxonomy.txt --to-tsv --header-key taxonomy</span><br></pre></td></tr></table></figure>
<p>-&gt; get relative abundance table with taxonomy information at different level (e.g. Phylum)<br>
–&gt; statistic absolute abundance table to get the relative abundance table at different level<br>
–&gt; see below</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">qiime feature-<span class="keyword">table</span> relative-frequency <span class="comment">--i-table results</span>/<span class="keyword">table</span>-phylum.qza --o-relative-frequency-<span class="keyword">table</span> results/<span class="comment">feature_table_relative</span>/phylum/<span class="comment">table-relative-phylum.qza</span></span><br><span class="line">qiime tools export --input-path results/feature_table_relative/phylum/<span class="keyword">table</span>-relative-phylum.qza <span class="comment">--output-path results</span>/feature_table_relative/<span class="comment">phylum</span>/</span><br><span class="line">biom convert -i results/<span class="comment">feature_table_relative</span>/phylum/<span class="comment">feature-table.biom -o results</span>/feature_table_relative/<span class="comment">phylum</span>/feature-<span class="keyword">table</span>-phylum.txt --to-tsv</span><br></pre></td></tr></table></figure>
<h3 id="Relative-abundance-barplot">Relative abundance barplot</h3>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">qiime taxa barplot --i-<span class="selector-tag">table</span> results/<span class="selector-tag">table</span><span class="selector-class">.qza</span> --i-taxonomy results/taxonomy<span class="selector-class">.qza</span> --m-metadata-file raw_data/mapping<span class="selector-class">.txt</span> --o-visualization results/taxa_barplot.qzv</span><br></pre></td></tr></table></figure>
<h3 id="Absolute-abundance-heatmap">Absolute abundance heatmap</h3>
<p>phylum level &amp; treatment group2</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">qiime feature-<span class="keyword">table</span> heatmap --i-<span class="keyword">table</span> results/<span class="keyword">table</span>-phylum.qza --output-<span class="keyword">dir</span> results/phylum-heatmap --<span class="keyword">m</span>-<span class="keyword">sample</span>-metadata-<span class="keyword">file</span> raw_data/mapping.txt --<span class="keyword">m</span>-<span class="keyword">sample</span>-metadata-column group2</span><br></pre></td></tr></table></figure>
<h3 id="Abundance-comparison-ANCOM">Abundance comparison (ANCOM)</h3>
<p>-&gt; different treatment (e.g. group2)</p>
<figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">qiime composition<span class="built_in"> add-pseudocount </span>--i-table results/table.qza --o-composition-table results/comp-table.qza</span><br><span class="line">qiime composition ancom --i-table results/comp-table.qza --m-metadata-file raw_data/mapping.txt --m-metadata-column group2 --o-visualization results/ancom-group2.qzv</span><br></pre></td></tr></table></figure>
<p>-&gt; different taxonomy level (e.g. Phylum)</p>
<figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">qiime composition<span class="built_in"> add-pseudocount </span>--i-table results/table-12.qza --o-composition-table results/comp-table-phylum.qza</span><br><span class="line">qiime composition ancom --i-table results/comp-table-phylum.qza --m-metadata-file raw_data/mapping.txt --m-metadata-column group2 --o-visualization results/phylum-ancom-group2.qzv</span><br></pre></td></tr></table></figure>
<h3 id="Differential-abundance-analysis">Differential abundance analysis</h3>
<p>-&gt; which factor result in the variety of relative abundance?<br>
correlation-clustering</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">qiime gneiss correlation-clustering --<span class="built_in">i</span>-<span class="built_in">table</span> results/<span class="built_in">table</span>.qza --o-clustering results/hierarchy.qza</span><br></pre></td></tr></table></figure>
<p>gradient-clustering (the problem of overfitting, use it with caution)</p>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">qiime </span><span class="string">gneiss </span><span class="string">gradient-clustering </span><span class="built_in">--i-table</span> <span class="string">results/</span><span class="string">table.</span><span class="string">qza </span><span class="built_in">--m-gradient-file</span> <span class="string">raw_data/</span><span class="string">mapping.</span><span class="string">txt </span><span class="built_in">--m-gradient-column</span> <span class="string">salinity </span><span class="built_in">--o-clustering</span> <span class="string">results/</span><span class="string">gradient-hierarchy.</span><span class="string">qza </span><span class="comment">#salinity</span></span><br></pre></td></tr></table></figure>
<p>visualization of <code>hierarchy.qza</code> using heatmap</p>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">qiime</span> <span class="comment">gneiss</span> <span class="comment">dendrogram</span><span class="literal">-</span><span class="comment">heatmap</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">table</span> <span class="comment">results/table</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">i</span><span class="literal">-</span><span class="comment">tree</span> <span class="comment">results/hierarchy</span><span class="string">.</span><span class="comment">qza</span> --<span class="comment">m</span><span class="literal">-</span><span class="comment">metadata</span><span class="literal">-</span><span class="comment">file</span> <span class="comment">raw_data/mapping</span><span class="string">.</span><span class="comment">txt</span> --<span class="comment">m</span><span class="literal">-</span><span class="comment">metadata</span><span class="literal">-</span><span class="comment">column</span> <span class="comment">group2</span> --<span class="comment">p</span><span class="literal">-</span><span class="comment">color</span><span class="literal">-</span><span class="comment">map</span> <span class="comment">seismic</span> --<span class="comment">o</span><span class="literal">-</span><span class="comment">visualization</span> <span class="comment">results/heatmap</span><span class="string">.</span><span class="comment">qzv</span></span><br></pre></td></tr></table></figure>
<p>-&gt; make different assumptions basing on the results, then do experiment to verify it.</p>
<blockquote>
<p><a href="https://docs.qiime2.org/2020.6/tutorials/gneiss/" target="_blank" rel="noopener">https://docs.qiime2.org/2020.6/tutorials/gneiss/</a></p>
</blockquote>
<h2 id="others">others</h2>
<h3 id="q2-longitudinal">q2-longitudinal</h3>
<p><a href="https://docs.qiime2.org/2020.6/tutorials/longitudinal/" target="_blank" rel="noopener">Performing longitudinal and paired sample comparisons</a></p>
<h3 id="q2-sample-classifier">q2-sample-classifier</h3>
<p><a href="https://docs.qiime2.org/2020.6/tutorials/sample-classifier/" target="_blank" rel="noopener">Predicting sample metadata values</a></p>
<h2 id="Online-visualization-tools">Online visualization tools</h2>
<p>ampvis2: <a href="https://kasperskytte.shinyapps.io/shinyampvis/" target="_blank" rel="noopener">https://kasperskytte.shinyapps.io/shinyampvis/</a><br>
needs <code>feature_table_taxonomy.biom</code> and <code>mapping.txt</code> files.</p>
<p>Ref:</p>
<blockquote>
<p>qiime2: <a href="https://qiime2.org/" target="_blank" rel="noopener">https://qiime2.org/</a><br>
微生物组16S rRNA数据分析小结: <a href="https://mp.weixin.qq.com/s/PDSk-zjKxQkTZfbc7bpH8A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/PDSk-zjKxQkTZfbc7bpH8A</a><br>
扩增子分析流程：<a href="https://mp.weixin.qq.com/s/V156q-jLhfJtFdDd_NQWjQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/V156q-jLhfJtFdDd_NQWjQ</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Metabarcoding</category>
      </categories>
      <tags>
        <tag>qiime2</tag>
      </tags>
  </entry>
  <entry>
    <title>nanoplot - plotting scripts for long read sequencing data</title>
    <url>/2020/07/01/biosoft-nanoplot/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> Stats and plots for long reads.</p>
<a id="more"></a>
<h1>Installation</h1>
<p><code>conda install -y nanoplot</code></p>
<h1>Full usage</h1>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">usage: NanoPlot [-<span class="keyword">h</span>] [-v] [-t THREADS] [--verbose] [--store] [--raw]</span><br><span class="line">                [-o OUTDIR] [-p PREFIX] [--maxlength <span class="keyword">N</span>] [--minlength <span class="keyword">N</span>]</span><br><span class="line">                [--drop_outliers] [--downsample <span class="keyword">N</span>] [--loglength]</span><br><span class="line">                [--percentqual] [--alength] [--minqual <span class="keyword">N</span>]</span><br><span class="line">                [--readtype &#123;1D,2D,1D2&#125;] [--barcoded] [--runtime_until <span class="keyword">N</span>]</span><br><span class="line">                [-c COLOR]</span><br><span class="line">                [-f &#123;eps,jpeg,jpg,pdf,pgf,png,ps,raw,rgba,svg,svgz,tif,tiff&#125;]</span><br><span class="line">                [--plots [&#123;kde,hex,dot,pauvre&#125; [&#123;kde,hex,dot,pauvre&#125; ...]]]</span><br><span class="line">                [--listcolors] [--<span class="keyword">no</span>-N50] [--N50] [--title TITLE]</span><br><span class="line">                (--fastq <span class="keyword">file</span> [<span class="keyword">file</span> ...] | --fasta <span class="keyword">file</span> [<span class="keyword">file</span> ...] | --fastq_rich <span class="keyword">file</span> [<span class="keyword">file</span> ...] | --fastq_minimal <span class="keyword">file</span> [<span class="keyword">file</span> ...] | --summary <span class="keyword">file</span> [<span class="keyword">file</span> ...] | --bam <span class="keyword">file</span> [<span class="keyword">file</span> ...] | --cram <span class="keyword">file</span> [<span class="keyword">file</span> ...] | --pickle pickle)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">General options:</span><br><span class="line">  -<span class="keyword">h</span>, --<span class="keyword">help</span>            show the <span class="keyword">help</span> and <span class="keyword">exit</span></span><br><span class="line">  -v, --<span class="keyword">version</span>         <span class="keyword">Print</span> <span class="keyword">version</span> and <span class="keyword">exit</span>.</span><br><span class="line">  -t, --threads THREADS <span class="keyword">Set</span> the allowed number of threads to be used <span class="keyword">by</span> the script</span><br><span class="line">  --verbose             Write <span class="keyword">log</span> messages also to terminal.</span><br><span class="line">  --store               Store the extracted data <span class="keyword">in</span> a pickle <span class="keyword">file</span> <span class="keyword">for</span> future plotting.</span><br><span class="line">  --raw                 Store the extracted data <span class="keyword">in</span> <span class="keyword">tab</span> separated <span class="keyword">file</span>.</span><br><span class="line">  -o, --outdir OUTDIR   Specify directory <span class="keyword">in</span> <span class="keyword">which</span> output has to be created.</span><br><span class="line">  -p, --prefix PREFIX   Specify <span class="keyword">an</span> optional prefix to be used <span class="keyword">for</span> the output files.</span><br><span class="line"></span><br><span class="line">Options <span class="keyword">for</span> filtering or transforming <span class="keyword">input</span> prior to plotting:</span><br><span class="line">  --maxlength <span class="keyword">N</span>         Hide reads longer than length specified.</span><br><span class="line">  --minlength <span class="keyword">N</span>         Hide reads shorter than length specified.</span><br><span class="line">  --drop_outliers       <span class="keyword">Drop</span> outlier reads with extreme long length.</span><br><span class="line">  --downsample <span class="keyword">N</span>        Reduce dataset to <span class="keyword">N</span> reads <span class="keyword">by</span> random sampling.</span><br><span class="line">  --loglength           Logarithmic scaling of lengths <span class="keyword">in</span> plots.</span><br><span class="line">  --percentqual         <span class="keyword">Use</span> qualities <span class="keyword">as</span> theoretical percent identities.</span><br><span class="line">  --alength             <span class="keyword">Use</span> aligned <span class="keyword">read</span> lengths rather than sequenced length (bam mode)</span><br><span class="line">  --minqual <span class="keyword">N</span>           <span class="keyword">Drop</span> reads with <span class="keyword">an</span> average quality lower than specified.</span><br><span class="line">  --runtime_until <span class="keyword">N</span>     Only take the <span class="keyword">N</span> first hours of a <span class="keyword">run</span></span><br><span class="line">  --readtype            <span class="keyword">Which</span> <span class="keyword">read</span> <span class="keyword">type</span> to extract information <span class="keyword">about</span> from a summary <span class="keyword">file</span>.</span><br><span class="line">                        <span class="keyword">One</span> of 1D (default), 2D, 1D2</span><br><span class="line">  --barcoded            <span class="keyword">Use</span> <span class="keyword">if</span> you want to <span class="keyword">split</span> the summary <span class="keyword">file</span> <span class="keyword">by</span> barcode</span><br><span class="line"></span><br><span class="line">Options <span class="keyword">for</span> customizing the plots created:</span><br><span class="line">  -c, --color COLOR     Specify a color <span class="keyword">for</span> the plots, must be a valid matplotlib color</span><br><span class="line">  -f, --<span class="keyword">format</span>          Specify the output <span class="keyword">format</span> of the plots.</span><br><span class="line">                        <span class="keyword">One</span> of png [default], eps,jpeg,jpg,pdf,pgf,ps,raw,rgba,svg,svgz,tif,tiff</span><br><span class="line">  --plots               Specify <span class="keyword">which</span> bivariate plots have to be made.</span><br><span class="line">                        <span class="keyword">One</span> or <span class="keyword">more</span> of 'dot' (default), 'kde' (default), 'hex' and 'pauvre'</span><br><span class="line">  --listcolors          <span class="keyword">List</span> the colors <span class="keyword">which</span> are available <span class="keyword">for</span> plotting and <span class="keyword">exit</span>.</span><br><span class="line">  --<span class="keyword">no</span>-N50              Hide the N50 <span class="keyword">mark</span> <span class="keyword">in</span> the <span class="keyword">read</span> length <span class="keyword">histogram</span></span><br><span class="line">  --N50                 Show the N50 <span class="keyword">mark</span> <span class="keyword">in</span> the <span class="keyword">read</span> length <span class="keyword">histogram</span></span><br><span class="line">  --title TITLE         Add a title to all plots, requires quoting <span class="keyword">if</span> using spaces</span><br><span class="line"></span><br><span class="line"><span class="keyword">Input</span> data sources, <span class="keyword">one</span> of these is required.:</span><br><span class="line">  --fastq <span class="keyword">file</span> [<span class="keyword">file</span> ...]</span><br><span class="line">                        Data is <span class="keyword">in</span> <span class="keyword">one</span> or <span class="keyword">more</span> default fastq <span class="keyword">file</span>(s).</span><br><span class="line">  --fasta <span class="keyword">file</span> [<span class="keyword">file</span> ...]</span><br><span class="line">                        Data is <span class="keyword">in</span> <span class="keyword">one</span> or <span class="keyword">more</span> default fasta <span class="keyword">file</span>(s).</span><br><span class="line">  --fastq_rich <span class="keyword">file</span> [<span class="keyword">file</span> ...]</span><br><span class="line">                        Data is <span class="keyword">in</span> <span class="keyword">one</span> or <span class="keyword">more</span> fastq <span class="keyword">file</span>(s) generated <span class="keyword">by</span> albacore or MinKNOW with</span><br><span class="line">                        additional information concerning channel and time.</span><br><span class="line">  --fastq_minimal <span class="keyword">file</span> [<span class="keyword">file</span> ...]</span><br><span class="line">                        Data is <span class="keyword">in</span> <span class="keyword">one</span> or <span class="keyword">more</span> fastq <span class="keyword">file</span>(s) generated <span class="keyword">by</span> albacore or MinKNOW with</span><br><span class="line">                        additional information concerning channel and time. Minimal data is extracted</span><br><span class="line">                        swiftly without elaborate checks.</span><br><span class="line">  --summary <span class="keyword">file</span> [<span class="keyword">file</span> ...]</span><br><span class="line">                        Data is <span class="keyword">in</span> <span class="keyword">one</span> or <span class="keyword">more</span> summary <span class="keyword">file</span>(s) generated <span class="keyword">by</span> albacore or guppy.</span><br><span class="line">  --bam <span class="keyword">file</span> [<span class="keyword">file</span> ...]</span><br><span class="line">                        Data is <span class="keyword">in</span> <span class="keyword">one</span> or <span class="keyword">more</span> sorted bam <span class="keyword">file</span>(s).</span><br><span class="line">  --cram <span class="keyword">file</span> [<span class="keyword">file</span> ...]</span><br><span class="line">                        Data is <span class="keyword">in</span> <span class="keyword">one</span> or <span class="keyword">more</span> sorted cram <span class="keyword">file</span>(s).</span><br><span class="line">  --pickle pickle       Data is a pickle <span class="keyword">file</span> stored earlier.</span><br></pre></td></tr></table></figure>
<h1>Use cases</h1>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">NanoPlot</span> <span class="selector-tag">--fastq</span> <span class="selector-tag">all</span><span class="selector-class">.filtered</span><span class="selector-class">.fastq</span><span class="selector-class">.gz</span> <span class="selector-tag">--N50</span> <span class="selector-tag">-t</span> 8 <span class="selector-tag">--plots</span> <span class="selector-tag">hex</span> <span class="selector-tag">dot</span> <span class="selector-tag">pauvre</span> <span class="selector-tag">kde</span> <span class="selector-tag">-o</span> <span class="selector-tag">all</span><span class="selector-class">.filtered</span><span class="selector-class">.fastq</span><span class="selector-class">.nanoplot</span></span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/nanopore-analysis-fulllength16Sdatabyflongle/6.nanoplot1.png" alt="6.nanopolt1"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/nanopore-analysis-fulllength16Sdatabyflongle/6.nanoplot2.png" alt="6.nanoplot2"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/nanopore-analysis-fulllength16Sdatabyflongle/6.nanoplot3.png" alt="6.nanoplot3"></p>
<p>Ref:</p>
<blockquote>
<p>NanoPlot: <a href="https://github.com/wdecoster/NanoPlot" target="_blank" rel="noopener">https://github.com/wdecoster/NanoPlot</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Biosoft</category>
      </categories>
      <tags>
        <tag>Biosoft</tag>
      </tags>
  </entry>
  <entry>
    <title>qcat - a Python command-line tool for demultiplexing Oxford Nanopore reads from FASTQ files.</title>
    <url>/2020/07/01/biosoft-qcat/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> Demultiplex: It accepts basecalled <em>FASTQ</em> files and splits the reads into separate FASTQ files <u>based on their barcode</u>.</p>
<a id="more"></a>
<h1>Installation</h1>
<p><code>conda install -y qcat</code></p>
<h1>Full usage</h1>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">usage: qcat [-h] [-V] [-l LOG] [<span class="comment">--quiet] [-f FASTQ] [-b BARCODE_DIR]</span></span><br><span class="line">            [-o OUTPUT] [<span class="comment">--min-score MIN_QUAL] [--detect-middle] [-t THREADS]</span></span><br><span class="line">            [<span class="comment">--min-read-length MIN_LENGTH] [--tsv] [--trim]</span></span><br><span class="line">            [-k &#123;Auto,RAB204,RAB204/RAB214,VMK001,NBD114,DUAL,NBD103/NBD104,PBK004/LWB001,RAB214,RBK004,PBC096,PBC001,NBD104/NBD114,RPB004/RLB001,RBK001&#125;]</span><br><span class="line">            [<span class="comment">--list-kits] [--guppy | --epi2me | --dual | --simple]</span></span><br><span class="line">            [<span class="comment">--no-batch] [--filter-barcodes]</span></span><br><span class="line">            [<span class="comment">--simple-barcodes SIMPLE_BARCODES]</span></span><br><span class="line"></span><br><span class="line">Python command-line tool <span class="keyword">for</span> demultiplexing Oxford Nanopore reads <span class="keyword">from</span> FASTQ files</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, <span class="comment">--help            show this help message and exit</span></span><br><span class="line">  -V, <span class="comment">--version         show program's version number and exit</span></span><br><span class="line">  -l LOG, <span class="comment">--log LOG     Print debug information</span></span><br><span class="line">  <span class="comment">--quiet               Don't print summary</span></span><br><span class="line"></span><br><span class="line">General settings:</span><br><span class="line">  -f FASTQ, <span class="comment">--fastq FASTQ</span></span><br><span class="line">                        Barcoded <span class="built_in">read</span> <span class="built_in">file</span></span><br><span class="line">  -b BARCODE_DIR, <span class="comment">--barcode_dir BARCODE_DIR</span></span><br><span class="line">                        If specified, qcat will demultiplex reads <span class="keyword">to</span> this</span><br><span class="line">                        folder</span><br><span class="line">  -o OUTPUT, <span class="comment">--output OUTPUT</span></span><br><span class="line">                        Output <span class="built_in">file</span> trimmed reads will be written <span class="keyword">to</span> (default:</span><br><span class="line">                        stdout).</span><br><span class="line">  <span class="comment">--min-score MIN_QUAL  Minimum barcode score. Barcode calls with a lower</span></span><br><span class="line">                        score will be discarded. Must be <span class="keyword">between</span> <span class="number">0</span> <span class="keyword">and</span> <span class="number">100.</span></span><br><span class="line">                        (default: <span class="number">60</span>)</span><br><span class="line">  <span class="comment">--detect-middle       Search for adapters in the whole read</span></span><br><span class="line">  -t THREADS, <span class="comment">--threads THREADS</span></span><br><span class="line">                        Number <span class="keyword">of</span> threads. Only works <span class="keyword">with</span> <span class="keyword">in</span> guppy mode</span><br><span class="line">  <span class="comment">--min-read-length MIN_LENGTH</span></span><br><span class="line">                        Reads short than &lt;min-<span class="built_in">read</span>-<span class="built_in">length</span>&gt; <span class="keyword">after</span> trimming will</span><br><span class="line">                        be discarded.</span><br><span class="line">  <span class="comment">--tsv                 Prints a tsv file containing barcode information each</span></span><br><span class="line">                        <span class="built_in">read</span> <span class="keyword">to</span> stdout.</span><br><span class="line">  <span class="comment">--trim                Remove adapter and barcode sequences from reads.</span></span><br><span class="line">  -k &#123;Auto,RAB204,RAB204/RAB214,VMK001,NBD114,DUAL,NBD103/NBD104,PBK004/LWB001,RAB214,RBK004,PBC096,PBC001,NBD104/NBD114,RPB004/RLB001,RBK001&#125;, <span class="comment">--kit &#123;Auto,RAB204,RAB204/RAB214,VMK001,NBD114,DUAL,NBD103/NBD104,PBK004/LWB001,RAB214,RBK004,PBC096,PBC001,NBD104/NBD114,RPB004/RLB001,RBK001&#125;</span></span><br><span class="line">                        Sequencing kit. Specifying <span class="keyword">the</span> correct kit will</span><br><span class="line">                        improve sensitivity <span class="keyword">and</span> specificity <span class="keyword">and</span> runtime</span><br><span class="line">                        (default: auto)</span><br><span class="line">  <span class="comment">--list-kits           List all supported kits</span></span><br><span class="line"></span><br><span class="line">Demultiplexing modes:</span><br><span class="line">  <span class="comment">--guppy               Use Guppy's demultiplexing algorithm (default: false)</span></span><br><span class="line">  <span class="comment">--epi2me              Use EPI2ME's demultiplexing algorithm (default: true)</span></span><br><span class="line">  <span class="comment">--dual                Use dual barcoding algorithm</span></span><br><span class="line">  <span class="comment">--simple              Use simple demultiplexing algorithm. Only looks for</span></span><br><span class="line">                        barcodes, <span class="keyword">not</span> <span class="keyword">for</span> adapter sequences. Use only <span class="keyword">for</span></span><br><span class="line">                        testing purposes!</span><br><span class="line"></span><br><span class="line">EPI2ME options (only valid <span class="keyword">with</span> <span class="comment">--epi2me):</span></span><br><span class="line">  <span class="comment">--no-batch            Don't use information from multiple reads for kit</span></span><br><span class="line">                        detection (default: <span class="literal">false</span>)</span><br><span class="line">  <span class="comment">--filter-barcodes     Filter rare barcode calls when run in batch mode</span></span><br><span class="line"></span><br><span class="line">Simple options (only valid <span class="keyword">with</span> <span class="comment">--simple):</span></span><br><span class="line">  <span class="comment">--simple-barcodes SIMPLE_BARCODES</span></span><br><span class="line">                        Use <span class="number">12</span> (standard) <span class="keyword">or</span> <span class="number">96</span> (extended) barcodes <span class="keyword">for</span></span><br><span class="line">                        demultiplexing</span><br></pre></td></tr></table></figure>
<h1>Use cases</h1>
<p>Demultiplexing multiple fastq files from a folder</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">cat</span> <span class="string">fastq_pass/*.fastq | qcat -b demux_qcat -k PBK004/LWB001 --tsv &gt;sequencing_summary.tsv</span></span><br><span class="line"><span class="attr">mv</span> <span class="string">sequencing_summary.tsv demux_qcat/</span></span><br><span class="line"><span class="attr">rm</span> <span class="string">-rf demux_qcat/none.fastq</span></span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/nanopore-analysis-fulllength16Sdatabyflongle/1.rawdata.png" alt="1.rawdata"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/nanopore-analysis-fulllength16Sdatabyflongle/2.qcat.png" alt="2.qcat"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/nanopore-analysis-fulllength16Sdatabyflongle/3.qcat_result.png" alt="3.qcat_result"><br>
sequencing_summary.tsv<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/nanopore-analysis-fulllength16Sdatabyflongle/3.sequencing_summary_qcat.png" alt="3.sequencing_summary.tsv"></p>
<p>Ref:</p>
<blockquote>
<p>qcat: <a href="https://github.com/nanoporetech/qcat" target="_blank" rel="noopener">https://github.com/nanoporetech/qcat</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Biosoft</category>
      </categories>
      <tags>
        <tag>Biosoft</tag>
      </tags>
  </entry>
  <entry>
    <title>文献笔记7|来源网络或公司|空气采样器的比较和评估</title>
    <url>/2020/04/09/literatures-7-comparaisonofairsamplers/</url>
    <content><![CDATA[<p><strong>摘要：</strong> 三篇文章/文献。| L1：三种主动式空气采样器监测空气中微生物的比较评估；L2：七种监测空气中可存活微生物的不同空气采样器收集效率的比较评估；L3：便携式气溶胶采样器的比较。</p>
<a id="more"></a>
<h3 id="L1：三种主动式空气采样器监测空气中微生物的比较评估">L1：三种主动式空气采样器监测空气中微生物的比较评估</h3>
<h4 id="文献">文献</h4>
<p>Der, E. F., Stablein, J. P., &amp; Coleman, D. A. (2005). Comparative evaluation of three active air samplers. Pharmaceutical Technology, 110-116.</p>
<h4 id="笔记⬃">笔记⬃</h4>
<ul>
<li>
<p>three active air samplers, 均是将气溶胶颗粒收集到平板上<br>
|Sampler|priciple|flow rate (L/min)|<br>
|:–|:–|:–|<br>
|SAS Super 180|impaction|180|<br>
|RCS Plus|impaction|50|<br>
|Air Ideal|impaction|100|</p>
</li>
<li>
<p>方法</p>
<ul>
<li>samplign site: indoors, in a nonclassified lab area of nonmicrobiological practices</li>
<li>design: run for the same period of time (10 min) at the same time</li>
<li>sampling time: choose randomly throughout the day and over a period of several days; 15 days * 9 samples/day = 135 samples.</li>
<li>culture medium: RCS Plus &amp; Air Ideal: trypticase soy agar (TSA) media; SAS 180: TSA + lecithin + polysorbate 80 neutralizer. 32 ℃, ≥ 72 h。</li>
</ul>
</li>
<li>
<p>数据分析</p>
<ul>
<li>cfu/ft<sup>3</sup>, then transformed to log<sub>10</sub></li>
<li>mixed-effects model</li>
</ul>
</li>
<li>
<p>结果</p>
<ul>
<li>SAS 180和Air Ideal的平均回收相似，且均显著低于RCS Plus。</li>
<li>三个采样器的重复精度均很高。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-7-comparaisonofairsamplers/1T1.jpg" alt="1T1"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-7-comparaisonofairsamplers/1T2.jpg" alt="1T2"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-7-comparaisonofairsamplers/1F1.jpg" alt="1F1"></li>
</ul>
</li>
<li>
<p>结论</p>
<ul>
<li>SAS 180和Air Ideal可以任选一个</li>
<li>RCS和以上两者的差异虽小，但是是显著的。可以根据所测定的环境背景的影响程度确定是否选择RCS</li>
</ul>
</li>
</ul>
<h3 id="L2-七种监测空气中可存活微生物的不同空气采样器收集效率的比较评估">L2: 七种监测空气中可存活微生物的不同空气采样器收集效率的比较评估</h3>
<h4 id="文献-2">文献</h4>
<p>Morghen, C. D. G. (2018). Comparative Evaluation of the Collection Efficiency of Seven Different Air Samplers to Monitor Airborne Viable Microorganisms. EC Microbiology, 14, 487-493.</p>
<h4 id="笔记">笔记</h4>
<ul>
<li>
<p>材料和方法</p>
<ul>
<li>采样器
<ul>
<li>SENNON SW1: figure a</li>
<li>MAS-100<sup>TM</sup>: figure b</li>
<li>VWR®: figure c</li>
<li>TRIO.BAS<sup>TM</sup> 100: figure d</li>
<li>TRIO.BAS<sup>TM</sup> 200: figure e</li>
<li>AWEL BC100: figure f</li>
<li>Air IDEAL®: figure g</li>
</ul>
<center class="half"><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-7-comparaisonofairsamplers/2-1-1.jpg" width="200"/><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-7-comparaisonofairsamplers/2-1-2.jpg" width="200"/><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-7-comparaisonofairsamplers/2-1-3.jpg" width="200"/></center>
</li>
<li>流速：100 L/min; 200 L/min</li>
<li>clean liquid: 70% ethyl alcohol</li>
<li>culture medium: TSA-containing plates with lecithin and polysorbate 80; 30 ℃; 48 h</li>
<li>统计分析：one-way ANOVA and Bonferroni analysis of variance</li>
</ul>
</li>
<li>
<p>结果和讨论</p>
<ul>
<li>采样效率：Sennon SW1相比其他采样器较低，但是差异不显著。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-7-comparaisonofairsamplers/2-F1.jpg" alt="2-F1"></li>
<li>TRIO.BAS<sup>TM</sup> 100 vs 200: 采样效率差异不显著<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-7-comparaisonofairsamplers/2-T1.jpg" alt="2-T1"></li>
</ul>
</li>
</ul>
<h3 id="L3-便携式气溶胶采样器的比较">L3: 便携式气溶胶采样器的比较</h3>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-7-comparaisonofairsamplers/3-F1-1.jpg" alt="3-F1-1"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-7-comparaisonofairsamplers/3-F1-2.jpg" alt="3-F1-2"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-7-comparaisonofairsamplers/3-F1-3.jpg" alt="3-F1-3"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-7-comparaisonofairsamplers/3-F1-4.jpg" alt="3-F1-4"></p>
]]></content>
      <categories>
        <category>Literature notes</category>
        <category>Air Sampler</category>
      </categories>
      <tags>
        <tag>Air Sampler</tag>
      </tags>
  </entry>
  <entry>
    <title>☆文献笔记2|BuildEnv2014|采样器的选择对高通量测序表征室内微生物组的影响</title>
    <url>/2020/03/30/literatures-2-Hoisington-2014/</url>
    <content><![CDATA[<p><strong>摘要</strong>：<strong>背景：</strong> 对室内环境中微生物潜在健康影响的认识与采样和微生物测序技术的最新进展相结合，导致室内微生物研究的发展。但是，在这些研究中使用的采样器的类型和位置有很大不同。<strong>手段：</strong> 本研究旨在比较放置在同一建筑物中的六个不同的采样器（两个被动采样器和四个主动采样器）在相隔一周的两次连续采样事件中收集的微生物群落。对收集的所有样品进行焦磷酸测序，以对细菌和真菌群落进行深入分析。<strong>结果：</strong> 从被动采样器（吸尘加热通风采样器和空调过滤器灰尘采样器）收集的微生物群落比四个主动生物气溶胶采样器收集的短期样本具有更大的多样性。六个采样器采集的微生物群落结构存在显着差异。相对于在同一采样事件中使用不同采样器采集的样本，给定采样器采集的微生物群落与同一时间同一采样器采集的样品相比更为相关。<strong>结论：</strong> 这些结果表明，谨慎进行多个研究之间的比较，因为每个采样器可能正在收集不同的微生物群落。</p>
<a id="more"></a>
<h3 id="文献">文献</h3>
<p>Hoisington, A. J., Maestre, J. P., King, M. D., Siegel, J. A., &amp; Kinney, K. A. (2014). Impact of sampler selection on the characterization of the indoor microbiome via high-throughput sequencing. Building and Environment, 80, 274-282.</p>
<h3 id="前言">前言</h3>
<p>基于DNA的分子分析技术的飞速发展，加上计算软件和数据存储功能的改进，使得人们对室内采样重新关注起来，凭借此，可以进行直接交叉比对研究。下一代测序工作已经为包括居所、医院、教室和办公室在内的各种环境提供了越来越多的细菌和真菌数据集。这些序列集可从许多存储库（如NCBI、Qiime、MG-RAST、EBI）轻松下载，并获得对室内微生物组的有用见解。然而，<u>室内研究所用的采样技术尚未标准化，因此了解采样方法如何影响给定建筑物中采集的室内微生物组非常重要。</u><br>
主动和被动采样方法均已被用于室内环境的微生物学研究。主动式采样器包括生物气溶胶采样器，可以在选定的时间段内通过捕获设备抽取空气样本。这些采样器中的许多采样器仅限于相对较短的采样时间（如5-30 min），并且通常仅采样室内环境中总风量的一小部分。<u>在一项利用此类主动采样器（BioSampler®）进行的户外研究中，检测到空气中的微生物群落存在明显的时间差异，这表明需要重复采样才能更准确地反映当前的生物群落。</u>室内人员活动会显着增加空气中的微生物负荷，因此预计室内生物气溶胶成分也会出现这种时间变化。值得注意的是，一些主动式采样器通过更改设计以提高气流速率来解决这一问题。例如，湿壁旋风分离器可以1,250 L/min的速度运行。与大多数主动式生物气溶胶采样器相比，微生物载尘的收集提供了被动、时间累积的微生物群落样本，时间可从几天到几个月、甚至更长。在许多暴露研究中，沉降的尘土样品是最常见的室内样品。最近，从加热通风和空调（HVAC）过滤器中收集的粉尘已被用作评估空气中微生物群落的另一种被动采样方法。<br>
基于培养的分析方法是比较不同类型主动和被动采样器收集的室内微生物群落的最常用方法。<u>但是，基于培养的研究可能会使分析产生偏差，因为样品中存在的细菌种类中只有0.3％可通过培养回收。</u>使用分子测序方法，Noris et al. (2011)和Hospodsky et al. (2012)发现，HVAC过滤器收集的灰尘在门水平上的分布与从住宅和教室中收集的降尘样本大不相同。<u>这个变化可​​能部分是因为空气动力学直径的差异，与降尘相比，滤尘可以有选择地改变空气中的微生物。在主动式采样器中，采集效率是非标准的，可能取决于粒径。</u>如，Li (2011)在一项基于qPCR的研究中对部署在同一室内环境（实验室）中的四个主动式采样器进行了研究，发现采样器之间的细菌总数相差1到5倍。<u>采样器之间的另一个潜在差异是它们对DNA完整性的影响，这在采样器中并不统一。</u><br>
本研究，在室内环境中连续采样两个周，对四个同时收集的主动式生物气溶胶样品和两个被动式样品中的微生物群落进行了焦磷酸测序。主动式的采样器包括biosampler（BIO），button sampler（BS），标称孔径为2.5 µm的个人环境监测器（PEM）和湿壁旋风分离器（wetted-wall cyclone, WWC）。被动式样品包括从HVAC过滤器（HVAC）收集的空气尘埃和从高表面（SD）收集的降尘。本研究旨在更全面地比较室内环境中六个不同采样器采集的细菌和真菌群落，以描述采样器的选择对采集的微生物组的影响。</p>
<h3 id="材料和方法">材料和方法</h3>
<h4 id="采样">采样</h4>
<p>在55,000 m<sup>3</sup>的零售店进行了连续两周的微生物采样。🧹对于被动HVAC过滤器样本，在每周测试开始前，将新的MERV 7 HVAC过滤器放置在空气处理单元（AHU）。此测试的过滤器效率与日常操作相同，虽然效率更高的过滤器会捕获其他的微生物。穿过过滤器的气流主要来自室内再循环空气，因为采样期间室外风门已关闭。收集了7天的颗粒物和微生物后，从AHU中移除了HVAC过滤器，收集其中的灰尘用于DNA提取和测序。🧹对于第二个被动式采样器，从零售店最高架子上（离地面2.5 m）收集了高表面灰尘，此采样器与主动式采样器相邻放置。在HVAC过滤器被拆除的同一天，将灰尘吸到预先装有0.47 µm标称孔径滤膜的无菌三件式灰尘采样盒中。采样之前没有尝试清洁架子，因此，与室内研究中收集到的大多数降尘样品一样，架子上的灰尘收集时间未知。🧹对于主动式采样器，每周在HVAC过滤器测试的第七天，连续三个15分钟运行四个并置的主动式室内空气采样器。本研究设计试图限制主动式采样器的空间差异。然而，被动式采样器的收集时间较长，也可能会引入其他的变化。将三个15分钟的样品合并为一个样品，即代表总共45分钟的采样时间，用于DNA分析。主动式采样器包括button采样器（4 L/min）、BioSampler®（12.5 L/min）、孔径2.5 µm的个人环境监控器（10 L/min）、以及湿壁旋风分离器（100 L/min）。<u>可以发现，将采样时间归一化导致采样器收集了不同体积的空气。然而，由于微生物群落可能会发生时间变化，因此希望所有主动式采样器同时运行。</u> 🧹BS和PEM采样器装有标称孔径3.0 µm的无菌明胶过滤器，采样15 min。在15分钟的采样结束后，立即将过滤器放于含有预灭菌磷酸盐缓冲液（PBS;10 g/L NaCl，0.25 g/L KCl，1.43 g/L Na<sub>2</sub>HPO<sub>4</sub>，0.25 g/L KH<sub>2</sub>PO<sub>4</sub>）的50 mL无菌离心管中。🧹每个15分钟的采样期内，BIO采样器中均装有20 mL PBS，采样结束后，将样品转移到50 ml的离心管中。🧹WWC利用切向冲力将样品收集进无菌的0.01％Tween-20液体中，每15分钟采样将样品浓缩成几毫升，浓缩系数&gt;10<sup>6</sup>。将WWC的所有三个15分钟液体样品合并到一个无菌的50 mL离心管中。所有样品在提取DNA之前均保存在4°C下，不长于三天。</p>
<h4 id="样品处理">样品处理</h4>
<p>🧹DNA提取按照针对HVAC灰尘开发的规程进行了标准化（Noris et al. 2011），由于抑制伪像，该技术比本研究中收集的其他样品需要更严格的技术。从九个均匀间隔2.5cm<sup>2</sup>的过滤器片中获得每个HVAC过滤器的灰尘，并将其转移到50 mL小瓶中的45 mL PBS中。🧹将从高表面采集的灰尘的过滤器容器直接放入50 mL小瓶中的45 mL PBS中。🧹采样结束后，立即将BS、PEM、BIO和WWC活性样品保存在50 mL小瓶中，并放置在冰上。🧹将所有采样器的PBS小瓶超声处理并涡旋震荡10分钟。然后将样品通过20 µm孔径的过滤器进行预过滤。将每个主动式采样器采集的三个连续的15分钟样本通过相同的预过滤器，以生成复合样本。将过滤后的溶液分成两等份，通过两个0.2 µm疏水性过滤器分别进行真空过滤。一张滤膜用于细菌DNA提取，另一张滤膜用于真菌DNA提取。将每张滤膜，100 µL溶菌酶（3mg/mL）和300 µL苯酚-氯仿-异戊醇（24：24：1）放入PowerSoil DNA分离试剂盒提供的珠管（裂解珠和750 µL裂解液）中。在FastPrep-24均质器中进行打珠，按照制造商的建议以5.0 m/s的速度运行30秒，细菌DNA重复一次和真菌DNA重复两次。试剂盒的其余步骤根据制造商建议进行。使用NanoDrop分光光度计对所有DNA进行定量，并在整个项目过程中保存于-20°C。</p>
<h4 id="样品分析">样品分析</h4>
<p>将来自所有六个采样器的总共20 µL细菌和真菌DNA分别放在干冰上，送至外部实验室进行焦磷酸测序。使用条形码多重方法在454 FLX + Titanium 基因组测序仪上进行分析。如Van de Peer et al. (1996)所述，使用通用引物对在1-3可变区上扩增细菌DNA。真菌DNA在ITS和大亚基的D1/D2区域（Romanelli et al. 2010）两个靶基因座上进行扩增。ITS区用于分类学分析，D1/D2序列用于系统发育分析。对所有序列进行降噪，并在UCHIME中去除嵌合体。分析时删除了250bp以下的序列。序列通过NCBI数据库的BLASTn搜索进行分类鉴定。用Qiime开源软件包对细菌和真菌进行序列分析。基于分类、操作分类单元（OTUs）和β多样性评估了每个样品的微生物群落。本研究中使用的protocol，OTUs和群落分析（β多样性）是与分类学无关的度量。由于没有明确的百分比对应于分类学水平，因此使用de novo clustering将97％相似性序列归类到OTUs中。基于细菌的PyNAST算法和真菌的MUSCLE进行序列的比对。在Greengenes 16S核心集数据库中过滤细菌序列。将所有样品抽平为1,500个细菌序列和1,000个真菌序列，以减少样品深度偏差。使用加权UniFrac算法进行β多样性分析。</p>
<h3 id="结果和讨论">结果和讨论</h3>
<h4 id="群落分析">群落分析</h4>
<p>微生物群落分析（即，β-多样性）可使样品作为聚集的微生物群落进行比较。该方法通过考虑独立于分类学的OTUs（97％相似度）来分析群落，并使用主坐标分析图（PCoA）进行可视化。如图1所示，细菌PCoA显示<u>与相同时期采集的群落相比，相同采样器采集的群落与相同采样器采集的群落更为相似。</u>在这六个采样器中，唯一的例外是第2周的PEM采样器，其采集的微生物群落与其他样本不同。<u>并置的主动式采样器在采样事件（即第1周或第2周）方面没有显示趋势。</u><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-2-Hoisington-2014/F1.jpg" alt="F1"><br>
真菌群落分析如图2所示，其结果与细菌群落不同。两次采样的HVAC群落聚在一起，SD群落也聚在一起，与时间无关。第1周的BS、PEM和BIO样品也作为一组聚集在一起。与其他采样器相比，<u>这三个主动式采样器在体积流量（例如5-12.5 L/min）最低，这可能是一个原因。</u>但是，第2周的真菌群落或这些采样器采集的两周的细菌群落，均未观察到该结果。BS和PEM使用相同的明胶过滤器，这可能导致了某些群落相似性。但是，在第2周没有发现这种相似性。确实，第2周，包括BS在内的所有主动式采样器都密切相关，并在SD样本附近聚集在一起。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-2-Hoisington-2014/F2.jpg" alt="F2"></p>
<h4 id="分类鉴定">分类鉴定</h4>
<p>序列的分类学分类提供了有关样品多样性和观察到的分类群身份的信息。 细菌的平均读长为461 bp，真菌的平均读长为427 bp。由于在焦磷酸测序中获得的读长较短，因此在属水平或更高水平进行了分类鉴定。基于ITS条码扩增，对真菌序列进行了分类学鉴定，与大亚基的D1/D2区相比，ITS条码提供了更好的分类学分辨率。<br>
两周所有采样器采集的样本中，平均而言，变形菌门 <em>Proteobacteria</em> 是最丰富的门（在12个样本中的10个样本中最高，约占测定序列的57%）。在其他室内环境中 <em>Proteobacteria</em> 也一直是观察到的主要优势门。其他序列主要分类为放线菌门 <em>Actinobacteria</em>、厚壁菌门 <em>Firmicutes</em> 或拟杆菌门 <em>Bacteroidetes</em>，如图3所示。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-2-Hoisington-2014/F3.jpg" alt="F3"><br>
表1显示了每个样品中检测到的五个最丰富的属。由于在主动式采样器中检测到的属的总数较少，因此与灰尘样本中的群落相比，这些短期生物气溶胶采样器中检测到的五个最丰富的属占总序列的比例要高得多。第1周，<em>Propionibacterium spp.</em> (Phylum: <em>Actinobacteria</em>) 是四个主动式采样器（BIO、BS、PEM和WWC）中五个最丰富的属之一。在多个样品中发现的其他最丰富的属是BIO、BS、PEM中的 <em>Ralstonia</em> 和HVAC、PEM、SD中的 <em>Methylobacterium</em>。第2周，最丰富的共有属再次包括  <em>Methylobacterium</em>（BS、HVAC、PEM、SD），还有 <em>Sphingomonas</em>（HVAC、PEM、SD）。 <em>Methylobacterium</em>、<em>Sphingomonas</em> 和 <em>Propionibacterium</em> 已从人类菌群中测得，表明这些属可能起源于人。🤔<strong>值得注意的是，在与居住者最接近的所有四个主动式采样器中均未检测到这些物种。</strong><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-2-Hoisington-2014/T1.jpg" alt="T1"><br>
从健康的角度来看，检测到的几个属可能包含潜在的病原菌种。然而，没有在所有样本中检测到这些属。例如，仅在HVAC和SD样品中检测到了 <em>Bordetella</em>；在PEM、SD和WWC样品中检测到 <em>Mycobacterium</em>，在BIO、BS、HVAC和SD样品中检测到 <em>Clostridium</em>；在BS和SD样品中检测到 <em>Fusobacterium</em>。<u>这些结果表明，采样器的选择会影响到所检测到的微生物群落，并且可能无法识别潜在的重要属。</u><br>
如图4所示，真菌群落在纲水平上最丰富的是 <em>Dothideomycetes</em>, <em>Agaricomycetes</em>,和 <em>Sordariomycetes</em>。在所有样本中，<em>Dothideomycetes</em> 的相对丰度最高，除了HVAC样本，该样本检测到更多的蘑菇形成真菌 <em>Agaricomycetes</em>。具体而言，<em>Agaricomycetes</em> 的Trametes和Coprinellus属在HVAC灰尘样品中占优势。研究期间从同一建筑物收集的室外空气的HVAC过滤器样品中，这两个属的含量较低（数据未显示）。<u>室内研究采集的AHU部分样本可能被 <em>Agaricomycetes</em> 污染了。或者，它可能只是反映了HVAC过滤器捕获的真菌群落与本研究中其他采样器不同的事实。</u><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-2-Hoisington-2014/F4.jpg" alt="F4"><br>
采集的样品中三个最丰富的真菌属代表了所有样品总序列的86％，如表2所示。在几乎所有样品中 <em>Alternaria spp</em> 的相对丰度都较高。<em>Alternaria spp</em> 与哮喘和过敏相关，在室内研究中普遍存在，这可能是由于它们对干燥的抵抗力较强。在12个样本的10个样本中，<em>Alternaria spp</em> 一般是第一或第二最高相对丰度。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-2-Hoisington-2014/T2.jpg" alt="T2"><br>
采样器鉴定了可能与健康相关的几个不同的真菌属，包括 <em>Aspergillus</em>, <em>Cryptococcus</em>, 和 <em>Fusarium</em>。在六个采样器中的四个（HVAC、PEM、SD和WWC）中检测到了 <em>Aspergillus</em> clade。<br>
但是，仅在HVAC和SD样本中检测到了 <em>Cryptococcus</em>，仅在HVAC样本中仅检测到了 <em>Fusarium</em>。与细菌结果一致，HVAC和SD样品包含更多样的真菌群落，包括具有潜在致病性物种的属。</p>
<h4 id="操作分类单元">操作分类单元</h4>
<p>对于不同的采样器，进行了操作分类单元（OTUs）分析，这是一种独立于分类的措施。SD样品中细菌和真菌OTUs数量最多，其次是HVAC样品。这些结果在连续两个星期内进行的两组实验中都是一致的，如图5所示。Hospodsky et al. (2012)通过焦磷酸测序研究了教室的室内环境，并且观察到与HVAC灰尘相比，降尘中的OTUs数量更多。<u>在我们的研究中，降尘中额外的OTUs所代表的更大多样性被认为是不经常清洁高表面SD的产物。</u>与SD和HVAC样本相比，所有四个主动式采样器样本中细菌和真菌特有OTUs数目均较少，这很可能是由于采样周期较短。另外，通过HVAC过滤片（从中收集HVAC灰尘样品）的估计总流量比通过主动式采样器的流量高3-4个数量级。主动式采样器OTUs结果中观察到的有限多样性与基于分类学鉴定的发现一致（表1和表2）<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-2-Hoisington-2014/F5.jpg" alt="F5"><br>
在主动式采样器组中，BS采样器中特有细菌OTUs数目最多，WWC采样器中真菌OTUs多样性最高（图5）。湿壁旋风分离器在两个不同界的采样中显示出多功能性，特有细菌OTUs也位列第二高。BS采样器和PEM采样器使用明胶过滤器，该过滤器在先前的研究中已被证明可以有效捕获微生物。🤔<strong>根据PEM采样器收集到的OTUs数量和截留直径2.5 µm，真菌可能以孢子的形式悬浮在空气中，孢子比真菌细胞小，并且更耐干燥。</strong><br>
对SD样本、HVAC样本的OTUs和四个主动式采样器样本的OTUs进行了比较，如图6-7所示。由于主动式采样器采集的样本的多样性有限，因此将四个主动式采样器样本的OTUs合并起来与被动式HVAC和降尘样本进行比较。结果表明，降尘、HVAC过滤器灰尘以及组合的主动式采样器并没有捕获相同的细菌或真菌OTUs。实际上，SD和HVAC样本以及所有四个主动式采样器之间共有的细菌OTUs的比例仅略高于1％。对于真菌OTUs，共有OTUs较高，接近6％。尽管在SD中捕获了较多的OTUs，但该采样方法并不能捕获在HVAC样本或主动式采样器中发现的相同OTUs。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-2-Hoisington-2014/F6.jpg" alt="F6"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-2-Hoisington-2014/F7.jpg" alt="F7"><br>
尽管将主动式采样器并置并同时运行，但在所有四个采样器检测到的细菌OTUs中仅有13-16％是共有的，而在所有生物气溶胶采样器检测到的真菌OTUs中中仅有33-34％是共有的。尽管采样器被并置，共有OTUs差异巨大，这表明诸如采样器设计和操作之类的因素会改变所采样的微生物群落，从而改变检测到的序列并影响了从结果中推断出的微生物组。这一发现与使用Sanger测序进行的类似研究一致，该研究发现，在所有四个主动式生物气溶胶采样器中，只有25％的细菌OTUs共有（Fahlgren et al. 2011）。</p>
<h3 id="结论">结论</h3>
<p>这项研究分析了连续两周从同一建筑物中使用六个不同的室内空气采样器采集的微生物群落，以确定每个采样器采集的真菌和细菌群落的潜在差异。就β多样性而言，细菌群落似乎比真菌群落更易受所用采样器影响。分类学和OTUs分析均显示六个采样器未检测到相同的微生物群落。HVAC和SD采样器能够捕获最多样化的微生物群落；然而，在所有采样器中几乎没有观察到共有的OTUs。也许最令人惊讶的是，尽管在同一地点和同一时间进行采样，主动式生物气溶胶采样器中的微生物多样性和群落却并不相似。即使在属水平上，一些采样器中丰富度较高的属也未在其他采样器中检测到。随着诸如焦磷酸测序之类的分子技术的出现，需要更多的工作来充分表征室内采样器。必须解决诸如空气动力学直径、空气采样量、收集液体、采样时间等因素，以标准化可用于未来室内微生物组研究的采样方案，从而实现更好的结果交叉比较。在此之前，在比较使用不同采样器的研究时需要谨慎，因为从本研究中可以明显看出，采样器的选择会影响所收集的微生物群落。</p>
]]></content>
      <categories>
        <category>Literature notes</category>
        <category>Air Sampler</category>
      </categories>
      <tags>
        <tag>Air Sampler</tag>
      </tags>
  </entry>
  <entry>
    <title>porechop - adapter trimmer for Oxford Nanopore reads</title>
    <url>/2020/07/02/biosoft-porechop/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> a tool for finding adapters in Oxford Nanopore reads, trimming them from the ends and<br>
splitting reads with internal adapters.</p>
<a id="more"></a>
<h1>Installation</h1>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">conda <span class="keyword">install</span> -y porechop</span><br></pre></td></tr></table></figure>
<h1>Full usage</h1>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">usage: porechop -i INPUT [-o OUTPUT] [<span class="comment">--format &#123;auto,fasta,fastq,fasta.gz,fastq.gz&#125;] [-v VERBOSITY]</span></span><br><span class="line">                [-t THREADS] [-b BARCODE_DIR] [<span class="comment">--barcode_threshold BARCODE_THRESHOLD]</span></span><br><span class="line">                [<span class="comment">--barcode_diff BARCODE_DIFF] [--require_two_barcodes] [--untrimmed]</span></span><br><span class="line">                [<span class="comment">--discard_unassigned] [--adapter_threshold ADAPTER_THRESHOLD]</span></span><br><span class="line">                [<span class="comment">--check_reads CHECK_READS] [--scoring_scheme SCORING_SCHEME] [--end_size END_SIZE]</span></span><br><span class="line">                [<span class="comment">--min_trim_size MIN_TRIM_SIZE] [--extra_end_trim EXTRA_END_TRIM]</span></span><br><span class="line">                [<span class="comment">--end_threshold END_THRESHOLD] [--no_split] [--discard_middle]</span></span><br><span class="line">                [<span class="comment">--middle_threshold MIDDLE_THRESHOLD]</span></span><br><span class="line">                [<span class="comment">--extra_middle_trim_good_side EXTRA_MIDDLE_TRIM_GOOD_SIDE]</span></span><br><span class="line">                [<span class="comment">--extra_middle_trim_bad_side EXTRA_MIDDLE_TRIM_BAD_SIDE]</span></span><br><span class="line">                [<span class="comment">--min_split_read_size MIN_SPLIT_READ_SIZE] [-h] [--version]</span></span><br><span class="line">                Porechop: a tool for finding adapters in Oxford Nanopore reads, trimming them from the ends and</span><br><span class="line">                splitting reads <span class="keyword">with</span> internal adapters</span><br><span class="line"></span><br><span class="line">                <span class="keyword">Main</span> options:</span><br><span class="line">                  -i <span class="keyword">INPUT</span>, <span class="comment">--input INPUT        FASTA/FASTQ of input reads or a directory which will be</span></span><br><span class="line">                                                 recursively searched <span class="keyword">for</span> FASTQ files (<span class="keyword">required</span>)</span><br><span class="line">                  -o <span class="keyword">OUTPUT</span>, <span class="comment">--output OUTPUT     Filename for FASTA or FASTQ of trimmed reads (if not set, trimmed</span></span><br><span class="line">                                                 <span class="keyword">reads</span> will be printed <span class="keyword">to</span> stdout)</span><br><span class="line">                  <span class="comment">--format &#123;auto,fasta,fastq,fasta.gz,fastq.gz&#125;</span></span><br><span class="line">                                                 <span class="keyword">Output</span> <span class="keyword">format</span> <span class="keyword">for</span> the <span class="keyword">reads</span> - <span class="keyword">if</span> <span class="keyword">auto</span>, the <span class="keyword">format</span> will be chosen</span><br><span class="line">                                                 based <span class="keyword">on</span> the <span class="keyword">output</span> filename <span class="keyword">or</span> the <span class="keyword">input</span> <span class="keyword">read</span> <span class="keyword">format</span> (<span class="keyword">default</span>:</span><br><span class="line">                                                 <span class="keyword">auto</span>)</span><br><span class="line">                  -v VERBOSITY, <span class="comment">--verbosity VERBOSITY</span></span><br><span class="line">                                                 <span class="keyword">Level</span> <span class="keyword">of</span> progress information: <span class="number">0</span> = <span class="keyword">none</span>, <span class="number">1</span> = <span class="keyword">some</span>, <span class="number">2</span> = lots, <span class="number">3</span> =</span><br><span class="line">                                                 <span class="keyword">full</span> - <span class="keyword">output</span> will <span class="keyword">go</span> <span class="keyword">to</span> stdout <span class="keyword">if</span> <span class="keyword">reads</span> <span class="keyword">are</span> saved <span class="keyword">to</span> a <span class="keyword">file</span> <span class="keyword">and</span></span><br><span class="line">                                                 stderr <span class="keyword">if</span> <span class="keyword">reads</span> <span class="keyword">are</span> printed <span class="keyword">to</span> stdout (<span class="keyword">default</span>: <span class="number">1</span>)</span><br><span class="line">                  -t THREADS, <span class="comment">--threads THREADS  Number of threads to use for adapter alignment (default: 8)</span></span><br><span class="line"></span><br><span class="line">                Barcode binning <span class="keyword">settings</span>:</span><br><span class="line">                  Control the binning <span class="keyword">of</span> <span class="keyword">reads</span> based <span class="keyword">on</span> barcodes (i.e. barcode demultiplexing)</span><br><span class="line"></span><br><span class="line">                  -b BARCODE_DIR, <span class="comment">--barcode_dir BARCODE_DIR</span></span><br><span class="line">                                                 <span class="keyword">Reads</span> will be binned based <span class="keyword">on</span> their barcode <span class="keyword">and</span> saved <span class="keyword">to</span> separate</span><br><span class="line">                                                 files <span class="keyword">in</span> this <span class="keyword">directory</span> (incompatible <span class="keyword">with</span> <span class="comment">--output)</span></span><br><span class="line">                  <span class="comment">--barcode_threshold BARCODE_THRESHOLD</span></span><br><span class="line">                                                 A <span class="keyword">read</span> must have <span class="keyword">at</span> <span class="keyword">least</span> this <span class="keyword">percent</span> <span class="keyword">identity</span> <span class="keyword">to</span> a barcode <span class="keyword">to</span> be</span><br><span class="line">                                                 binned (<span class="keyword">default</span>: <span class="number">75.0</span>)</span><br><span class="line">                  <span class="comment">--barcode_diff BARCODE_DIFF    If the difference between a read's best barcode identity and its</span></span><br><span class="line">                                                 <span class="keyword">second</span>-best barcode <span class="keyword">identity</span> <span class="keyword">is</span> <span class="keyword">less</span> <span class="keyword">than</span> this <span class="keyword">value</span>, it will <span class="keyword">not</span></span><br><span class="line">                                                 be put <span class="keyword">in</span> a barcode <span class="keyword">bin</span> (<span class="keyword">to</span> <span class="keyword">exclude</span> cases which <span class="keyword">are</span> too <span class="keyword">close</span> <span class="keyword">to</span></span><br><span class="line">                                                 <span class="keyword">call</span>) (<span class="keyword">default</span>: <span class="number">5.0</span>)</span><br><span class="line">                  <span class="comment">--require_two_barcodes         Reads will only be put in barcode bins if they have a strong match</span></span><br><span class="line">                                                 <span class="keyword">for</span> the barcode <span class="keyword">on</span> <span class="keyword">both</span> their <span class="keyword">start</span> <span class="keyword">and</span> <span class="keyword">end</span> (<span class="keyword">default</span>: a <span class="keyword">read</span> can</span><br><span class="line">                                                 be binned <span class="keyword">with</span> a <span class="keyword">match</span> <span class="keyword">at</span> its <span class="keyword">start</span> <span class="keyword">or</span> <span class="keyword">end</span>)</span><br><span class="line">                  <span class="comment">--untrimmed                    Bin reads but do not trim them (default: trim the reads)</span></span><br><span class="line">                  <span class="comment">--discard_unassigned           Discard unassigned reads (instead of creating a "none" bin)</span></span><br><span class="line">                                                 (<span class="keyword">default</span>: <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">                Adapter <span class="keyword">search</span> <span class="keyword">settings</span>:</span><br><span class="line">                  Control how the program determines which adapter <span class="keyword">sets</span> <span class="keyword">are</span> <span class="keyword">present</span></span><br><span class="line"></span><br><span class="line">                  <span class="comment">--adapter_threshold ADAPTER_THRESHOLD</span></span><br><span class="line">                                                 An adapter <span class="keyword">set</span> has <span class="keyword">to</span> have <span class="keyword">at</span> <span class="keyword">least</span> this <span class="keyword">percent</span> <span class="keyword">identity</span> <span class="keyword">to</span> be</span><br><span class="line">                                                 labelled <span class="keyword">as</span> <span class="keyword">present</span> <span class="keyword">and</span> trimmed <span class="keyword">off</span> (<span class="number">0</span> <span class="keyword">to</span> <span class="number">100</span>) (<span class="keyword">default</span>: <span class="number">90.0</span>)</span><br><span class="line">                  <span class="comment">--check_reads CHECK_READS      This many reads will be aligned to all possible adapters to</span></span><br><span class="line">                                                 determine which adapter <span class="keyword">sets</span> <span class="keyword">are</span> <span class="keyword">present</span> (<span class="keyword">default</span>: <span class="number">10000</span>)</span><br><span class="line">                  <span class="comment">--scoring_scheme SCORING_SCHEME</span></span><br><span class="line">                                                 Comma-<span class="keyword">delimited</span> <span class="keyword">string</span> <span class="keyword">of</span> alignment scores: <span class="keyword">match</span>, mismatch, gap</span><br><span class="line">                                                 <span class="keyword">open</span>, gap extend (<span class="keyword">default</span>: <span class="number">3</span>,<span class="number">-6</span>,<span class="number">-5</span>,<span class="number">-2</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">End</span> adapter <span class="keyword">settings</span>:</span><br><span class="line">                  Control the trimming <span class="keyword">of</span> adapters <span class="keyword">from</span> <span class="keyword">read</span> ends</span><br><span class="line"></span><br><span class="line">                  <span class="comment">--end_size END_SIZE            The number of base pairs at each end of the read which will be</span></span><br><span class="line">                                                 searched <span class="keyword">for</span> adapter sequences (<span class="keyword">default</span>: <span class="number">150</span>)</span><br><span class="line">                  <span class="comment">--min_trim_size MIN_TRIM_SIZE  Adapter alignments smaller than this will be ignored (default: 4)</span></span><br><span class="line">                  <span class="comment">--extra_end_trim EXTRA_END_TRIM</span></span><br><span class="line">                                                 This many additional bases will be removed <span class="keyword">next</span> <span class="keyword">to</span> adapters <span class="keyword">found</span></span><br><span class="line">                                                 <span class="keyword">at</span> the ends <span class="keyword">of</span> <span class="keyword">reads</span> (<span class="keyword">default</span>: <span class="number">2</span>)</span><br><span class="line">                  <span class="comment">--end_threshold END_THRESHOLD  Adapters at the ends of reads must have at least this percent</span></span><br><span class="line">                                                 <span class="keyword">identity</span> <span class="keyword">to</span> be removed (<span class="number">0</span> <span class="keyword">to</span> <span class="number">100</span>) (<span class="keyword">default</span>: <span class="number">75.0</span>)</span><br><span class="line"></span><br><span class="line">                Middle adapter <span class="keyword">settings</span>:</span><br><span class="line">                  Control the splitting <span class="keyword">of</span> <span class="keyword">read</span> <span class="keyword">from</span> middle adapters</span><br><span class="line"></span><br><span class="line">                  <span class="comment">--no_split                     Skip splitting reads based on middle adapters (default: split</span></span><br><span class="line">                                                 <span class="keyword">reads</span> <span class="keyword">when</span> an adapter <span class="keyword">is</span> <span class="keyword">found</span> <span class="keyword">in</span> the middle)</span><br><span class="line">                  <span class="comment">--discard_middle               Reads with middle adapters will be discarded (default: reads with</span></span><br><span class="line">                                                 middle adapters <span class="keyword">are</span> <span class="keyword">split</span>) (<span class="keyword">required</span> <span class="keyword">for</span> <span class="keyword">reads</span> <span class="keyword">to</span> be used <span class="keyword">with</span></span><br><span class="line">                                                 Nanopolish, this <span class="keyword">option</span> <span class="keyword">is</span> <span class="keyword">on</span> <span class="keyword">by</span> <span class="keyword">default</span> <span class="keyword">when</span> outputting <span class="keyword">reads</span></span><br><span class="line">                                                 <span class="keyword">into</span> barcode bins)</span><br><span class="line">                  <span class="comment">--middle_threshold MIDDLE_THRESHOLD</span></span><br><span class="line">                                                 Adapters <span class="keyword">in</span> the middle <span class="keyword">of</span> <span class="keyword">reads</span> must have <span class="keyword">at</span> <span class="keyword">least</span> this <span class="keyword">percent</span></span><br><span class="line">                                                 <span class="keyword">identity</span> <span class="keyword">to</span> be <span class="keyword">found</span> (<span class="number">0</span> <span class="keyword">to</span> <span class="number">100</span>) (<span class="keyword">default</span>: <span class="number">85.0</span>)</span><br><span class="line">                  <span class="comment">--extra_middle_trim_good_side EXTRA_MIDDLE_TRIM_GOOD_SIDE</span></span><br><span class="line">                                                 This many additional bases will be removed <span class="keyword">next</span> <span class="keyword">to</span> middle adapters</span><br><span class="line">                                                 <span class="keyword">on</span> their <span class="string">"good"</span> side (<span class="keyword">default</span>: <span class="number">10</span>)</span><br><span class="line">                  <span class="comment">--extra_middle_trim_bad_side EXTRA_MIDDLE_TRIM_BAD_SIDE</span></span><br><span class="line">                                                 This many additional bases will be removed <span class="keyword">next</span> <span class="keyword">to</span> middle adapters</span><br><span class="line">                                                 <span class="keyword">on</span> their <span class="string">"bad"</span> side (<span class="keyword">default</span>: <span class="number">100</span>)</span><br><span class="line">                  <span class="comment">--min_split_read_size MIN_SPLIT_READ_SIZE</span></span><br><span class="line">                                                 Post-<span class="keyword">split</span> <span class="keyword">read</span> pieces smaller <span class="keyword">than</span> this many base pairs will <span class="keyword">not</span></span><br><span class="line">                                                 be outputted (<span class="keyword">default</span>: <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">Help</span>:</span><br><span class="line">                  -h, <span class="comment">--help                     Show this help message and exit</span></span><br><span class="line">                  <span class="comment">--version                      Show program's version number and exit</span></span><br></pre></td></tr></table></figure>
<h1>Use cases</h1>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">porechop -<span class="selector-tag">i</span> demux_qcat/barcode08<span class="selector-class">.fastq</span> -o trimmed_porechop/trimmed_barcode08.fastq</span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/nanopore-analysis-fulllength16Sdatabyflongle/4.porechop1.png" alt="4.1"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/nanopore-analysis-fulllength16Sdatabyflongle/4.porechop2.png" alt="4.2"></p>
<p>Ref:</p>
<blockquote>
<p>porechop: <a href="https://github.com/rrwick/Porechop" target="_blank" rel="noopener">https://github.com/rrwick/Porechop</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Omics</category>
        <category>Biosoft</category>
      </categories>
      <tags>
        <tag>Biosoft</tag>
      </tags>
  </entry>
  <entry>
    <title>文献笔记4|AerosolSciTech2019|生物气溶胶的现场测定：户外研究的挑战和前景</title>
    <url>/2020/04/02/literatures-4-Santl-Temkiv-2019/</url>
    <content><![CDATA[<p><strong>摘要：</strong> 笔记。| 在广泛的基础和应用科学学科中进行了生物气溶胶的户外现场测量，每种学科都有自己的目标，假设和术语。本文简要介绍了来自这些不同兴趣的户外现场生物气溶胶研究，并重点介绍了大气科学的观点。重点是就紧迫的科学问题，重大挑战以及跨学科合作的需求进行高层讨论。生物气溶胶现场测定重要的研究主题包括：（i）大气物理学、云、气候和水文循环；（ii）大气化学；（iii）空气中含有过敏原的颗粒；（iv）空气传播的人类病原体和国家安全；（v）空中牲畜和农作物病原体；（vi）生物地理学和生物多样性。我们简要回顾了生物气溶胶的影响，并讨论了区分生物气溶胶和非生物气溶胶的特性。我们特别关注了森林、极地地区、海洋和沿海环境、沙漠、城市和农村地区等特定区域，并总结了与生物气溶胶测定相关的主要考虑因素，如流量、远程运输以及从固定平台和船只驱动平台上的采样。考虑到在不同社区中提出的一系列关键科学问题，我们认为紧迫的科学问题包括以下内容：（i）排放源和通量估算；（ii）空间分布；（iii）分布的变化；（iv）大气老化；（v）代谢活动；（vi）过敏的城市化；（vii）人类病原体的运输，以及（viii）与气候有关的特性。</p>
<a id="more"></a>
<h3 id="文献">文献</h3>
<p>Šantl-Temkiv, T., Sikoparija, B., Maki, T., Carotenuto, F., Amato, P., Yao, M., … &amp; DeMott, P. J. (2019). Bioaerosol field measurements: Challenges and perspectives in outdoor studies. Aerosol Science and Technology, 1-27.</p>
<h3 id="Introduction">Introduction</h3>
<p><u>Types of bioaerosols from a functional perspective:</p>
<ul>
<li>living organisms, such as bacteria, fungi, lichens and microalgae</li>
<li>propagules, such as fungi spores, bacterial spores, pollen and viruses</li>
<li>microbial, plant, or animal fragments and exudates</u></li>
</ul>
<h3 id="Research-motivation">Research motivation</h3>
<h4 id="Atmospheric-physics-clouds-climate-and-hydrological-cycle">Atmospheric physics, clouds, climate, and hydrological cycle</h4>
<p><strong>Function</strong></p>
<ul>
<li>absorb and scatter light</li>
<li>take up water at sub-saturated conditions, i.e., hygroscopicity</li>
<li>interact with cloud as cloud condensation nuclei (CCN) and affect the precipitation</li>
</ul>
<p><strong>Question</strong><br>
To quantify the sources of bioaerosols and understand how they are dispersed.</p>
<ul>
<li>what biomolecules can act as INPs and what organisms produce them?</li>
<li>how do emissions of IMPs vary over land, freshwater, and sea, differ by ecotype (e.g., natural vs. anthropogenic), and cycle by season.</li>
<li>over what temperature range (degree of supercooling) are bio-INPs important.</li>
<li>how will climate- and land use-change affect emissions?<br>
=&gt; to investigate the impact of different types of bioaerosols on cloud and precipitation properties as well as climate</li>
</ul>
<h4 id="Atmospheric-chemistry">Atmospheric chemistry</h4>
<p><strong>Function</strong></p>
<ul>
<li>metabolically active living microorganisms involve in transformation of organic compounds, and the scavenging and detoxification of oxidants such as free radicals and their sources and drivers</li>
</ul>
<p><strong>Question</strong></p>
<ul>
<li>variety and metabolic rates of microorganisms that can maintain activity under atmospheric conditions</li>
<li>quantify the extent of biological impacts on atmospheric chemical process</li>
</ul>
<h4 id="Airborne-allergen-containing-particles">Airborne allergen-containing particles</h4>
<p><strong>Function</strong></p>
<ul>
<li>seasonal allergies driven by anemophilous pollen</li>
</ul>
<p>=&gt; resolve peculiarities of human dose response; improve autonomous detection of potential allergen-containing particles in real time.</p>
<h4 id="Airborne-human-pathogens-and-national-security">Airborne human pathogens and national security</h4>
<p>=&gt; rapid detection of infectious microorganisms suspended in air. currently, many researchers are focused solely on detecting and mitigating possible infectious viral, bacterial, or fungal threats.</p>
<h3 id="Airborne-livestock-and-crop-pathogens">Airborne livestock and crop pathogens</h3>
<p><strong>Sampling</strong></p>
<ul>
<li>air samples: passive (deposition) sampler, active (impaction) sampler</li>
<li>rain samples when the deposition of airborne pathogen propagules depends on washout by rainfall</li>
</ul>
<h3 id="Biogeography-and-biodiversity">Biogeography and biodiversity</h3>
<p><strong>Question</strong></p>
<ul>
<li><u>limited knowledge of bioaerosols in microbial aerial dispersal and the Biogeography of microorganisms</u></li>
<li><u>whether certain taxa dispersing through air might have properties that increase of colonization success in already occupied habitats</u></li>
</ul>
<h3 id="Current-considerations-related-to-bioaerosol-field-measurements">Current considerations related to bioaerosol field measurements</h3>
<h4 id="Important-physical-chemical-and-biological-properties-of-bioaerosols">Important physical, chemical, and biological properties of bioaerosols</h4>
<ul>
<li>biological diversity: lipids, amino acids, peptides, accharides, carboxylic acids；dead, dormant, or metabolically active cells; assemblages.</li>
<li>chemical diversity: solubility, charge, polarity, catalytic activity.</li>
<li>physical diversity: particle size, resistance to oxidants, UV radiation, temperature changes.</li>
</ul>
<h4 id="Study-regions-of-special-interest">Study regions of special interest</h4>
<h5 id="Forests">Forests</h5>
<ul>
<li>intense hydrological cycling</li>
<li>bioaerosol-cloud interactions</li>
<li>to what extent human activities have altered the abundance and properties of bioaerosol populations relative to preindustrial states of the atmosphere</li>
</ul>
<h5 id="Polar-regions">Polar regions</h5>
<ul>
<li>how biogenic INPs impact cloud dynamics in polar regions?</li>
</ul>
<h5 id="Marine-and-coastal-environments">Marine and coastal environments</h5>
<ul>
<li>the emission rates of marine INPs released to the atmosphere and which processed control these emission rates</li>
</ul>
<h5 id="Deserts">Deserts</h5>
<ul>
<li>dust events</li>
</ul>
<h5 id="Urban-and-rural-areas">Urban and rural areas</h5>
<ul>
<li>the relationship between land use and bioaerosols</li>
<li>the local environments on the airborne community assembly</li>
</ul>
<h4 id="Issues-related-to-bioaerosol-measurements">Issues related to bioaerosol measurements</h4>
<h5 id="u-Choosing-the-temporal-resolution-u"><u>Choosing the temporal resolution</u></h5>
<h5 id="Cultivation-dependent-and-independent-techniques">Cultivation-dependent and independent techniques</h5>
<ul>
<li>suitable cultivation techniques or appropriate growth media</li>
<li>molecular and single-cell approaches</li>
</ul>
<h5 id="The-problem-of-low-biomass">The problem of low biomass</h5>
<ul>
<li>high-volume filter samplers or high-flow-rate impingers?</li>
<li>methods of stringent cleaning, sterilization, or baking of the sampling equipment? handling and operational blanks?</li>
<li>real-time samplers (e.g., fluorescence or mass spectrometric analyzers)?</li>
</ul>
<h5 id="Preserving-the-in-situ-state-during-sampling-storage-and-transportation">Preserving the in situ state during sampling, storage, and transportation</h5>
<ul>
<li>viability, physiological state, ice nucleation activity, mixing state as much as possible, and allow relevant downstream analysis</li>
<li><u>sampling in physiological liquid or a fixative</u></li>
<li>microscopic investigation of bioaerosol in situ conditions (e.g., clumped together or attached to other particles)</li>
</ul>
<h4 id="Emission-deposition-fluxes-and-long-range-transport">Emission/deposition fluxes and long-range transport</h4>
<h5 id="wind-speed">wind speed</h5>
<ul>
<li><u>minimum wind speeds of 4 m/s is required for emission via sea spray</u></li>
</ul>
<h5 id="long-range-transport-and-mixing-processes">long-range transport and mixing processes</h5>
<ul>
<li>sources</li>
<li>viability</li>
</ul>
<h5 id="Assessing-fluxes">Assessing fluxes</h5>
<ul>
<li>flux: emission flux and deposition flux</li>
</ul>
<h4 id="Stationary-bioaerosol-research">Stationary bioaerosol research</h4>
<h5 id="choosing-the-location">choosing the location</h5>
<h5 id="monitoring-networks">monitoring networks</h5>
<ul>
<li>comparability and reproducibility</li>
</ul>
<h4 id="Vessel-driven-bioaerosol-research">Vessel-driven bioaerosol research</h4>
<h5 id="marine-sampling">marine sampling</h5>
<ul>
<li>ship-borne sampling</li>
<li><u>need more than 50 m<sup>3</sup> air</u></li>
</ul>
<h5 id="aerial-sampling">aerial sampling</h5>
<ul>
<li>planes, drones and balloons</li>
</ul>
<h3 id="Research-needs-and-future-concerning-outdoor-bioaerosol-measurements">Research needs and future concerning outdoor bioaerosol measurements</h3>
<h4 id="u-Pressing-scientific-questions-u"><u>Pressing scientific questions</u></h4>
<ul>
<li>emission sources and flux estimates</li>
<li>spatial distribution</li>
<li>changes in distribution</li>
<li>atmospheric aging</li>
<li>metabolic activity</li>
<li>urbanization of allergies</li>
<li>transport of human pathogens</li>
<li>climate-relevant properties: <u>hygroscopicity also influences allergenic pollen deposition and thus their spatiotemporal distribution.</u></li>
</ul>
<h4 id="Technical-challenges-recommendations-and-needs">Technical challenges, recommendations, and needs</h4>
<ul>
<li><u>standardization of collection strategies: spatial and temporal resolution, replicated sampling, appropriate sterile practices and controls, improved intake efficiency, losses in ducts and tubes, increased sample biomass and techniques allowing access to microbial in situ states.</u></li>
<li>improved real-time measurements</li>
<li>improve the quality, quantity, and timescale of bioaerosol measurements</li>
<li>long-term measurements at selected sampling sites</li>
<li>establish observation network of bioaerosols spread at different spatial scales</li>
<li>development of (standardized) methods for estimating surface-to-atmosphere exchanges of bioaerosols (i.e., fluxes)</li>
<li>simultaneous deployment of real-time instruments that can provide quantitative information at high time resolution (but generally with low specificity) with samplers that collect for longer periods for off-line analysis</li>
<li>new solution for specific bioaerosol detection</li>
<li>development of methods for source tracking of bioaerosols</li>
<li>pinpointing of tracers to be used for determining bioaerosol age</li>
<li>ambient analyses of single bioparticle properties</li>
</ul>
<h4 id="Needs-and-means-for-u-interdisciplinarity-and-cross-community-collaboration-u">Needs and means for <u>interdisciplinarity and cross-community collaboration</u></h4>
]]></content>
      <categories>
        <category>Literature notes</category>
        <category>Aerosols</category>
      </categories>
      <tags>
        <tag>Bioaerosols</tag>
      </tags>
  </entry>
  <entry>
    <title>☆文献笔记1|EST2017|用于研究空气中细菌浓度、存活力、代谢活性和冰成核活性的高流速撞击器</title>
    <url>/2020/03/11/literatures-1-Santl-Temkiv-2017/</url>
    <content><![CDATA[<p><strong>摘要</strong>：<strong>背景：</strong> 空气中细菌的研究依赖于保留其完整性和原位生理状态（如存活力、可培养性、代谢活性和冰核活性）的采样策略。由于周围空气中细菌含量低，有效的生物气溶胶采样器应具有较高的采样效率和较高的流速。<strong>手段：</strong> 针对0.5-3.0 µm的颗粒收集和保留效率，我们对高流速撞击器进行了表征，调查了其在保持选择的细菌菌株和海水细菌群落生理状态的能力，并与另外4种市售生物气溶胶采样器进行了比较。<strong>结果：</strong> 收集效率随颗粒尺寸而增加，截留直径为0.5 ~ 1 µm。在120-300分钟的采样期间，撞击器保留了所研究细菌的可培养性、代谢活性、生存能力和冰核活性。在半城市化、高海拔和极地环境包括空气中低细菌浓度的时期的野外研究，表明了撞击器高流速的好处。<strong>结论：</strong> 总之，与目前市售的其他生物气溶胶采样器相比，此处介绍的撞击器具有许多优点：采样时间长、流速高、采样和保留效率高、成本低以及可用于各种下游微生物和分子分析。</p>
<a id="more"></a>
<h3 id="文献">文献</h3>
<p>Šantl-Temkiv, T., Amato, P., Gosewinkel, U., Thyrhaug, R., Charton, A., Chicot, B., Finster, K., Bratbak, G. and Löndahl, J., 2017. High-flow-rate impinger for the study of concentration, viability, metabolic activity, and ice-nucleation activity of airborne bacteria. Environ. Sci. Technol, 51(19), pp.11224-11234.</p>
<h3 id="前言">前言</h3>
<p>有关主要生物气溶胶颗粒(PBAP)活性和丰度的知识对于许多领域和应用都很重要，如大气化学和物理学、生物地理学、气象学、医院卫生学、流行病学，以及对污染敏感的行业，如制药和食品加工。评估PBAP，需要一种能保持这些颗粒完整性和原位状态的采样策略。空气中的细菌是PBAP特别重要的一类。(i)它们是人类、动物和植物的潜在致病菌。(ii)保持其代谢活性的空气中的细菌能影响大气的化学过程，尤其是自由基化学和碳氮循环。(iii)一些细菌种类，如<em>Pseudomonas syringae</em>，可以参与云的形成，由于诸如冰核活性和生物表面活性剂生产等生理特性进而影响降水、气象和气候模式。<br>
大气中细菌的浓度比许多其他环境如深海和陆地地表中的低很多。据调查，陆地和海洋表面每L空气中平均有5~350个细胞。如此低的细菌浓度意味着要在高的空气流速(100 L/min或更高)下采样，和/或延长采样时间(小时或天)，以获得充足的生物量用于下游分析。此外，集中长时间的采样可能会已破坏采集的细菌细胞的生理状态，并阻止短期变化的评估。因此，生物气溶胶采样需要在高流速下收集足够的颗粒，与此同时要保护重要的生物学特性比如细胞完整和代谢活性。<br>
市场上有许多的采样器，可以将细菌收集到滤膜、琼脂或者液体中。滤膜采样器主要高效率地捕捉大部分生物物质，且能够在高流速下使用。然而，细胞特性被干燥和其他的压力如长的采样时间和抽滤大大影响了。另一个方法是直接将微生物收集到营养盐平板上以进行培养依赖的研究。然而，除了偏向收集细胞的可培养部分外，该方法还阻碍了使用最新分子方法和单细胞分析进行下游的群落分析。 因此，通常优选将活的生物材料取样到液体中（即通过撞击），这样可以更有效地保持细胞活力并实时固定细胞生物学特性。<br>
在最常见的采样到液体中的装置中，全玻璃撞击器(AGI-30)和SKC生物采样器都使用了12.5 L/min的流速。还有一些装置在更高的流速下采样，如XMX-CV在530 L/min下收集1-10 μm的颗粒。然而，由于采样液体的蒸发，根据使用者手册，总的采样时间不能超过10 min。因此，目前的撞击器似乎并不适用于采集浓度很低的环境中的空气微生物，像是高海拔或者偏远地区。<br>
本研究的目的是评估市售吸尘器的使用，它可以作为一个高流速的撞击器将气溶胶收集到液体中。我们假设：(i)该撞击器在采样和保留效率上的性能可与目前可获得的用于生物气溶胶采样的撞击器相媲美；(ii)该撞击器的高流速使其可以在多种环境中使用，包括细菌负荷低的原始环境；(iii)该撞击器保留了细菌的可培养性、生存力、代谢活性和冰核活性；(iv)该撞击器采集的样本适用于下游分析。</p>
<h3 id="材料和方法">材料和方法</h3>
<h4 id="撞击器和执行的测试">撞击器和执行的测试</h4>
<p>高流速的撞击器是Kärcher基于水的商用吸尘器的新应用。使用两个型号的这种撞击器收集了空气样本，DS5600和其更新的版本DS5800。Kärcher撞击器由产生吸力的外部和含有采样液的涡旋室内部组成（图1）。两个型号的撞击器操作原理相同，但是DS5800被制造商进行了少许改动：减少了涡旋室的尺寸以获得更高的气流。Kärcher撞击器用作高流速气溶胶收集器：空气进入涡流室并在采样液体中旋转，从而捕获了空气中的颗粒物和水溶性气体。通过提起涡旋室的盖子来添加采样液。通过具有连接到进气管的旋转叶片传感器的风速计测量流过涡流室的气流。为了测量流量，以与收集样品时相同的方式运行冲击器。评估了不同收集液体的效果，但对流速没有很大影响（未提供数据）。由现场发电机供电时，采样期间流速保持在(0.8-0.9)×10^3 L/min; 连接到电路时流速保持在3.1×10^3 L/min，接近制造商提供的值(3.3×10^3 L/min)。对于DS5800型，由于它是与电路连接运行的，因此采用制造商指定的风量（4.1×10^3 L/min）。<br>
使用以下方法对采样器进行了验证：（i）采样效率实验室测试，（ii）保留效率实验室测试，（iii）验证现场测试。表1列出了所有实验的概况。在挪威，法国和格陵兰进行了现场测试。在两个测试中，使用市售的生物气溶胶采样器作为参考。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/F1.jpg" alt="F1"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/T1-1.jpg" alt="T1-1"> <img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/T1-2.jpg" alt="T1-2"></p>
<h4 id="清洗和消毒撞击器">清洗和消毒撞击器</h4>
<p>在每次测定之前，应根据应用情况采用灭菌和冲洗程序对采样器和采样液进行净化处理（表1）。例如。使用微球测定采样效率时，需要进行简单的漂洗（Milli-Q H<sub>2</sub>O漂洗）；在检查模型细菌的保留和保存效率时，需要进行温和的消毒（连续乙醇和Milli-Q H<sub>2</sub>O漂洗）；收集环境样品时需要使用更强的消毒程序（连续用HCl/无菌Milli-Q H<sub>2</sub>O/96％乙醇或10％HNO<sub>3</sub>/去离子H<sub>2</sub>O/漂白剂/去离子无菌H<sub>2</sub>O冲洗）。可以手动添加不同的消毒液，也可以在涡流室加满相应的液体后运行撞击器5分钟。用相同的消毒液冲洗保护电动机的过滤器（图1中的过滤器），再将其放到原来的位置。在运输到野外时，将容器保存在封闭在无菌塑料袋中，使用前将其打开。将所有采样溶液高压灭菌（1-3次），然后过滤（0.22 µm或0.1 µm孔隙率）以除去颗粒。在每次采样开始时收集对照样品来验证无菌性和是否存在颗粒污染物。对于阴性对照，将撞击器加满采样溶液后运行5 min，以使液体与整个容器接触。然后从涡旋室中取出等分试样的采样溶液，并与样品平行进行分析。大多数情况下，阴性对照在无菌条件下生产的，除了在格陵兰收集的样品外，其阴性对照是在野外采集的。对于之后的阴性对照，我们在SI-图9A中展示了相关值。</p>
<h4 id="撞击器的实验评估">撞击器的实验评估</h4>
<h5 id="气溶胶室的收集效率">气溶胶室的收集效率</h5>
<p>使用不同直径(500 nm, 790 nm, 1000 nm, 1400 nm, 2000 nm和3000nm)的单分散荧光聚苯乙烯微球(Corpuscular Inc.，Thermo Fisher Scientific Inc.)评估采样器的收集效率(图1) 。将微球雾化到由镀锌钢制成的气溶胶混合室(直径0.5 m,体积0.2 m<sup>3</sup>）中，然后用撞击器采样。通过摇动将荧光微球进行混合，之后在超声浴中进行了短暂的超声处理（约5 s）。之后，将微球放在Milli-Q（MQ）水中稀释至最终浓度为1.3×10<sup>7</sup>–1.8×10<sup>8</sup> beads/mL。将微球悬浮液以60 mL/h 的速度送入喷射式的液体气溶胶发生器中，该气溶胶发生器在12 L/min的气溶胶气流中产生相对较高的颗粒数浓度，该浓度随时间推移是稳定的。需要高稀释度3100 L/min，以使撞击器获得足够的流速。收集效率通过测量空气和撞击器液体中的颗粒浓度来确定。气溶胶室内的颗粒浓度保持与大气中细菌浓度相同的数量级（SI-图2）：500 nm微球为270±2/L（平均值±标准误差），790 nm微球为41±2/L，1000 nm微球为198±4/L，1400 nm微球为46±1/L，2000 nm微球为84±2/L和3000 nm微球为32±1/L。以一分钟的时间分辨率测量浓度，当微球溶液重新装满时，低浓度期间浓度通常随时间变化±30％。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/S1-F.S2.jpg" alt="S1-F.S2"><br>
使用撞击器DS5600收集气溶胶室中雾化的荧光微球1 h或5 hrs。在将MQ水倒入涡旋室之前，以及气雾室内收集干净空气5分钟后从涡流室中取水样，将三份1.5 mL MQ水等分试样用作阴性对照。在1 h的测试中，每10分钟从采样液中取出三份1.5 ml的子样本；在5 hrs的测试中，分别在5、30、60、90、120、180、240和300 min取出三份1.5 ml的子样本。阴性对照和样品均保存在4°C下的黑暗环境中，然后使用流式细胞仪（FC）进行分析。<br>
使用扫描迁移率粒度仪SMPS和空气动力学粒度仪APS获得室内空气中的气溶胶数目浓度。通常，微球以单分散颗粒数浓度峰出现，将其积分以确定空气中的浓度。这些值可用来推论撞击器采样的微球的理论数量，并通过与采样液（C<sub>FCM</sub>）中的FC计数得出的浓度进行比较来计算尺寸分离的颗粒收集效率：Eff [％] =（C<sub>FC</sub>/(C<sub>APS</sub>+C<sub>SMPS</sub>))·100。</p>
<h5 id="Karcher撞击器和四种生物气溶胶撞击器的保留效率">Kärcher撞击器和四种生物气溶胶撞击器的保留效率</h5>
<p>在实验室或野外测试中评估了Kärcher撞击器DS5600、DS5800和四种市售生物气溶胶撞击器的保留效率（详见SI，Section SI-1.1）。采样液中掺入了实验前在无菌容器中收集的冰核活性（INA）<em>Pseudomonas syringae</em> 32b-74（GenBank AN HQ256872），<em>Pantoea agglomerans</em> （ATCC 33243），<em>Bacillus atrophaeus</em>（ATCC 9372）或海水细菌群落。通过将撞击器运行2-5小时来评估保留效率。在野外测试中，将Kärcher DS5600撞击器保持细胞完整性的能力与四种市售撞击器（XMX-CV，SKC BioSampler，SASS 2000PLUS和SpinCon）进行了比较，并在层流罩中记录了Kärcher DS5800的保留效率。测定的样品指标有：通过FC测定样品的总浓度（Sybr Green I染色）和活细胞浓度（Live/Dead染色），R2A营养平板上的菌落形成单位（CFU），使用tritium标记的亮氨酸测定蛋白质合成活性，通过液滴冻结测试测定冰成核活性（表1，详见SI，Section SI-1.3）。</p>
<blockquote>
<p>在实验室中确定了KärcherDS5800冲击器的保留效率。将冰核活性（INA）<em>Pseudomonas syringae</em> 32b-74（GenBank A.N. HQ256872）加入样品液，使其浓度约为〜10<sup>9</sup>细胞/mL。然后将体积为15 mL的该悬浮液引入装有1.7 L的0.9％NaCl溶液的收集室中。在层流罩中取样5小时。每60分钟收集等分试样的撞击液用于总细胞分析（Sybr绿色染色和流式细胞仪），活细胞分析（活/死染色和流式细胞仪），菌落形成单位分析（在R2A营养板上生长的CFU）和冰核（液滴冻结测定）。<br>
在三个采样时间对Kärcher DS5600冲击器和四个商用冲击器保持细胞完整性、活力和活性的能力进行了野外评估。 商业生物气溶胶采样器有XMX-CV (Dycor Technologies Ltd, Edmonton, Canada)，SKC BioSampler (SKC Inc, Eighty Four, Pennsylvania)，SASS 2000PLUS (Research International Inc, Monroe, Washington) 和SpinCon (Sceptor Industries Inc, Kansas City, Missouri)。 这些采样器均将空气中的颗粒收集到液体中，但是它们的采样速率（流速）和采样液体的体积不同（表2）。 将采样器放在地面上1米高的地面上，位于挪威凯瑟勒市（N 59.97785，E 11.03909）的挪威国防研究局FFI大楼外的草坪上，并根据制造商的说明进行操作。</p>
</blockquote>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/T2.jpg" alt="T2"></p>
<blockquote>
<p>在所有测试的采样器中，Kärcher DS5600撞击器的流速最高，可容纳的液体体积最大。 XMX-CV采样器被描述为耐用的采样器，可用于在相对较高的采样速率（530 L/min）和低采样液量（5 mL）下检测室外空气中的细菌。相反，SKC BioSampler的采样速率低得多（12.5 L/min），使用的采样液也更多（20 mL）。SASS 2000PLUS和SpinCon采样器也具有高采样速率（分别为325和450 L/min）和低采样液量（分别为5和10 mL）。XMX-CV和Kärcher DS5600撞击式采样器在采样期间不重新填加采样液，而SKC BioSampler每10-15 min需要手动添加无菌PBS，SASS 2000PLUS和SpinCon采样器是自动重新添加采样液。我们通过称量样品或标记补充液体的体积来确定液体样品的体积（L<sub>tot</sub>）。<u>对于本测试，采样液（PBS/MQ水）中掺入了海水细菌群落, 或 <em>P. agglomerans</em>、<em>B. atrophaeus</em> 的悬浮液，浓度约为10<sup>5</sup>细胞/mL。</u><br>
使用每种加标溶液在室外进行了2小时的测试。来自环境空气的细菌不会显着影响样品中细菌的浓度，因为细菌的掺入浓度比环境空气采样所获得的浓度高约两个数量级（数据未显示）。此外，琼脂平板上细菌菌落的外观在大小，形状和颜色上均一，表明仅存在一种单一物种的细胞。<br>
对于Kärcher DS5600撞击器，在运行5、30和120 min后，收集了采样液的等分试样。对于其他撞击器，在每个采样周期结束时收集采样器中的液体。样本被用于总细胞浓度（Sybr green染色）分析和使用R2A营养板的CFU浓度分析。对于总细胞分析，通过加入过滤器灭菌（0.2 µm）的戊二醛至终浓度为0.5％固定样品，然后保存在0-4℃暗处。</p>
</blockquote>
<blockquote>
<p><strong>培养和分析方法</strong><br>
<strong>生长状态</strong>：<em>Pantoea agglomerans</em>（以前称为 <em>Erwinia herbicola</em> ATCC 33243）和 <em>Bacillus atrophaeus</em>（以前称为 <em>Bacillus globigii</em> 和 <em>Bacillus subtilis</em> var <em>niger</em>，ATCC 9372）生长在37°C的液体LB培养基中，连续搅拌过夜至浓度约为10<sup>9</sup>细胞/mL。将过夜的细菌培养物用于加标测试。<em>Pseudomonas syringae</em> 32b-74细胞在15℃的R2A营养平板上的储备悬浮液中生长2-3天。通过从营养板刮擦细胞并将其重悬于10 mL去离子无菌水中，制备浓缩的细胞悬液（〜10<sup>9</sup>细胞/mL）。<br>
<strong>荧光微球计数</strong>：使用配备两个在488和640 nm激发的激光和标准滤光片装置的BD Accuri™C6流式细胞仪，确定采样液中荧光微球的浓度。在流式细胞仪中计数在488 nm激发时在533 nm或585 nm发出荧光的颗粒。或记录5 000个事件，或以中等流速（35 µL/min）分析100 µL液体。结果表示为基于三次重复样本的平均值和标准差。<br>
<strong>细菌细胞计数</strong>：<br>
使用FACSCalibur流式细胞仪测定细菌总数，该细胞仪配备了在488 nm处提供15 mW的风冷激光并配有标准滤光片装置。<br>
按照使用Kärcher DS5600撞击器进行的保留效率测试，用过滤器灭菌的PBS将样品稀释2-50倍，并在黑暗和室温下用SYBRGreen I染色15分钟。样品中SYBRGreen I的最终浓度为商业储备溶液的2×10<sup>–4</sup>。对每个样品的三个稀释液进行了分析。结果表示为平均值和标准差。将直径为0.95 µm的荧光微球添加到PBS和MQ水中，作为标准进行分析。微球未添加到样品中，而是单独运行以避免在稀释样品的分析中产生偏差。区分器设置为绿色荧光，并根据可用的样品量对样品进行1至5分钟的分析，结果大多数样品细菌计数为2x10<sup>3</sup>-10<sup>4</sup>个细胞。<br>
在分析之前，将固定样品在与用于采样的液体相同的液体中稀释，并用SYBRGreen I（分子探针）染色10分钟。用相同的方式对空白样品进行固定和染色。<br>
对于所有涉及Kärcher DS5800撞击器的测试，将一式三份的450 µL收集液样品与50 µL 5％的戊二醛（最终浓度为0.5％）混合，并在4°C下保存长达1周。对于FACScalibur流式细胞仪，将样品用0.2 µm过滤过的Tris-EDTA pH 8.0（40 mM Tris-Base，1 mM EDTA，乙酸调至pH 8.0）稀释2倍并用100X的SYBRGreen溶液染色。在“High”（〜80 µL/min）流速设定下进行3分钟或10<sup>5</sup>个事件的计数;对于每个分析系列，通过在20分钟运行前后称量水样来精确确定流速。根据细菌的荧光和侧向散射强度来确定细菌。<br>
<strong>活细菌计数</strong>：在保留效率实验中使用KärcherDS 5800撞击器研究了细胞存活。 使用Live/Dead BacLight细菌存活试剂盒，按照制造商的说明，通过流式细胞仪对存活和不存活的细菌进行计数。<br>
<strong>可培养细菌计数</strong>：菌落形成单位（CFU/mL）是通过将样品接种在R2A营养平板上确定的，R2A营养平板有时含有0.25％的环己酰亚胺以防止真菌生长。将一式两份或一式三份的琼脂平接种10 µL或100 µL样品。在37°C过夜生长（DS5600：<em>P. agglomerans</em>和<em>B. atrophaeus</em>）后计数，室温下2周后计数（DS5600：海水样品）或在15℃下培养5-7天后计数（DS5800）。<br>
<strong>活性测定</strong>：<u>掺入海洋细菌的样品的CFU数目非常低。因此，除了总细胞计数和CFU外，还测定了掺入的tritium标记的亮氨酸，作为细菌活性的独立评估。</u> 确定一式三份样品和一个带前缀的对照样品中细菌亮氨酸掺入的速率，所有样品均与终浓度为60 nM的<sup>3</sup>H-Leu（4.2698 TBq mmol<sup>-1</sup>，Perkin Elmer，Boston, USA）一起孵育。在黑暗中于原位温度下孵育1小时。样品用最终浓度为5％的三氯乙酸（TCA）固定，然后在去除上清液之前以13 500 rpm离心10 min。通过添加5％的TCA，涡旋、离心并除去上清液，将样品洗涤两次。<br>
加入counting cocktail，并用Packard Tri-Carb 4000闪烁计数器对细胞摄入的放射性亮氨酸进行定量。<br>
<strong>DNA/RNA 共提取和定量</strong>：如<a href="https://www.frontiersin.org/articles/10.3389/fmicb.2015.00476/full" target="_blank" rel="noopener">Lever等</a>所述，将化学裂解和物理裂解直接用于SterivexTM过滤器单元上。如之前所述进行逆转录和定量聚合酶链式反应（qPCR）。<br>
<strong>冰核颗粒的定量</strong>：使用由Stopelli和合作者开发的LINDA（基于LED的冰核检测设备）设备，通过液滴冷冻测定法测定Kärcher DS5800撞击器采样液中的冰核浓度。在我们的分析中，将采样液的400µL子样品加在0.5 mL的16-52个微管中，然后放置在LINDA的LED板中，该板位于-2°C的冷冻箱（Julabo F34-ED）中。相应的检出限分别为0.16 IN/mL和0.05 IN/mL。当冷冻浴温度为从-2降至-12°C时，每6 s拍摄一次图像进行测定。根据<a href="https://scholar.google.com/scholar?hl=en&amp;as_sdt=0%2C5&amp;q=Quantitative+Evaluation+of+Experimental+Results+an+the+Heterogeneous+Freezing+Nucleation+of+Supercooled+Liquids&amp;btnG=" target="_blank" rel="noopener">Vali等人的方法</a>计算该温度范围内IN的累积浓度。</p>
</blockquote>
<h4 id="收集周围空气中的生物气溶胶">收集周围空气中的生物气溶胶</h4>
<p>使用Kärcher DS5800撞击器在两个位置进行室外空气中的生物气溶胶采样：Clermont-Auvergne大学校园“LesCézeaux”（45.76111 N，3.116667 E）的一处建筑物的屋顶上，离地面约4 m；Clermont-Ferrand市附近的Puy de Dôme山大气天文台的屋顶平台（45.77222 N，2.96583 E，1465 m asl）（表1）。连续进行3到12个小时的采样，每小时在层流通风橱中采集采样液体（无菌的0.9％NaCl溶液）的子样本。在进行二次采样之前，通过称重确定蒸发损失，并通过添加无菌新鲜采样液体或去离子水进行校正。对于所有计算，我们假设采样效率为100％，并且采样液没有明显的细胞损失（基于实验室测试：请参见图2A和4A）。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/F2.jpg" alt="F2"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/F4.jpg" alt="F4"><br>
在格陵兰西南部Nuuk基础研究站的M500峰（海拔500 m，64.12264 N，51.36619 W）处，收集了三个空气样本，一式两份（表1）。Kärcher撞击器由发电机驱动，因此在5个小时的采样期间，气流保持在(0.8-0.9)×10<sup>3</sup> L/min，从而从(1.30-1.45)×10<sup>5</sup> L的空气中收集了气溶胶。样品被收集到高盐溶液中，该溶液旨在实时保存敏感的RNA分子。使用两个Kärcher撞击器DS5600收集了重复的样品，以评估采样的可重复性。将样品和阴性对照浓缩到SterivexTM过滤器上，然后储存在1 mL的RNA later中。将样品溶液高压灭菌两次并过滤除菌（0.1 µm，VacuCap 90 Devices，Pall Corporation，New York）。在采样期间，将蒸发的水替换为无菌MQ水。</p>
<h3 id="结果和讨论">结果和讨论</h3>
<h4 id="不同粒径下的采样效率">不同粒径下的采样效率</h4>
<p>采样器的收集效率和截留直径通过从气雾室中采样已知大小和浓度的微球来评估。收集效率（图2A）随着微球直径的增加而增加，对于500 nm微球，收集效率为25±5％，对于较大的颗粒，收集效率为69±17％–199±28％。根据这些实验，我们估计的截留直径为0.5-1 µm。<u>效率高于100％可能是由于微球双峰导致APS低估了其在空气中的实际浓度。因此，可能总体上高估了采样效率。由于在这些高流速下无法实现层流均匀等速采样，因此采样入口处的颗粒损失和异质颗粒混合会带来额外的不确定性。</u><br>
与周围大气中高细菌浓度（〜100/L）相比，在微球空气浓度5个小时的采样时间内，采样液中的微球没有饱和。图2B表明采样液中直径为500 nm和1400 nm的微球的浓度随采样时间线性增加（1400 nm：R<sup>2</sup>=0.97，p&lt;0.001; 500 nm：R<sup>2</sup>=0.97，p &lt;0.001）。<br>
在特定时间收集采样液体的子样本，使我们能够在各个时间点上追踪空气中的颗粒数浓度，这要比大多数生物气溶胶采样器所测定的浓度高（图2D）。 撞击器收集液中测得的浓度在一个数量级内反映了用APS测得的空气中的颗粒数浓度（图2C）。在约100/L的细菌浓度（室外空气中细菌浓度的上限）时，以30 min的时间分辨率进行分析采样是可行的。<br>
Dybwad等表明，除过滤采样器外，所有生物气溶胶采样器对1 µm荧光微球的收集效率均较低，但在4 µm尺寸范围收集效率较高。从4 µm微球（26倍）到1 μm微球，高流速撞击器XMX-CV的收集效率降低最大，空气中1 µm微球的收集效率约为4％〜20％。相比之下，Kärcher撞击器的性能要好得多，在~1 µm时收集效率约为75％。AGI-30撞击器和SKC BioSampler在1 µm处的收集效率超过90％，但是是在低三个数量级的流速下运行，此时收集区中的压降更大，因此沉积时间更长，撞击效率更高。研究表明，<u>细菌细胞的形状会影响其捕获效率，因此棒状细胞的捕获效率要高于球形细胞。</u>许多细菌细胞，如INA种 <em>Pseudomonas fluorescens</em> 呈棒状，直径300-800 nm，长1000-3000 nm，导致空气动力学直径约为800 nm。但是，发现内陆站点的大多数空中的细菌与颗粒有关，因此空气动力学直径大于3000 nm。因此，包括细菌在内的空中的生物颗粒的直径范围被Kärcher撞击器的高效率范围所覆盖。这表明，与这些观察到的细菌尺寸范围相似的大多数空中颗粒可被撞击器收集。</p>
<h4 id="保留效率和保持存活能力">保留效率和保持存活能力</h4>
<p>保留细胞活力是生物气溶胶采样器适用性的重要标准，因为存活对于进一步的生理学研究至关重要。 对不同类型的模型细菌（Proteobacteria：<em>P. agglomerans</em> 和 <em>P. syringae</em>； Fimerticutes：<em>B.atrophaeus</em> ）以及海水样本中的复杂细菌群落进行了三个测试。在整个采样期间，Kärcher撞击器在液体损失率，细菌细胞损失率，细胞存活，细胞活性和细胞冰成核活性方面均具有可重复性（表2，图3）。它也显示出类似的趋势，而与采样器中添加的细菌类型无关。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/F3.jpg" alt="F3"><br>
将INA模型菌株 <em>P. syringae</em> 掺入采样液中，以评估在-2°C至-7°C之间的总细胞和活细胞浓度以及冰核颗粒（INP）浓度的保留率。<em>P. syringae</em> 的总细胞浓度在5小时的采样期内没有变化（Kruskal-Wallis test； p&gt; 0.05）（表2），表明在采样过程中由于涡旋室的再雾化所造成的细菌损失可以忽略不计。 但是，相对于总细胞，活细胞的比例在采样的第一小时内下降了，从18％±10％降至2.2％±0.2％（即保留了约12％的初始生存力）。后来，存活能力随时间延长保持稳定（Kruskal-Wallis test； p&gt; 0.05）。冰核颗粒的浓度变化相似，高活性INP的浓度在采样的前两个小时内降低了两个数量级，并且直到采样周期结束都没有变化（图3）。采样操作使冰的成核曲线温度下降了不到2°C，这表明撞击器并未对样品造成明显损害，适合于检测生物气溶胶种群中的INP。<br>
将两个模型细菌菌株和一个复杂的海水细菌群落加入涡旋室，以测试120分钟的采样时间对细菌浓度，存活和代谢活性的影响程度。海水细菌的丰度保持不变，而 <em>P. agglomerans</em> 和 <em>B.atrophaeus</em> 细胞的丰度在120分钟后降至其初始值的70±3％和79±3％（SI-图3，表2）。可培养细胞的浓度降低50-65％（SI-图4，表2）。与初始值相比，海水细菌中的相对亮氨酸掺入量减少了61±7％（SI-图4，表2）。而且，在总细胞中可培养细胞的比例降低了（SI-图4，表2）。在 <em>P. agglomerans</em> 和海​​水细菌采样的前5分钟内，可培养和代谢活性细胞在总细胞群体中所占的比例迅速下降，但在随后的采样期间更稳定。<br>
将Kärcher撞击器的保留效率与其他四种市售的撞击器（表2，SI-图3-4）进行了比较，其中包括SKC BioSampler，由于其良好的特性，以前被用作参考采样器。在所有采样器中，Kärcher撞击器的流速最高（高1-2个数量级），液体损失率最低（表2）。局限性之一可能是，Kärcher撞击器中的液体体积比其他采样器高数百倍。但是，我们证明可以将Kärcher撞击器收集的生物气溶胶浓缩1000倍，例如通过使用SterivexTM过滤器进行核酸提取（请参阅第2.4节）。暂停采样，可以从涡旋室的盖子处补充液体。这样，我们可以补偿蒸发量，从而延长了采样时间。在所有其他型号采样器（例如XMX-CV）中，都不能重新添加采样液，这限制了采样时间。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/S1-F.S3.jpg" alt="S1-F.S3"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/S1-F.S4.jpg" alt="S1-F.S4"><br>
使用流式细胞仪，我们发现除XMX-CV以外，Kärcher撞击器的细胞损失率低于其他所有采样器。使用Kärcher撞击器DS5600，在采样周期结束时，约有1/3的可培养细胞和1/2的活性细胞保持了可培养性/活性（表2）。XMX-CV和SKC BioSampler在保持细胞可培养性/活性方面的效率比Kärcher撞击器DS5600高0.9-2.6倍。因此，就保持细菌的可培养性/活性而言，Kärcher撞击器的性能可与SKC BioSampler媲美，但在海水群落和 <em>P. agglomerans</em> 的情况下，其性能比XMX-CV差。我们认为，<u>XMX-CV采样器在细胞损失和细菌活性损失上性能较好，可能源于其短的采样时间（10分钟）。</u> 即使在运行一小时后，SKC BioSampler在保持可培养性/活性方面也比Kärcher DS5600撞击器稍好。然而，<u>该采样器的流速比Kärcher撞击器的流速低100倍以上，这意味着不可能进行时间​​分辨率强（长时间）的采样。[批注：即一次性采样量少]</u>总体而言，与其他经过测试的撞击器相比，Kärcher撞击器具有调查环境大气细菌的许多优势，如较高的保留效率和较长的采样时间，这归因于其较高的流速。</p>
<h4 id="应用于半城市，山区和北极地区的环境生物气溶胶采样">应用于半城市，山区和北极地区的环境生物气溶胶采样</h4>
<p>将采样器放在在半城市化地区、偏远的山上和原始的北极地区，我们发现由于其高流速，Kärcher撞击器可以在高时间分辨率（1小时到5小时的分辨率）和范围广的环境状态下使用，尤其是低细菌负荷的采样空气中。空气中的细菌群落在细胞大小、遗传多样性及其表型特征方面高度不同。我们在这里表明，Kärcher撞击器可用于但不限于量化以下群落：（i）总细菌细胞，（ii）可培养细菌细胞，（iii）冰核颗粒和（iv）核酸。还尝试使用该采样器在偏远的空气中收集空中的病毒，但这还有待进一步研究。</p>
<h5 id="总细胞定量">总细胞定量</h5>
<p>采样液中的细胞浓度随时间增加，在整个采样期间达到〜10<sup>2</sup>至〜10<sup>5</sup>个细胞/mL的浓度（SI-图6）。在Clermont-Auvergne大学校园的一个半城市化地点收集了两个样本。推断的空气中的细胞浓度为3.7±0.6 ~ 12.5±3.4 cell/L。在不同时期（白天和黑夜）和不同的天气状态（采样点出现了云）下，在Puy de Dôme山区（1465 m asl）采集了五份样品（表1）。总体而言，推断的空气中细菌浓度为（0.6±0.1）×10<sup>0</sup>~(2.8±0.2）×10<sup>3</sup> cell/L，其变化取决于采样日期和时间（表1，图4）。先前已经描述了生物气溶胶浓度的昼夜变化，但仅限于空中生物群落的可培养部分。这里，与此相似但侧重于总细胞数，我们发现中午（2015年6月11日）的细胞数量浓度高于夜间和早晨（2015年6月12日，16日，18日和26日）。这说明Kärcher撞击器可以潜在地被用于描述总细菌浓度的日间短期变化。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/F4.jpg" alt="F4"></p>
<h5 id="可培养且存活的细胞定量">可培养且存活的细胞定量</h5>
<p>调查了三个空气样本中的可培养细菌。它们在采样液中的浓度随采样时间的增加而增加，并在整个采样期间达到约200 CFU/mL，相当于3.9×10<sup>-2</sup> ~ 1.1可培养细胞/L（SI-图7），或流式细胞仪计数的细菌总数的0.02％ ~ 11.2％。实际空气中浓度为1-10 CFU/L时，由于Kärcher撞击器的高流速，其在9-90min内可达到CFU数目的检测限（即每板20个菌落）。尽管其他样品在采样液体中的浓度增加速度方面可能更有效，但Kärcher的真正好处是：（i）由于其高流速，采样的总生物量更高，（ ii）由于其更大的采样液量，它允许更长的采样时间。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/S1-F.S7.jpg" alt="S1-F.S7"><br>
大的不确定性通常与CFU计数有关（一式三份的平均计数的变异系数：13％&lt;CV&lt;96％，平均〜50％）。另一方面，当使用LIVE/DEAD染色通过流式细胞仪评估存活（图5），结果更加一致，平均CV为4％-34％。活细胞占总细胞数的2.8％~6.6％，并且存活与可培养无关。与对模型细菌菌株的观察相反，存活率并未随采样持续时间而降低（SI-图4），但似乎与环境条件有关：我们观察到夜间细胞存活率较高（图5），与以前的报道一致。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/F5.jpg" alt="F5"></p>
<h5 id="冰核颗粒定量">冰核颗粒定量</h5>
<p>图5显示了采样过程中采样液中INP<sub>-10</sub>（在温度≥-10°C时开始冻结形成INP）浓度的时间演变，以及在山地采集的空气样本的终点冻结曲线。SI-图8显示在取样期间测定的冻结曲线每小时变化在0℃~-12.5℃之间。根据采样液中测量值推断，采样期间空气中INP<sub>-10</sub>的平均浓度为&lt;10<sup>-3</sup>INP/L和〜14×10<sup>-3</sup>INP/L间。这些与使用其他采样方法在可比较地点进行的观察相一致。在空气中IN的浓度如此低的情况下，用Kärcher撞击器在不到20min的时间内即可达到我们方法的检测限（0.05IN/每mL液体），而用低流速撞击器如BioSampler可能需要约80min才能达到检测限。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/S1-F.S8.jpg" alt="S1-F.S8"></p>
<h5 id="北极环境空气中的核酸定量">北极环境空气中的核酸定量</h5>
<p>一式两份收集了三个样品，用于定量空气中的16S rRNA基因和16S rRNA分子（SI-图9）。三个重复的样品（一式两份表示为_A和_B）显示出一致的细菌细胞浓度结果（样品A11：（5.5±0.2）×10<sup>-1</sup>细胞/L，样品A16：6.8±3.1细胞/L，样品A17：（2.9±0.7）×10<sup>-1</sup>细胞/L），这表明Kärcher撞击器可用于原始空气中，基于分子微生物学方法对细菌细胞进行定量。<u>16S rRNA基因的背景浓度达到了在空气中测得浓度的0.4％-26％（SI图9），表明信噪比很低。</u> 这表明我们在某些情况下非常接近检出限，这是由于极低的细菌负荷（每立方米空气约10<sup>3</sup>个）。 因此，Kärcher撞击器的高流速使我们能够在这种条件下定量细菌细胞。16S rRNA拷贝数浓度，大致对应于空气中的核糖体浓度，介于8.3×10<sup>1</sup>和1.1×10<sup>4</sup>拷贝/L之间，并且在两次重复之间存在很大差异，表明大气细菌群落在其活性方面具有异质性。评估了两次重复RNA水平上的背景污染，16S rRNA拷贝数分别为0.1％和1.6％（SI-图9）。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-1-Santl-Temkiv-2017/S1-F.S9.jpg" alt="S1-F.S9"><br>
之前报道其他采样器也已被用于基因组DNA和RNA的分子分析。大多数研究使用过滤器采样器收集样本用于DNA分析。SKC BioSampler撞击器已被用于研究空气中细菌种群的多样性，并通过靶向基因组DNA的qPCR量化空中ina基因(蛋白编码基因)。大多数情况下，Ina基因浓度低于检测限，这很可能是由于SKC BioSampler的采样生物量低所致。研究表明，SKC BioSamplers可以在重载RNA病毒的环境中进行RNA水平的分子研究或通过并行使用24个SKC BioSamplers进行细菌RNA的分析。我们证明，Kärcher撞击器不仅可以在细菌含量低的原始环境中获得足够数量的细胞，还可以保护生物气溶胶以用于敏感的RNA分析，使其适合进行最新的分子分析。</p>
<h3 id="结论">结论</h3>
<p>总之，我们对高容量的撞击器进行了表征，并确认它对于空气中微生物的定量和定性研究非常有效。撞击器有很高的收集和保留效率，有助于在各种环境条件下采样，并在生物量较低的环境中提供可靠的结果。与其他四种市售撞击器相比，Kärcher撞击器在采样期间具有较低的细胞损失，并且适合保留细菌细胞的存活、活性和冰核活性。与其他撞击器相比，它主要的优点是其较高的流速、较低的液体损失以及可以长期采样的能力。最后，Kärcher撞击器是大多数研究团队都可以使用的装置，支持空气微生物学研究的标准化。</p>
]]></content>
      <categories>
        <category>Literature notes</category>
        <category>Air Sampler</category>
      </categories>
      <tags>
        <tag>Air Sampler</tag>
      </tags>
  </entry>
  <entry>
    <title>文献笔记5|AerosolSciTech2014|九种不同空气采样器的比较测试和评估：End-to-End采样效率作为生物气溶胶应用的特定性能测定</title>
    <url>/2020/04/02/literatures-5-Dybwad-2014/</url>
    <content><![CDATA[<p><strong>摘要：</strong> <strong>背景：</strong> 需要准确的暴露评估来评估空气传播的微生物引起的健康危害，并需要有效采集代表性样本的空气采样器。这凸显了对具有明确定义性能特征的采样器的需求。虽然一般的气溶胶性能测定是评估/比较采样器的基础，但是由微生物多样性引起复杂性的增加，尤其是与基于培养的分析方法结合使用时，可能会使此类测量不足以评估其对生物气溶胶的适用性。<u>将特定性能测定考虑进End-to-End采样过程、目标生物气溶胶和分析方法可能有助于指导空气采样器的选择。</u> <strong>手段：</strong> <u>本研究使用九种不同的采样器（impactors/impingers/cyclones/electrostatic precipitators/filter sampler）进行了比较性能测试。使用BioSampler作为参考采样器，确定了这些采样器对革兰氏阴性和革兰氏阳性营养细菌、细菌孢子和病毒End-to-End基于培养的生物采集效率（BSEs）和基于PCR和显微镜的物理采样效率（PSEs）。</u> <strong>结果：</strong> 采样器之间存在显著的差异，这取决于生物气溶胶的压力敏感性和颗粒粒径。与湿法收集方法相比，采用干法收集的采样器对压力敏感生物气溶胶的BSE较低，而非过滤器采样器对1 μm颗粒的PSE低于对4 μm的颗粒。由于采样效率较低，与BioSampler相比，一些采样器低估了生物气溶胶浓度水平，尽管由于较高的浓度因子它们通常获得的样品是更加浓缩的。<strong>结论：</strong> 我们的工作可能有助于提高用户对生物气溶胶采样重要性能标准的认识，这可有助于方法的统一/标准化，并能对空气中的病原体和其他重要的生物气溶胶进行更可靠的暴露评估。</p>
<a id="more"></a>
<h3 id="文献">文献</h3>
<p>Dybwad, M., Skogan, G., &amp; Blatny, J. M. (2014). Comparative testing and evaluation of nine different air samplers: end-to-end sampling efficiencies as specific performance measurements for bioaerosol applications. Aerosol Science and Technology, 48(3), 282-295.</p>
<h3 id="前言">前言</h3>
<p>准确，可靠地定量和鉴定生物气溶胶取决于多种因素，包括使用可以有效地采集代表性样品并匹配目标生物气溶胶（例如浓度水平、粒径和应力敏感性）的空气采样设备、气象条件（例如，温度、湿度和风速）以及采用的分析方法。分析方法通常包括显微镜、微生物学、生化、免疫学和分子技术。<u>生物气溶胶采样通常通过常见的气溶胶收集原理来实现，例如impaction、impingement、cyclonic separation、filtration以及thermal or electrostatic precipitation）。</u>基于这些原理已经开发了无数的空气采样器，它们在<u>采样效率、采集尺寸范围、气流速率、收集介质的类型和体积、物理特性（例如尺寸、重量、坚固性和自动化程度）以及与造成的与采样相关的微生物应力（例如剪切力和干燥）</u>等方面具有不同的仪器性能。<strong>因此，没有一个空气采样器可能对于所有目的都是最佳的，甚至是适合的。</strong><br>
不同的生物气溶胶类型和采样应用可能会带来各种固有的挑战和特定的研究要求，这使生物气溶胶界内的设备和程序标准化变得困难，因此导致几种不同空气采样器和分析方法的使用。<u>因此，研究间的数据比较是有要求的，因为即使在相同的生物气溶胶挑战下，各种方法也能提供不同的结果。</u>因此，由于缺乏能够提供准确、可靠和可比的空气传播微生物估计值的方法，生物气溶胶研究受到了限制。<strong>综上所述，这突显了对空气采样器进行比较测试和评估以及采样步骤标准化的需要。</strong> 这将有助于为用户提供有关空气采样器选择的重要信息，以满足他们特定的操作需求。<br>
空气采样器的性能测定已经使用几种不同的、有时是冗余的效率术语（例如，aspiration-、inlet-、transmission-、collection-、sampling-、recovery-、retention-、physical-、biological-、total-和overall effciency）进行了报道，并考虑了End-to-End采样过程的不同或部分方面。<u>市售采样器随附的性能信息通常仅限于不同大小惰性非生物颗粒（例如聚苯乙烯乳胶球）的收集效率，这些颗粒被用于定义采样器的颗粒截留直径d<sub>50</sub>，在该直径下观察到50％的收集效率。</u><strong>但是，此类通用测量并未考虑到采样器诱发采样应力的倾向。</strong><br>
表征良好的旋流液体impinger<u>（BioSampler）在本研究中用作参考空气采样器</u>。与BioSampler相比，其余涉及的空气采样器的可用性能数据受到限制；<u>明胶过滤器(gelatin filters)，Coriolis FR（或Coriolis <em>μ</em> 和 <em>δ</em>），XMX-CV（或XMX/2L-MIL和XMX/2A），BioCapture 650，OMNI-3000，SASS 2300（或SASS 2000）和SASS 3100。</u><br>
<u><strong>本研究旨在对具有不同收集原理的9个空气采样器进行基于气溶胶室的比较测试和评估，以建立其对选择的气溶胶测试试剂的End-to-End培养依赖的生物采样效率（BSE）和非培养依赖的物理采样效率（PSEs），并与BioSampler进行了比较。</strong></u> BSEs基于平板计数分析，而PSEs基于实时定量PCR（qPCR）或荧光显微镜直接计数分析。气溶胶测试试剂包括革兰氏阳性和革兰氏阴性营养细菌、细菌孢子和病毒，以及荧光聚苯乙烯胶乳球。此测试和评估方案旨在为空气采样设备的用户提供针对各种生物气溶胶采样应用的更具体的End-to-End性能测定。</p>
<h3 id="材料和方法">材料和方法</h3>
<h4 id="气溶胶测试试剂和喷雾溶液">气溶胶测试试剂和喷雾溶液</h4>
<p>生物测试剂包括革兰氏阴性（<em>Serratia marcescens</em>，SM）和革兰氏阳性（<em>Kocuria rhizophila</em>，KR）营养细菌细胞、细菌孢子（<em>Bacillus atrophaeus</em>，以前称为 <em>Bacillus globigii</em>，BG）和病毒（噬菌体MS2，无包膜ssRNA病毒，MS2）。含有2.0×10<sup>8</sup> cfu/mg BG孢子的冻干粉和含有3.5×10<sup>12</sup> pfu/ml的MS2噬菌体的TNME缓冲液（10 mM Tris-HCl，100 mM NaCl，0.1 mM MgSO<sub>4</sub>、0.01 mM EDTA）溶液由Dugway试验场提供。SM菌株（ATCC 274）购自美国典型培养物保藏中心，KR菌株（ATCC 9341，以前归类为黄曲霉 <em>Micrococcus luteus</em>）由挪威兽医学院提供。两种尺寸的荧光聚苯乙烯乳胶球购自Invitrogen，1 μm的具有黄绿色荧光（505/515 nm）；4 μm的具有红色荧光（580/605 nm）。<br>
将BG孢子（5 mg/ml）悬浮在MilliQ水中(涡旋5 min)。将SM和KR分别接种到nutrient broth和trypticase soy broth中，然后在30℃（SM）和37℃（KR）下培养（18 h，200 rpm）。通过离心（3,000 × <em>g</em>，5 min）洗涤BG、SM和KR，然后将其重新溶解在MilliQ水中。使用NanoDrop ND-1000分光光度计测量光密度（OD），并用MilliQ水将其调节至BG：OD<sub>600</sub> = 1.0（〜1.0×10<sup>9</sup> cfu/ml），SM：OD<sub>600</sub> = 0.5（〜5.0×10<sup>9</sup> cfu/ml），KR：OD<sub>600</sub> = 0.75（〜3.0×10<sup>9</sup> cfu/ml）。通过平板计数分析确定气溶胶生成前后喷雾溶液的浓度水平（cfu/ml）。将喷雾溶液的系列稀释液一式三份涂在trypticase soy agar（TSA）上用于KR生长，和nutrient agar（NA）上用于BG和SM生长，分别在37°C（KR）或30°C（BG和SM）下孵育（18 h）。将MS2储备溶液直接用12.5％TNME缓冲液稀释，以使喷雾溶液浓度为1.0×10<sup>9</sup> pfu/ml。MS2喷雾溶液的浓度水平（pfu/ml）在气溶胶生成前后使用倾板法(pour-plate)进行确定。简言之，喷雾溶液的系列稀释液与1.0×10<sup>7</sup> cfu的对数期大肠杆菌 <em>Escherichia coli</em>（DSM 4230）在柔软的NA中混合，一式三份倒在NA板上，后在37℃下温育18 h。FS悬浮液直接用MilliQ水稀释至含有1.0×10<sup>9</sup> spheres/ml的喷雾溶液。所有喷雾溶液均是每天新鲜配制的。</p>
<h4 id="生物气溶胶测试室">生物气溶胶测试室</h4>
<p>空气采样器测试是在12 m<sup>3</sup>（3×2×2 m）的不锈钢气雾试验箱(ATC)中进行的，该试验箱配有外部供暖、通风、空调（HVAC）和高效颗粒空气（HEPA）过滤系统（图S1）。ATC配备了两个混合风扇（120 mm），用于温度、湿度和压力检测的气象传感器，光学颗粒计数器(Grimm 1.108)，空气动力学粒度仪(APS 3321)和两个slit-to-agar取样器(STA-203)。使用Grimm 1.108和APS 3321对测试气溶胶浓度和尺寸分布进行实时监控。使用依序运行的STA-203采样器（30 lpm, 0.5 rpm）监控每升空气中含颗粒物的浓度（AC-PLA）。在STA-203s上装入TSA（KR）或NA板（BG和SM），并将板在37℃（KR）或30℃（BG和SM）下孵育（18 h）。在MS2和FS实验期间未使用STA-203。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-5-Dybwad-2014/F-S1.jpg" alt="F-S1"></p>
<h4 id="气溶胶的产生">气溶胶的产生</h4>
<p>使用48 kHz Sono-Tek超声波雾化器喷嘴对生物测试试剂（BG、SM、KR和MS2）进行雾化，使用Micro Mist雾化器对FS进行雾化。Sono-Tek喷嘴由宽带超声发生器（型号06-5108）提供动力，喷雾溶液由syringe feeder（型号997E）提供。Micro Mist雾化器使用氮气（2.4 bar）运行。两种分散装置均封闭在气溶胶稀释系统（ADS-A20，Dycor Technologies）中，该系统可在注入ATC之前用HEPA过滤的空气对气溶胶进行稀释。目标气溶胶粒径为1和4 μm质量中位数空气动力学直径（MMAD）。对所有测试试剂的4μm气溶胶，FS和BG的1 μm气溶胶进行了采样器测试。在实验前，确定了ATC及其子系统的适当仪器设置，以生成预测试气溶胶的可再现浓度水平和尺寸分布，然后在整个研究过程中保持不变。</p>
<h4 id="被评估的空气采样器">被评估的空气采样器</h4>
<p>根据不同的干湿气溶胶收集原理（包括filtration、impaction、impingement、 cyclonic separation and electrostatic precipitation），对9个不同的空气采样器进行了基于气溶胶室的比较测试和评估。空气采样器的气流速度范围很广（12.5–540 lpm），其技术范围很复杂，从需要外部真空源和手动处理的简单滤盒和玻璃器皿采样器到全自动和坚固耐用的系统。<u>评估的采样器（表1和图S2）有SASS 2300、SASS 3100、明胶过滤器、Coriolis FR、OMNI-3000、BioCapture 650、静电除尘器（ESP）原型、XMX-CV和BioSampler。</u><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-5-Dybwad-2014/T1-1.jpg" alt="T1-1"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-5-Dybwad-2014/T1-2.jpg" alt="T1-2"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-5-Dybwad-2014/F-S2.jpg" alt="F-S2"><br>
使用BioSampler作为参考，并报告了其他采样器相对于参考采样器的采样效率。采样器是根据各自制造商的使用说明文件操作的。使用质量流量计（TopTrak 826）监测通过BioSampler和明胶过滤器的空气流量。SASS 3100的敞开式过滤器支架上盖有铝制盖帽，以避免在气溶胶生成和混合过程中将测试气溶胶沉积在驻极体过滤器上。<br>
Coriolis FR和Bio-Capture 650的收集液均为一次性使用的基于磷酸盐缓冲液（PBS）的含表面活性剂制剂。补充有0.05％Triton X-100和0.005％Antifoam A的PBS分别作为BioSampler和XMX-CV的收集液，并作为 SASS 3100、ESP和明胶过滤器的提取液。OMNI-3000使用装有一次性使用的PBS的收集盒和船上储液罐中的MilliQ水作为补充液体进行操作。SASS 2300使用PBS作为收集液和补充液。取样后立即向OMNI-3000和SASS 2300样品中分别添加Triton X-100和Antifoam A至最终浓度为0.05％和0.005％。</p>
<h4 id="空气采样器测试">空气采样器测试</h4>
<p>除非另有说明，否则始终使用所描述的基于气雾室的检测和评估方案。对于每种气溶胶测试试剂和粒径，每个空气采样器均进行了至少五次实验重复测试。采样器按组进行测试，同时测试的采样器数量为2-6不等。在ATC中使用固定的采样位置，并且各实验之间采样器的相对位置有所不同（图S1）。在每个实验前，将ATC密封并使用装有HVAC的HEPA过滤空气吹扫，直到Grimm 1.108报告背景浓度水平（0.8-20 μm间&lt;1颗粒/升）并观察到目标气象条件（ 55％相对湿度和20°C）。开始测试气溶胶的产生并持续（约2 min），直到Grimm 1.108达到<u>目标浓度水平（约160颗粒/升）</u>。然后关闭通风系统，但不关闭混合风扇，将测试的气溶胶混合（1 min）。<u>采样时间为5分钟</u>，然后将ATC清除至背景状态。收集到的样品立即被运送到实验室，并且采样器按照sample-to-sample净化程序进行净化。使用SASS 3010萃取仪用PBSTA（8毫升）萃取SASS 3100的驻极体过滤器。ESP的收集管用PBSTA（10 ml，摇晃，30 s）提取，而明胶过滤器完全溶于PBSTA（10 ml，37℃，摇晃）。</p>
<h4 id="评估测试气溶胶的均质性">评估测试气溶胶的均质性</h4>
<p>在预研究期间，同时使用三个STA-204 slit-to-agar采样器（30 lpm，0.5 rpm，New Brunswick）和两个STA-203 slit-to-agar采样器采样，对ATC内部测试气溶胶的均质性进行了评估。这些实验是用4μm BG气溶胶进行的，并改变用于空气采样器测试的采样器之间的相对位置进行重复实验（图S1）。 两台SASS 3100驻极体过滤器采样器（300 lpm）和两台SASS 2000湿壁旋风分离器（325 lpm，SASS 2300的较旧型号）被用于模拟均质实验期间正在进行的空气采样器测试。silt-to-agar采样器报告的ACPLA水平被用于评估模拟空气采样器测试期间ATC内部测试气溶胶的均匀性。此外，使用热线风速计在每个采样位置的多个高度记录风速测量值。</p>
<h4 id="培养分析">培养分析</h4>
<p>板数分析（见SI）被用于确定空气采样器采集BG、SM、KR和MS2气溶胶的BSEs。使用公式（1）计算相对于参考采样器（BioSampler）的BSEs。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-5-Dybwad-2014/E1.jpg" alt="E1"></p>
<h4 id="分子分析">分子分析</h4>
<p>用于BG、SM和KR的qPCR分析（见SI），以及用于MS2的逆转录qPCR（qRT-PCR）分析被用以确定空气采样器的PSEs。使用公式（1）计算相对于参考采样器的PSEs。</p>
<h4 id="直接计数分析">直接计数分析</h4>
<p>基于荧光显微镜的直接计数分析（见SI）被用于确定FS气溶胶的空气采样器的PSEs。 使用公式（2）计算收集的空气样品中FS的浓度水平。使用公式（1）计算相对于参考采样器的PSEs。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-5-Dybwad-2014/E2.jpg" alt="E2"></p>
<h4 id="统计分析">统计分析</h4>
<p>使用SigmaPlot对结果进行统计分析。使用Shapiro-Wilk检验进行正态性检验，并根据是否满足正态性和均方差标准进行检验，分别通过student t-test或Mann-Whitney秩和检验进行显着性检验。所有统计检验的显着性水平均设置为p&lt;0.05。</p>
<h3 id="结果和讨论">结果和讨论</h3>
<h4 id="雾化溶液和测试气溶胶">雾化溶液和测试气溶胶</h4>
<p>在雾化溶液被用于气溶胶生成的整个期间，雾化溶液可培养计数（BG、KR、SM和MS2）或直接显微计数（FS）的变异度均小于±10％。所有实验中基于APS 3321测量得出的粒径计算结果表明，所有测试气溶胶的粒径分布均具有可重现性，中值粒径接近目标1和4 μm MMAD（表S2）。评估了ATC中测试气溶胶的均质性，以确保所有样品都受到相同的挑战。无论是否同时操作四个大容量空气采样器，在每个采样位置上同时运行的5个slit-to-agar采样器显示出相似的有4 μm BG气溶胶的回收率（±2％）。确定了ATC中的气流速度，以评估通过空气采样器入口观察到过采样或欠采样的风险。在所有采样位置和进气高度均始终观察到低于1 m/s的气流速度，这表明所涉及的颗粒大小和进气速度不太可能出现实质性的过采样或欠采样。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-5-Dybwad-2014/T-S2.jpg" alt="T-S2"></p>
<h4 id="测试和评估结果（按照测试试剂进行分类）">测试和评估结果（按照测试试剂进行分类）</h4>
<p>以下各节通过两幅图（F1和F2）对测试和评估结果进行统计解释。SI中显示了每个空气采样器和测试试剂的BSEs和PSEs的合并结果摘要（表S3）。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-5-Dybwad-2014/F1.jpg" alt="F1"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-5-Dybwad-2014/F2.jpg" alt="F2"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-5-Dybwad-2014/T-S3.jpg" alt="T-S3"></p>
<ul>
<li>
<p><em>FluoSpheres (FS)</em><br>
确定了1和4 μm FS气溶胶相对于参考采样器的空气采样器的PSEs（图1）。基于过滤器的采样器（SASS 3100和明胶过滤器）在4 μm和1 μm处的PSEs差异不显著。其他采样器中1 μm的PSEs显著低于4 μm，<strong>但是ESP和Coriolis FR的减少幅度显著小于SASS 2300、XMX-CV、BioCapture 650和OMNI-3000。</strong> 对于4 μm FS，在1 μm处观察到的采样效率降低最大的采样器是XMX-CV（约26倍）。一般而言，与参考采样器相比，评估的采样器在两种尺寸的FS上均显示出明显较低的PSEs，除了：（i）明胶过滤器在两种大小的FS中的PSEs均明显更高，（ii）XMX-CV采样器在4 μm FS处并没有观察到显著不同的PSE。使用SASS 2300和OMNI-3000在两种尺寸的FS中均观察到较低的PSEs（≤0.13）。</p>
</li>
<li>
<p><em>B. atrophaeus spores (BG)</em><br>
确定了相对于参考采样器的空气采样器对于1和4 μm BG气溶胶的BSEs和PSEs（图1）。与4 μm BG相比，基于过滤器的采样器（SASS 3100和明胶过滤器）和OMNI-3000在1 μm处没有显示出明显不同的BSEs或PSEs。与4 μm BG相比，其他采样器对1 μm BG的BSEs和PSEs显着降低，但是与SASS 2300、XMX-CV和BioCapture 650相比，ESP和Coriolis FR的降低的效率更小。相对于4 μm BG，1 μm时采样效率降低最大的是XMX-CV（约6倍）和SASS 2300（约5倍）。<br>
与参考采样器相比，评估采样器在两种大小的BG处的BSEs和PSEs均显着降低，除了：（i）明胶过滤器在1 μm BG处的BSE和PSE显着较高，而4 μm BG处的BSE和PSE则无显着差异，（ii）<strong>XMX-CV的BSE显著较高</strong>，而对于4 μm BG，PSE并没有明显不同。<strong>对于两种大小的BG，BSEs和PSEs之间均未观察到显着差异，只有BioCapture 650在4 μm BG时的PSE显着降低（约1.5倍）。</strong> OMNI-3000在两种尺寸的BG中的BSEs和PSEs均较低（≤0.22），SASS 2300、XMX-CV和BioCapture 650在1 μm BG中的BSEs和PSEs均较低。由于OMNI-3000在两种尺寸的BG和FS中的PSEs均较低，因此不再使用该采样器进行进一步测试。</p>
</li>
<li>
<p><em>Kocuria thizophila (KR)</em><br>
确定了相对于参考采样器空气采样器对4 μm KR气溶胶的BSEs和PSEs（图2）。相对于PSEs，评估的采样器具有更高的BSEs，除了ESP的BSE较低，<strong>但此差异不显着</strong>。<br>
与参考采样器相比,评估的采样器的PSEs也显著较低，除了XMX-CV和明胶过滤器，他们没有明显不同的PSEs。与参考采样器相比，XMX-CV的BSE明显更高，而ESP和SASS 3100的BSE则明显更低。与参考采样器相比，明胶过滤器、SASS 2300、BioCapture 650和Coriolis FR没有明显不同的BSEs。</p>
</li>
<li>
<p><em>Serratia marcescens (SM)</em><br>
确定了相对于参考采样器空气采样器对4 μm SM气溶胶的BSEs和PSEs（图2）。相对于PSEs，直接收集到液体中的空气采样器的BSE显着较高（SASS2300和XMX-CV）或没有显着不同（Coriolis FR）；而采用干式收集原理的采样器（ESP、SASS 3100、明胶过滤器和Bio-Capture 650）的BSEs明显低于PSEs。与PSEs相比，在基于过滤器的采样器SASS 3100（〜52倍）和明胶过滤器（〜36倍）中观察到BSEs的下降幅度最大，二者均具有非常低的BSEs（≤0.03）。<br>
与参考采样器相比，评估的采样器的BSEs和PSEs显著较低，除了：（i）XMX-CV的BSE显着较高，而PSE的差异不明显；（ii）SASS 2300的BSE显着较高，以及 （iii）明胶过滤器的PSE并没有显著不同。</p>
</li>
<li>
<p><em>Bacteriophage MS2</em><br>
确定了相对于参考采样器的空气采样器对4 μm MS2气溶胶BSEs和PSEs（图2）。相对于PSEs，SASS 3100和ESP的BSEs显著较低；而明胶过滤器的BSE显著高于PSE。其他采样器（SASS 2300、XMX-CV、BioCapture 650和Coriolis FR）的BSEs和PSEs均无显著差异。XMX-CV的BSEs和PSEs较低（≤0.21）。<br>
相对于参考采样器，被评估采样器的BSEs和PSEs显著降低，除了明胶过滤器，其BSE无显著不同。</p>
</li>
</ul>
<h4 id="测试和评估结果（合并测试试剂和颗粒尺寸）">测试和评估结果（合并测试试剂和颗粒尺寸）</h4>
<p>以下各节介绍并讨论了合并的测试和评估结果，以识别和突出评估的空气采样器之间的性能差异和/或相似性。</p>
<ul>
<li>
<p><em>粒径</em><br>
目标生物气溶胶的粒径是选择空气采样器时要考虑的重要参数。我们的结果表明，使用基于过滤器的采样器（SASS 3100和明胶过滤器）测定的BG和FS气溶胶的BSEs和PSEs不受粒径从4μm减小到1μm的影响，而XMX-CV、SASS 2300和BioCapture 650从4 μm 到1 μm的BSEs和PSEs大大降低（图1）。ESP和Coriolis FR还显示出1 μm气溶胶的BSEs和PSEs降低，但与XMX-CV、SASS 2300和BioCapture 650观察到的相比，这个下降仅是中等的（图1）。<u>这些结果与先前的研究一致，表明XMX-CV、SASS 2300和BioCapture 650的d<sub>50</sub>截留直径大于1 μm，而BioSampler的d<sub>50</sub>截留直径小于1 μm。</u></p>
</li>
<li>
<p><em>物理采样效率（PSE）</em><br>
<u>基于显微镜的1和4 μm FS气溶胶的PSEs和基于qPCR的1和4 μm BG气溶胶的PSEs相互对应（图1）。即使基于不同的分析方法，两种测试试剂也可以复制相似的PSEs，这表明PSE准确且具有代表性。</u>但是，观察到两个较小的例外：与类似大小的BG相比，SASS 2300和OMNI-3000的FS的PSE分别低约两倍和六倍。<u>这些空气采样器在采样过程中具有最大的内表面积和与收集液接触的管道。这可能会导致由于粘附到采样器的壁和管道上而导致内部采样材料损失，从而影响End-to-End采样效率。观察结果还表明，FS比BG疏水性更高，这可能会导致SASS 2300和OMNI-3000中FS内部损失增加。</u>由于OMNI-3000对两种大小的FS和BG气溶胶的PSE非常低，因此不再用于进行下一步测试。但是，应该指出的是，这种采样器的流体监控系统存在技术问题，在某些情况下会导致收集液的异常补充。<br>
比较了空气采样器对4 μm BG、KR、SM和MS2气溶胶的PSEs的一致性，发现所有测试试剂的PSEs都相似（图2）。但是，对于MS2，明胶过滤器和XMX-CV的PSEs均降低了≥5倍相对于与BG、KR和SM。XMX-CV观察到了相应的BSE结果，与其他测试试剂相比，MS2的BSE降低了5倍以上，但明胶过滤器未观察到这一结果。<br>
当丢弃MS2的两个差异后，BG、KR、SM和MS2的PSEs显示明胶过滤器和XMX-CV的平均PSE（1.01±0.06和1.03 0.10）接近参考采样器，然而EPS（0.46±0.14）、SASS 3100（0.62±0.11）、SASS 2300（0.48±0.07）、BioCapture 650（0.58±0.09）和Coriolis FR（0.58±0.08）的平均PSE低于参考采样器。</p>
</li>
<li>
<p><em>生物采样效率（BSE）</em><br>
<u>当需要使用依赖于培养的分析方法来量化和鉴定空气传播的微生物时，目标生物气溶胶对采样压力的敏感性以及采样器诱发此类效应的倾向是需要考虑的重要参数。</u><br>
通过将依赖于培养的BSEs与不依赖培养的PSEs进行比较，我们的结果表明，评估的空气采样器在诱发采样压力方面的倾向存在很大差异。评估的空气采样器对4 μm BG、KR、SM和MS2气溶胶的BSEs在测试试剂间的差异比PSEs更大（图2），这并不奇怪，因为测试试剂被选择用来提供微生物对采样压力不同的敏感性。<br>
<u>BG气溶胶的BSEs和PSEs相互对应的观察结果为PSEs的准确性提供了额外的支持，因为已知 <em>Bacillus</em> 孢子对微生物压力具有高度的耐受性。</u>这些结果还表明，BSEs和PSEs是可比较的度量，可用于评估与采样相关的压力。KR气溶胶的BSEs和PSEs也彼此对应，并且与BG气溶胶对应。但是，SM和MS2气溶胶的BSEs更具可变性，与PSEs相比，BSEs分别更低和更高。因此，我们的结果（图2）表明，<u>BG（细菌孢子）和KR（革兰氏阳性营养细菌）比SM（革兰氏阴性营养细菌）和MS2（非包膜ssRNA病毒）对采样引起的微生物胁迫更具抵抗力。</u>。但是，应考虑到这些结果是由4 μm的由细胞/孢子聚集物组成的气溶胶获得的，与由单个细胞/孢子组成的气溶胶相比，其对压力的反应可能有所不同。<br>
Coriolis FR是BG、KR、SM和MS2的BSEs相似的唯一采样器，平均BSE（0.75±0.09）与相同测试气溶胶PSE（0.58±0.08）相对应，偏移较小（+ 30％）。<br>
BioCapture 650对BG、KR和MS2具有相似的BSEs，平均BSE（0.80±0.09）对应平均PSE（0.58±0.09），偏移很小（+38％）。与BG、KR和MS2相比，SM的BSE平均降低了4倍以上，这表明BioCapture 650比参考采样器对SM的伤害更大，但该应力并未影响BG、KR或MS2。<br>
XMX-CV对BG和KR具有相似的BSEs，平均BSE（1.36±0.13）对应平均PSE（1.03±0.07），偏移很小（+32％）。与BG和KR相比，SM的BSE大约高出两倍，这表明参考采样器对SM的伤害比XMX-CV更大，但该压力不会影响BG和KR。与BG和KR相比，MS2的BSE降低了&gt; 6倍，但是与FS、BG、KR和SM相比，由于MS2的PSE也显示了类似的降低的效率（&gt; 5倍），因此该结果不能归因于采样压力的差异。<br>
明胶过滤器对BG、KR和MS2具有相似的BSE，平均BSE（1.14±0.07）对应平均PSE（1.01±0.06），偏移很小（+13％）。与BG、KR和MS2相比，SM的BSE约低38倍，这表明明胶过滤器对SM的伤害比参考采样器更多，但该应力对BG、KR和MS2影响不大。<br>
SASS 3100对BG和KR的BSE相似，平均BSE（0.80±0.04）对应平均PSE（0.62±0.11），偏移较小（+30％）。与BG和KR相比，SM和MS2的BSEs分别降低了约80倍和40倍，这表明SASS 3100对SM和MS2的伤害均大于参考采样器，但对BG和KR则没有看到这种效果。<br>
SASS 2300对BG、KR和MS2具有相似的BSEs，平均BSE（0.64±0.21）对应平均PSE（0.48±0.10）且偏移很小（+33％）。与BG、KR和MS2相比，SM的BSE高约2.5倍，这表明参考采样器对SM的伤害大于SASS 2300，但该应力对BG、KR和MS2没有影响。<br>
ESP对BG和KR具有相似的BSEs，平均BSE（0.52±0.05）对应平均PSE（0.46±0.14），偏移较小（+13％）。SM和MS2的BSEs分别低约4倍和17倍，这表明ESP对SM和MS2的伤害均大于参考采样器，但压力不会影响BG和KR。<br>
在BSEs和PSEs之间始终观察到的正偏差（13％–38％）表明，相对于参考采样器，小偏差高估了估计的采样器的BSEs或低估了PSEs。<br>
总体而言，我们的结果表明，采用干法采集原理的采样器（ESP、SASS 3100、明胶过滤器和BioCapture 650）比采用湿法采集原理的采样器（SASS 2300、XMX-CV和Coriolis FR）对SM的培养力/生存力具有更大的影响。在MS2中并没有观察到相同的模式，两个干采样器（ESP和SASS 3100）似乎比湿采样器（SASS 2300和Coriolis FR）对MS2的伤害更大，而与湿采样器相比，其他两个干采样器（明胶过滤器和BioCapture 650）对MS2的影响似乎没有不同。可能的解释是，MS2对干燥的敏感性不如SM，并且对明胶过滤器和BioCapture 650仍然具有感染性，而对ESP和SASS 3100则没有感染性。明胶过滤器的制造商使用说明文件指出它们含有46％–49％的残留湿度，而BioCapture 650在采样周期结束时自动从其转盘式冲击器上冲洗采样的材料。因此，样品在转移进液体之前有较短的干燥状态保持时间，相对于ESP和SASS 3100，它们是必须在采样后将样品手动提取到液体中（即，样品在转移到液体之前在干燥状态下具有较长的保持时间）。对于BG和KR，在采样器之间未观察到差异，这可以与特定的采集原理相关联，表明这两种测试试剂均对评估的空气采样器施加的采样压力具有抵抗力，而与使用湿采集还是干采集原理无关。| <em>Notes: 比较湿度和应力。</em></p>
</li>
</ul>
<h4 id="浓缩因子">浓缩因子</h4>
<p>除了采样效率的重要性（这是确保精确定量生物气溶胶的基础）之外，空气采样器的浓缩系数可能也很重要，因为它会影响所采样材料的数量和浓度。空气采样器的浓度因子取决于其空气流量、收集介质的体积和采样效率。与BioSampler相比，相对浓度因子为100的空气采样器对于相同的采样操作，其检测限将降低100倍，当目标生物气溶胶的浓度水平较低时，这可能是重要的性能标准。同样，对于需要<u>高时间分辨率</u>的采样应用，或当其他因素限制采样时间时，使用具有<u>高浓度因子</u>的空气采样器可能对于确保存在足够的采样材料至关重要。<br>
相对于参考采样器，被评估空气采样器的理论浓度因子表明，尽管明胶过滤器的理论浓度因子为2，但其他采样器的理论浓度因子更高，范围为46-201（表1）。通过将它们与当前工作中获得的BSEs和PSEs相乘，将理论相对浓度因子分别转换为End-to-End相对生物浓度因子（BCFs）和物理浓度因子（PCFs）（表S3）。SI提供了每个空气采样器和测试试剂的BCFs和PCFs的合并汇总（表S4）。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-5-Dybwad-2014/T-S4.jpg" alt="T-S4"></p>
<p>结果表明，除了使用SASS 3100和明胶过滤器对4 μm SM的BCFs，以及使用OMNI-3000对1 μm FS的PCFs和使用明胶过了长期对4 μm的MS2，所评估的采样器的BCFs和PCFs始终高于参考采样器。XMX-CV在所有测试气溶胶（≥200）中观察到了最高的BCFs和PCFs，除4 μm MS2、1 μm BG和1 μm FS外。对于4 μm MS2，SASS 2300的BCF（〜93）和PCF（〜84）最高。对于1 μm的BG和1 μm的FS，SASS 3100具有最高的BCF（BG; 〜44）和PCF（BG：~50；和FS：~43）。与其他被评估的采样器相比，明胶过滤器（≤3）和OMNI-3000（≤10）始终观察到较低的BCFs和PCFs。<br>
总之，观察到的结果表明，尽管一些评估的空气采样器由于采样效率（BSEs/PSEs）低于参考采样器（表S3）而可能低估了生物气溶胶的浓度水平，但他们通常会获得包含更高浓度的采样材料，因为与参考采样器相比（表S4）其浓度因子（BCFs/PCFs）更高。| <em>Notes: 即采样效率低但是浓缩浓度高</em></p>
<h4 id="空气采样器适用性评估">空气采样器适用性评估</h4>
<p>根据所评估的空气采样器的性能（图1和2，以及表S3和S4），评估了其对各种生物气溶胶采样应用适用性的一般特征（表2）。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-5-Dybwad-2014/T2-1.jpg" alt="T2-1"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-5-Dybwad-2014/T2-2.jpg" alt="T2-2"><br>
适应性功能分为定量和定性采样应用，因为基本的空气采样器性能要求可能会有所不同，具体取决于目标是准确确定浓度水平（量化）还是检测/识别（定性）。<br>
由于采样效率直接影响生物气溶胶浓度水平的估算（例如，绝对采样效率为50％会导致真实水平的两倍低估），因此可以将其视为定量生物气溶胶采样的基本性能要求。因此，使用被评估的空气采样器的BSEs和PSEs评估其在定量采样应用中的适用性。如果相对采样效率≥0.5，则认为空气采样器是合适的，这意味着与参考采样器相比，生物气溶胶水平低估了不到两倍（表2）。<br>
虽然空气和样品之间的直接定量关系对于精确定量至关重要，但是定性采样应用并不取决于这种直接关系的存在。<br>
对于定性应用，可以将获得足够的材料（即高于分析方法的检测限）视为主要采样目标，因此采样器将空气中的生物气溶胶浓缩到样品中的能力因此被认为是基本的性能要求。因此，被评估的空气采样器的BCFs和PCFs被用于评估其在定性采样应用中的适用性。如果相对浓度因子≥1.0，则认为是空气采样器是合适的，因此与参考采样器相比，这意味着采样材料的浓度水平相近或更高（表2）。<br>
但是，应注意，由于当前工作中获得的测试和评估结果与BioSampler相比较，因此所采用的适用性标准也具有内在的相对性。因此，出于本研究的目的，BioSampler的PSEs和BSEs和浓度因子被视为“性能基准”，尽管这不应被认为暗示BioSampler对所有生物气溶胶具有100％的绝对PSEs和BSEs，或其浓度因子将适合所有生物气溶胶采样目的。<br>
<u>之所以选择BioSampler作为参考采样器，是因为该研究涉及的粒径已被证明具有90％以上的采样效率。还证明了BioSampler会施加有限的采样压力，从而使压力敏感的空气传播微生物得以保持可培养性。</u><br>
但是，当前研究中获得的一些测试和评估结果，尤其是XMX-CV和SASS 2300观察到的4 μm SM气溶胶的BSEs均大于1.5，可能表明BioSampler施加了采样应力，从而相对于一些评估的采样器更大的降低了SM的可培养性。尽管这些是有趣的观察，但仍需要进一步研究以验证和研究这些结果。尽管如此，它们仍可以看作是一个有趣的提醒，那就是，对于所有生物气溶胶和生物气溶胶采样目的，没有一个空气采样器很可能会是普遍最佳的，甚至是适合的。</p>
<h3 id="结论和意义">结论和意义</h3>
<p>为生物气溶胶采样应用选择空气采样器是一项艰巨的任务，必须格外小心，以确保获得的结果准确可靠地描述了所研究的生物气溶胶。当前的工作有助于提高用户对在选择空气采样器时应考虑的重要因素的认识。我们的结果强调了使空气采样器性能与目标生物气溶胶和下游分析方法保持一致的重要性，并提供了有关被评估的空气采样器对各种生物气溶胶采样应用的适用性的几项通用特点（表2）。<br>
尽管这项研究涉及测试试剂的多种选择，但并未具体解决其他几种通用研究的生物气溶胶（例如：真菌、真菌孢子、蛋白质、花粉和微生物碎片，如内毒素和霉菌毒素）。但是，由于我们建立了具有高度可变的形态和对采样压力敏感度的气溶胶测试剂的PSEs和BSEs，因此对其他类型的生物气溶胶感兴趣的从业人员至少在所评估的粒径范围内仍可能能够提取相关的性能信息。在任何情况下，即使在经过专门评估的微生物类别内，也应仅认真尝试并仔细考虑将结果推断为包括其他类型的生物气溶胶的方法。<br>
我们认为，这项工作中提出的性能测定结果可能有助于更好地选择空气采样设备，从而导致对空气传播的病原体和其他感兴趣的生物气溶胶进行更准确、可靠、可比且相关的暴露评估。</p>
]]></content>
      <categories>
        <category>Literature notes</category>
        <category>Air Sampler</category>
      </categories>
      <tags>
        <tag>Air Sampler</tag>
      </tags>
  </entry>
  <entry>
    <title>☆文献笔记3|PlosOne2013|使用涂有矿物油的琼脂板增强Andersen采样器的生物气溶胶采样</title>
    <url>/2020/04/01/literatures-3-Xu-2013/</url>
    <content><![CDATA[<p><strong>摘要：</strong> <strong>背景：</strong> 自1950年代发明以来，Andersen型撞击器作为生物气溶胶采样标准，得到了广泛应用，包括2001年美国炭疽病的调查。然而，其相关的问题如冲击、干燥以及颗粒弹跳尚未得到解决。<strong>手段：</strong> 这里，我们通过在琼脂平板上铺一层矿物油层（100 μL）提高了其生物收集效率。对使用涂有矿物油的琼脂平板的Andersen六级采样器和BioStage撞击器在收集室内和室外细菌和真菌气溶胶上进行了测试。还研究了采样时间（5、10和20 min）对使用BioStage撞击器采集环境生物气溶胶和雾化的 <em>Bacillus subtilis</em> (G+)、<em>Escherichia coli</em> (G-)的影响。此外，还使用光学粒子计数器（OPC）研究了矿物油板减少粒子反弹的作用。<strong>结果：</strong> 实验结果显示，使用涂有矿物油的琼脂板可以显着提高Andersen型撞击器可培养生物气溶胶的回收率（p &lt; 0.05）。回收率的提高取决于生物气溶胶的大小、类型、采样时间和环境。通常，与BioStage撞击器相比，在10 min的采样中，Andersen六级采样器最后一级观察到了更多的增强（额外20％）。 在对雾化的 <em>B. subtilis</em>、<em>E. coli</em> 和环境气溶胶进行采样时，其增强效果随采样时间的增加而增强，从5 min时的50％增加到20 min时的约100％。OPC结果显示，采样10min，使用矿物油可以有效地减少平均66％的颗粒反弹。 <strong>结论：</strong> 本研究表明，真菌气溶胶的增强主要归因于减小的冲击力，而对于细菌气溶胶，减小的冲击、干燥和颗粒弹跳起主要作用。开发的技术可以轻松增强基于琼脂的技术，包括那些用于生物气溶胶监测的大容量便携式采样器。</p>
<a id="more"></a>
<h3 id="文献">文献</h3>
<p>Xu, Z., Wei, K., Wu, Y., Shen, F., Chen, Q., Li, M., &amp; Yao, M. (2013). Enhancing bioaerosol sampling by Andersen impactors using mineral-oil-spread agar plate. PLoS One, 8(2), e56896.</p>
<h3 id="前言">前言</h3>
<p>暴露于自然产生或有意释放的生物气溶胶已被证明会造成各种不良的健康影响。除此之外，生物气溶胶在大气化学中的作用也受到越来越多的关注。<u>对于生物气溶胶的研究，采样是重要的一部分。</u>在发现可追溯到1833年的空气中的霉菌孢子之后，立即发明了一种类似于撞击器的生物气溶胶采样器，相关发现发表在Science上。之后，发明了许多生物气溶胶采样器，包括全玻璃撞击器、利用电力的设备和临界孔液体撞击器。<u>1958年，发明了六级Andersen采样器，并进一步推荐作为标准的生物气溶胶采样工具。</u>由于其简单性、高收集效率和易用，Andersen型撞击器一直被广泛用于生物气溶胶采样，包括2001年在美国对炭疽发作的调查。<br>
Andersen型撞击器是基于惯性的，主要与琼脂板配合使用以采集可培养的生物气溶胶。对于基于碰撞的采样器，其生物学效率与采样器截留尺寸、喷射至板的距离和微生物有关。<u>除了在采集高水平生物气溶胶上存在超负荷问题外，其缺点还包括冲击力、颗粒弹跳、干燥效应和微生物包埋。</u>Andersen六级采样器有六个级别，每个级别都有不同的截留尺寸，对应于不同的碰撞速度：24、12.8、5.3、3.0、1.8和1.1 m/s。因此，在不同的级别，冲击力是不同的。在其他Andersen型撞击器中，六级Andersen采样器的第六级，即BioStage撞击器（SKC）也得到了广泛使用，包括其便携版本QuickTake 30（SKC）。<u>使用裸琼脂平板收集可培养的生物气溶胶，随着采样时间的延长，琼脂表面会变干，从而导致颗粒弹跳。另一方面，由于较高的颗粒撞击速度，颗粒也可以直接包埋在琼脂培养基中，这会抑制其生长和检测。而且，使用撞击器采集生物气溶胶时，空气干燥在降低采样效率上也起着重要作用。由于这些问题，Andersen采样器经常低估了生物气溶胶的负荷。</u>不幸的是，自发明以来，在Andersen型采样器用于采集生物气溶胶上没有做出任何相关的改进。<br>
矿物油（不会促进或抑制细菌生长）已被用作BioSampler（SKC）的收集介质，以延长采样时间，从而减少再雾化的问题。研究发现，BioSampler可以与矿物油一起使用达8小时，而不会降低收集效率。在我们之前的研究中，我们改进了便携式生物气溶胶采样器RCS High Flow（Biotest），使用矿物油条代替琼脂条，将矿物油完全填充到采样条的小方块中。实验结果表明，在不同环境中采样时，与使用琼脂条相比，使用矿物油条产生的可培养细菌气溶胶浓度水平要高出大约4-12倍。<u>由于其高粘度和非蒸发性，使用矿物油条可减少颗粒反弹。此外，使用矿物油还可以减少已经收集的和嵌入矿物油中的那些生物气溶胶变干燥。</u>尽管如此，我们先前工作中使用的方法也有其自身的局限性，即在采样后必须将矿物油取出并涂在琼脂平板上以进行生物气溶胶检测。除了可能的污染之外，该步骤还可能导致条上矿物油的损失。<br>
这里，我们旨在研究使用涂有矿物油琼脂板（在琼脂板上铺一层矿物油薄层）改善Andersen型采样器生物气溶胶采样的可行性，这种方法避免了额外的样品处理步骤。为了研究不同撞击速度的影响，使用了Andersen六级采样器。此外，还使用了Andersen采样器第六级BioStage撞击器研究了采样时间的影响。本研究中，使用涂有矿物油的琼脂板收集了雾化的敏感细菌 <em>E. coli</em>、不敏感的 <em>B. subtilis</em>、以及环境细菌和真菌生物气溶胶，并与常规的琼脂板进行了比较。实验结果表明，使用涂有矿物油的琼脂板可以大大提高Andersen型采样器的生物采集效率，并且所开发的技术可立即用于增强当前基于琼脂板的生物气溶胶监测.</p>
<h3 id="材料和方法">材料和方法</h3>
<h4 id="使用的生物气溶胶采样器和涂有矿物油琼脂板的制备">使用的生物气溶胶采样器和涂有矿物油琼脂板的制备</h4>
<p>在这项研究中，使用Andersen六级采样器（SKC）和便携式BioStage撞击器（QuickTake 30）（SKC）研究了涂有矿物油扩散琼脂的效率。Andersen六级采样器有六个级，分别具有0.65、1.1、2.1、3.3、4.7和7.0 μm的截留直径和不同的撞击速度（24-1.1 m/s）。BioStage撞击器是Andersen六级采样器的第六级，截留直径为0.65 mm。SKC QuickTake 30泵的最新研发为BioStage撞击器提供了便携性。QuickTake 30泵可以连续以最高30 L/min的流速对真空抽吸空气4 h。<br>
本研究中，在取样之前，吸取100 μL矿物油（ViaTrap Collection Medium，SKC），然后使用涂棒将其均匀涂在胰蛋白酶大豆琼脂（TSA）（30 mL）（Becton Dickinson Microbiological System，Sparks，MD）培养皿上，以收集细菌；涂在麦芽浸提琼脂（30 mL）（Becton Dickinson Microbiology Systems，Sparks，MD），以收集真菌。操作在生物安全等级为II级的安全柜中进行。考虑到所用培养皿的尺寸（直径约8.6厘米），在琼脂板上形成约180μm厚的矿物油膜。 使用的矿物油既不会杀死细菌也不让细菌生长。</p>
<h4 id="实验步骤">实验步骤</h4>
<p>Andersen六级采样器和BioStage撞击器分别以28.3 L/min的速度与涂有矿物油琼脂板或常规板一起操作，以收集室内和室外环境中的细菌和真菌气溶胶。对于Andersen六级采样器的使用，仅运行了10分钟；而对于BioStage撞击器，运行了不同的采样时间：5、10和20分钟。交替使用涂有矿物油的琼脂板和普通琼脂板，并且在每种研究的环境中至少进行了三个独立的实验。对于每组实验，在测试的采样时间段内进行了3次这种交替操作，以使所描述的影响（如果有的话）可以随机分配并分布在涂有矿物油和常规琼脂板上。对于环境采样，当采样器开始收集生物气溶胶时，我们将其留在原处，因此人对采样的影响将会有限。<br>
为了进一步研究此技术，也使用Collison雾化器（BGI）以2.5 L/min的雾化速度对 <em>Bacillus subtilis</em>（ATCC 9372）（营养细胞）和 <em>Escherichia coli</em>（ATCC 15597）进行了雾化，所得生物气溶胶进一步通过氮气气流（约13 L/min）携带进放置在生物安全等级II安全柜内的小室中。<em>B. subtilis</em> 是一个比较稳定的种，革兰氏阳性（G+）菌，而 <em>E. coli</em>）是一个敏感的种，革兰氏阴性（G-）菌。然后使用BioStage撞击器以28.3 L/min的速度交替在涂有矿物油的琼脂板和普通琼脂板上收集雾化的细菌，收集时间分别为5、10和20分钟。🤔<strong>BioStage撞击器的额外气流通过安全柜内的干净空气补偿。</strong> 取样后，将所有琼脂板在胰蛋白酶大豆琼脂上于26℃下培养以获得环境生物气溶胶，于37℃下培养以获得 <em>E. coli</em>，于30℃下培养以获得 <em>B. subtilis</em>。手动计数菌落形成单位（CFU）并进行统计校正。对每种细菌菌种至少进行三个独立的实验。对于雾化的细菌，如果没有形成聚集体，它们的大小为0.6-1.0 μm，因此，大多数细菌将在安德森六级采样器的最后一级收集。因此，我们仅在受控实验室条件下对BioStage撞击器进行了测试。进行取样时，将涂有矿物油的琼脂板和常规的琼脂平板带到没有取样的取样位置作为空白对照。<br>
此外，还使用光学粒子计数器监测了BioStage撞击器使用涂有矿物油琼脂板和普通琼脂板上的颗粒弹跳。OPC在15个通道中通过0.3-20 μm的光学尺寸测量颗粒数目浓度。在20 min的采样时间内，BioStage撞击器使用双向管操作，该双向管分别以1.2 L/min的速度连接到OPC上和以28.3 L/min的速度连接到真空泵上。采样最初10 min，使用涂有矿物油的琼脂板，接下来10 min，使用常规琼脂板。每种情况的粒径分布通过BioStage撞击器的OPC进行下游监测。每个粒径范围（0.35-0.45、0.45-0.575、0.575-0.725、0.725-0.9、0.9-1.3、1.3-1.8、1.8-2.5、2.5-3.5、3.5-4.5、4.5-6.25、6.25-8.75、8.75-12.5、12.5-17.5）颗粒弹跳减少量通过以下公式进行计算：<br>
Particle bounce reduction = (1- N<sub>mineral-oil-spread</sub>/N<sub>regular</sub>) x 100%<br>
当使用涂有矿物油的琼脂板时，N<sub>mineral-oil-spread</sub>表示每个特定尺寸范围内的平均颗粒浓度水平；当使用常规琼脂板时，N<sub>regular</sub>表示相应的平均浓度。</p>
<h4 id="统计分析">统计分析</h4>
<p>通过Shapiro-Wilk test检查了涂有矿物油琼脂板和普通琼脂板所获得的生物气溶胶浓度水平的正态性，并通过SPSS 16.0软件使用独立样本t检验进行了进一步分析。变量的方差相等性也使用Levene’s test进行了分析。p值小于0.05表示各组之间存在显着差异（置信度95％）。</p>
<h3 id="结果和讨论">结果和讨论</h3>
<p>这里，我们研究了使用涂有矿物油的琼脂板增强Andersen型采样器对生物气溶胶采样的可行性。在我们的实验中，我们观察到涂有矿物油琼脂板的使用大大提高了Andersen型采样器对环境生物气溶胶和雾化的细菌气溶胶的生物采集效率（p值见表1）。图1显示了使用Andersen六级采样器结合涂有矿物油和常规琼脂平板对室内细菌气溶胶采样10 min的结果。可见，无论粒度范围如何，涂有矿物油的琼脂板均能显着提高Andersen六级采样器的细菌气溶胶收集效率，从第六级的36％提高到第三级的71％（p&lt;0.05，表1）。当使用Andersen六级采样器在室外采样细菌气溶胶时，获得了相似的结果（图S1）。与室内细菌气溶胶采样不同，室外发现采样器第4级的保护效果更加明显，增强了约97％。<u>这种差异可能是由于在不同环境中粒径分布和细菌气溶胶成分的差异所致。</u>通常，观察到的增强效果随Andersen六级采样器的级别而变化，这可能是以下几个因素的差异所致：撞击应力、粒径、物种组成和环境。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-3-Xu-2013/T1.jpg" alt="T1"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-3-Xu-2013/F1.jpg" alt="F1"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-3-Xu-2013/S1.jpg" alt="S1"><br>
矿物油膜厚约180 μm，因此生物气溶胶颗粒可以嵌入层中，从而降低了干燥效果。由于矿物油具有非蒸发性，因此也可以保护琼脂表面免于干燥，从而减少颗粒反弹。此外，矿物油层比琼脂表面更软，因此降低了相关的冲击力。<u>尽管在Andersen采样器以28.3 L/min运行时，各阶段的采样干燥力（即每单位时间每单位面积在琼脂表面上受到的空气冲击量）保持相似，但每个级具有不同的撞击速度：24（第6级）、12.8（第5级）、5.3（第4级）、3.0（第3级）、1.8（第2级）和1.1（第1级）m/s，因此呈现出不同的冲击力。在相似的撞击速度下，与较小的细菌颗粒相比，较大的细菌颗粒倾向于承受较高的撞击压力。因此，Andersen采样器的不同级对生物气溶胶颗粒施加不同的冲击力。因此，与较小的颗粒相比，使用矿物油对较大颗粒的撞击力具有更大的保护作用。对于采样器不同级别截留尺寸不同，收集了不同大小的颗粒，因此收集到的物种也可能不同。不同物种对采样力的响应不同。然而，在自然环境中，细菌颗粒可能会以聚集体的形式出现或聚集在较大的非生物颗粒上，从而可以被收集在采样器的较上级。就回收而言，这种可能性可能使聚集体与单个细胞的区分变得困难。此外，不同的环境也可能具有不同的微生物物种组成。而且，收集到Andersen六级采样器各级的颗粒在采样线中停留的时间不同，且由于颗粒弹跳，某些颗粒可能受到了不止一次的冲击。考虑到所有这些影响因素，涂有矿物油琼脂板在Andersen六级采样器不同级的增强趋势很难预测。</u><br>
为了研究采样时间对涂有矿物油琼脂平板性能的影响，我们使用BioStage撞击器对环境细菌气溶胶、雾化的 <em>B. subtilis</em> 和 <em>E. coli</em> 进行了5、10和20 min的采样。相关结果见图2、3、4和S2。如图2所示，使用涂有矿物油的琼脂板采集室内细菌气溶胶时，增长的采样时间会使增强作用从10 min时的约26％增加到20 min时的约50％（p=0.007；0.009），5 min时未观察到增强效果。出乎意料的是，如图2所示，在20 min时观察到了较高的细菌气溶胶浓度，这很可能是由于环境生物气溶胶的突然波动所致。当使用BioSatge撞击器收集不同采样时间（5、10和20 min）的室外细菌气溶胶时，获得了相似的结果，如图S2所示。与室内采样不同，室外采样中所有采样时间均导致涂有矿物油和普通琼脂板间存在显著差异（p&lt;0.05，表1）。与室内细菌气溶胶采样相比，室外细菌气溶胶采样得到了更多的增强，特别是在采样20 min时，使用矿物油获得的室外细菌气溶胶保护效果约高2倍。<u>这可能是由于物种组成及其在不同环境中对采样力的敏感性不同所致。在不同的环境中，革兰氏阳性（G+）和革兰氏阴性（G-）细菌可能占不同的百分比，并且它们对采样压力的反应可能不同。因此，使用矿物油可能会导致不同的增强效果。此外，观察到的室内和室外之间的差异也可能是由于湿度不同：室内46％，室外36％。</u><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-3-Xu-2013/F2.jpg" alt="F2"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-3-Xu-2013/S2.jpg" alt="S2"><br>
当在不同采样时间采集雾化的 <em>B. subtilis</em> 和 <em>E. coli</em> 时，观察到了相似的结果，如图3和图4所示。不管哪个采样时间，与普通琼脂板相比，使用涂有矿物油的琼脂板均能显着提高两个菌株回收率（p&lt;0.05，表1）。通常，<em>B. subtilis</em> 气溶胶采样时间增加，可导致使用普通琼脂板采集的雾化的可培养细菌气溶胶数目降低，这可能是由于延长的采样干燥；然而对于涂有矿物油的琼脂板，采样时间增加导致生物气溶胶回收率增加，如从5min的47%增加到20min的60%。这表明采样力导致大量细菌细胞变得不可培养，而使用矿物油可以有效地减少此类副作用。与 <em>B. subtilis</em> 相似，采样时间增加导致 <em>E. coli</em> 气溶胶回收率提高，如使用涂有矿物油琼脂板时，从5min的64％增加到20min的107％。通常，使用涂有矿物油的琼脂板时，在所有的采样时间，<em>E. coli</em> 的增强率高于 <em>B. subtilis</em>。<em>E. coli</em> 是革兰氏阴性细菌，与革兰氏阳性菌 <em>B. subtilis</em> 比，它对环境压力更敏感，因此使用矿物油对 <em>E. coli</em> 具有更大的保护作用。通常，使用涂有矿物油的琼脂板时，采样时间增加也会导致可培养的 <em>E. coli</em> 和 <em>B. subtilis</em> 数目减少。对于环境生物气溶胶，5 min时增强效果相对较低（无统计学意义），这可能是由于较少的颗粒弹跳和干燥。相比之下，对于新鲜雾化的细菌气溶胶，在相同的采样时间内，其增强也显着增加了40％以上。这个差异可能是由于采集的生物气溶胶的初始存活力，即新鲜雾化的生物气溶胶的存活力高，而环境气溶胶的存活力低。<em>PS: 基数大小的问题。</em><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-3-Xu-2013/F3.jpg" alt="F3"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-3-Xu-2013/F4.jpg" alt="F4"><br>
<u>连续的采样干燥也可能导致琼脂变干，从而暴露已经收集的生物气溶胶，而矿物油则不会干燥和蒸发。在许多研究中已经观察到生物气溶胶的采样干燥。一项研究表明，一些便携式微生物采样器生物气溶胶回收率的下降是因为琼脂板的干燥（导致颗粒反弹）和那些已经收集的生物气溶胶颗粒的干燥。由于矿物油不挥发，使用矿物油可以减少相关的干燥问题。</u>之前，我们的研究发现便携式BioStage撞击器在5min采样的可培养细菌和真菌浓度比RCS High Flow高约8倍，这可能是因为RCS High Flow采样器具有更高的干燥效果。我们最近的研究发现，与RCS High Flow使用琼脂条相比，使用矿物油填充的琼脂条产生的可培养细菌气溶胶浓度高约4-12倍。无论物种和环境如何，Andersen型采样器使用涂有矿物油的琼脂板可显着降低采样应力和颗粒反弹。<br>
此外，我们还在相同的环境中使用Andersen六级撞击器和BioStage撞击器对真菌气溶胶进行了类似的实验，结果如图5、6、S3和S4所示。如图5所示，室内环境中使用Andersen六级采样器采样，不同于图1中所示的细菌气溶胶分布，真菌气溶胶分布倾斜于第3级和第4级（截留尺寸分别为3.3和2.1 μm）。通常，与细菌气溶胶采样实验相似，除第一级（p=0.13）和第六级（p= 039）外，使用涂有矿物油琼脂平板可大大增强Andersen六级采样器对真菌气溶胶的采样。第5级（100％，p= 0.048）和第2级（60％，p= 0.001）也发现了明显的保护作用。与细菌气溶胶相似，观察到的增强作用随级别而变化，这可能是由于其大小分布和物种组成不同。出乎意料的是，如图S3所示，使用Andersen六级采样器对室外真菌气溶胶采样时未观察到增强（p&gt;0.05，表1）。对于BioStage撞击器对室内真菌气溶胶进行采样（图S6），5min时差异不显著（p= 0.243），而10和20min时，分别观察到34％和48％的增强。与室内不同，使用BioStage撞击器对室外真菌气溶胶进行采样，所有采样时间涂有矿物油和普通琼脂板之间差异均显著（p&lt;0.05，表1），如图S4所示。室内和室外真菌气溶胶采样之间的差异可能是由于它们的颗粒大小、物种组成及其对进一步压力的敏感性不同所致。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-3-Xu-2013/F5.jpg" alt="F5"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-3-Xu-2013/S3.jpg" alt="S3"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-3-Xu-2013/F6.jpg" alt="F6"><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-3-Xu-2013/S4.jpg" alt="S4"><br>
然而，通过独立样本t检验，使用BioStage撞击器进行采样，无论是常规琼脂板（p=0.87）和矿物油板（p=0.879），采样时间对真菌生物气溶胶回收率的影响均不显著。<u>这表明，真菌气溶胶似乎具有更强的抗干燥性和更少的颗粒弹跳，并且在相同的撞击速度下，使用矿物油可能不会显着提高其从纯干燥影响下的回收率。</u>之前，也有研究指出，在堆肥现场使用过滤采样方法进行采样，延长采样时间至6 h并不会影响某些真菌菌株的可培养性。另一项研究中，真菌孢子也显示出抗干燥性，因为采样时间延长，并不会降低其培养能力，相反，增加采样时间和流速导致AGI-30采样器的真菌孢子回收率下降。在他们的研究中，使用AGI-30采样器观察到的真菌孢子回收率较低，可能是由于撞击过程引起的高撞击应力所致。我们以前的研究发现，静电采样（撞击速度要低几个数量级）比其他高撞击应力的采样器（如BioStage撞击器）获得的真菌种类更丰富。<u>这些结果表明，与干燥相比，真菌气溶胶可能更容易受到高冲击压力的影响。</u><br>
与Andersen六级采样器不同，BioStage撞击器收集所有大于0.65 μm（其截留尺寸）的颗粒，因此观察到的增强作用适用于所有细菌气溶胶。增加采样时间肯定会增加干燥影响，并且如上所述，使用矿物油可以使这种影响最小化，因为所收集的细菌颗粒可以嵌入矿物油中，从而增加了一层保护层。与Andersen六级采样器最后一级采样10min相比，BIoStage冲击器的增强率似乎略小。这可能是由于假设撞击压力相同（相同的撞击速度为24 m/s），两个不同采样器同一级收集的生物气溶胶颗粒存在差异。对于Andersen采样器的最后一级，所收集的生物气溶胶颗粒应较小（较大的颗粒已收集在1-5级），而由BioStage撞击器收集的生物气溶胶颗粒包括了所有生物气溶胶颗粒。此外，与BioStage撞击器相比，Andersen采样器最后一级收集的生物气溶胶颗粒在采样线中停留的时间更长，因此遭受的采样伤害更大。此外，由于颗粒在琼脂表面上反弹，Andersen采样器最后一级收集的生物气溶胶颗粒可能在收集之前已经受到了几次影响。这些差异的结果是，与BioStage撞击器相比，Andersen采样器最后一级收集的生物气溶胶颗粒可能承受了更大的压力。因为使用矿物油可以有效地减少此类影响，因此在比较10min的采样时，相比BioStage撞击器，Andersen采样器一级的增强效果更高。<em>PS：强调矿物油的作用。</em><br>
OPC监测结果表明，使用矿物油可以显着降低颗粒反弹，如图7所示。排除那些负值（对于较小的颗粒，如0.35-0.45 μm）以及由于突然环境波动而变化较大的值，10min的采样时间，所有颗粒的平均颗粒减少率约为66％。如前所述，对于Andersen采样器，由于颗粒反弹，许多生物气溶胶颗粒受到了不止一次的撞击，因此遭受了更多的撞击伤害。但是，对于BioStage撞击器，它只在琼脂板上撞击一次。因此，与BioStage撞击器相比，涂有矿物油的琼脂板的增强效果在Andersen型采样器最后一级采取的样品中更大。在这里观察到的使用涂有矿物油的琼脂平板提高了生物气溶胶回收率的主要原因是降低了采样应力（冲击和干燥）和颗粒反弹问题。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-3-Xu-2013/F7.jpg" alt="F7"></p>
<h3 id="结论">结论</h3>
<p>总体而言，本研究结果显示，使用Andersen型采样器采样时，使用矿物油可以延长采样时间，且不会降低可培养的生物气溶胶的回收率。如Andersen采样器和BioStage撞击器的结果所示，<strong>回收率的提高取决于生物气溶胶的大小、类型、采样时间和环境。似乎更多的真菌回收率归因于降低的冲击压力，而细菌的回收率则可能是由于涂有矿物油琼脂板的冲击、干燥和颗粒反弹减少。</strong> 未来可能需要对更多纯细菌种类和不同量的矿物油进行研究。琼脂平板上均匀涂油也可以进一步提高基于冲击采样技术的生物气溶胶回收率。此外，使用选择性培养基应对撞击和干燥损伤可以确定在不同条件下使用涂有矿物油琼脂板改善生物气溶胶回收率的主要因素。之前，已经对大容量便携式琼脂平板微生物采样器对雾化的生物气溶胶和环境气溶胶采样性能进行了研究，最近的一项研究显示，这些便携式采样器的采样时间应尽可能短，以避免生物气溶胶颗粒弹跳和干燥问题。重要的是，本研究结果显示，使用涂有矿物油的琼脂板可以消除这些限制。因此，开发的技术可以扩展高容量便携式采样器在更长的时间内收集生物气溶胶的能力，尤其是对于那些低浓度水平的生物气溶胶。<br>
自1950年代发明以来，Andersen型撞击器就一直被用作标准的生物气溶胶采样器，并广泛应用于各种应用中。然而，据我们所知，尚未尝试对其颗粒反弹和干燥等问题进行后续改进。本研究，我们通过在常规板上涂一层矿物油（180μm厚）（如图8所示）显着提高了其生物收集效率。另一方面，我们还发现，使用Andersen型采样器和普通琼脂板显著低估了实际的生物气溶胶负荷。在琼脂板表面上涂抹矿物油层可以大大减少长期存在的问题，如与基于琼脂板生物气溶胶采样相关的颗粒反弹和干燥。此外，在基于撞击的采样器的未来开发中，使用矿物油层还可以提高撞击速度，进而提高物理收集效率。这里，我们仅测试了矿物油，其他类型的非蒸发收集介质也可以涂在琼脂板上，以增强生物气溶胶采样的能力。这里开发的技术非常简单，可以立即用于各种基于琼脂的采集技术中，以更高的效率应用于生物气溶胶采样。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-3-Xu-2013/F8.jpg" alt="F8"></p>
<h3 id="问题">问题</h3>
<ul>
<li>Are initial bacteria or fungi bioaerosol concentrations the same? if the initial concentration is related to the enhanced collection efficiency?</li>
</ul>
]]></content>
      <categories>
        <category>Literature notes</category>
        <category>Air Sampler</category>
      </categories>
      <tags>
        <tag>Air Sampler</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown基本语法</title>
    <url>/2020/06/02/markdown-demo-md/</url>
    <content><![CDATA[<p><strong>摘要</strong>：Markdown基本语法：标题；列表（有序列表、无序列表、To do list[失败]）；引用；文字（字体、大小、颜色、背景色）；强调（斜体、加粗、删除线、下划线）；分割线；数学公式；链接和图片；表格；代码块；关键字；脚注；上下标；流程图；小图标emoji。</p>
<a id="more"></a>
<h1>标题</h1>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>
<p>以上标记效果如下：<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Markdown-Demo/1.theme.jpg" alt="1.theme"></p>
<h1>列表</h1>
<p>有序列表：使用<code>数字加.</code>标识，例如：1.<br>
无序列表：使用<code>*</code>或<code>+</code>或<code>-</code>标识<br>
格式<code>- [空格/x] 文字</code>可以整一个To Do List。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">* 吃饭</span><br><span class="line">- 睡觉</span><br><span class="line">+ 打豆豆</span><br><span class="line">  1.谁是豆豆</span><br><span class="line">    * [ ] 企鹅</span><br><span class="line">    + [x] 海豹</span><br><span class="line">    + [ ] 北极熊</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">type</span>=<span class="string">"square"</span>&gt;</span>实心正方形<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">type</span>=<span class="string">"circle"</span>&gt;</span>空心圆点<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">type</span>=<span class="string">"disc"</span>&gt;</span>实心圆点<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>以上标记效果如下：</p>
<ul>
<li>吃饭</li>
</ul>
<ul>
<li>睡觉</li>
</ul>
<ul>
<li>打豆豆<br>
1.谁是豆豆
<ul>
<li>[ ] 企鹅</li>
</ul>
<ul>
<li>[x] 海豹</li>
<li>[ ] 北极熊</li>
</ul>
<ul><li type="square">实心正方形</li></ul>
<ul><li type="circle">空心圆点</li></ul>
<ul><li type="disc">实心圆点</li></ul>
</li>
</ul>
<h1>引用</h1>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 爷爷</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> &gt; 爸爸</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> &gt; &gt; 我</span></span><br><span class="line"><span class="meta">&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 二爷爷</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> &gt; 叔叔</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> &gt; &gt; 妹妹呢？</span></span><br></pre></td></tr></table></figure>
<p>以上标记效果如下：</p>
<blockquote>
<p>爷爷</p>
<blockquote>
<p>爸爸</p>
<blockquote>
<p>我</p>
</blockquote>
</blockquote>
<p>二爷爷</p>
<blockquote>
<p>叔叔</p>
<blockquote>
<p>妹妹呢？</p>
</blockquote>
</blockquote>
</blockquote>
<h1>文字（字体、大小、颜色、背景色）</h1>
<p>下面使用的是<a href="https://zh.spycolor.com/web-safe-colors" target="_blank" rel="noopener">十六进制颜色值</a>。<br>
<code>&lt;br/&gt;</code>是换行符</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># 字体</span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"Helvetica"</span>&gt;</span>我是Helvetica字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"黑体"</span>&gt;</span>我是黑体字<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"># 大小</span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">"1"</span>&gt;</span>我的大小是1<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">"4"</span>&gt;</span>我的大小是4<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"># 颜色</span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#cc00cc"</span>&gt;</span>Deep Magenta<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#ffcc33"</span>&gt;</span>Sunglow<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"># 背景色</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">#0000ff</span>&gt;</span>背景色是Blue<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">#66ff00</span>&gt;</span>背景色是Bright Green<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>以上标记效果如下：<br>
<font face="Helvetica">我是Helvetica字</font><br>
<font face="黑体">我是黑体字</font><br/><br>
<font size="1">我的大小是1</font><br>
<font size="4">我的大小是4</font><br/><br>
<font color="#cc00cc">Deep Magenta</font><br>
<font color="#ffcc33">Sunglow</font><br/></p>
<table><tr><td bgcolor=#0000ff>背景色是Blue</td></tr></table>
<table><tr><td bgcolor=#66ff00>背景色是Bright Green</td></tr></table>
<h1>强调（斜体、加粗、删除线、下划线）</h1>
<p>1.斜体和加粗使用<code>*</code>或<code>_</code>包裹要强调的文字即可，一个符号是斜体，两个符号是加粗，三个符号是既倾斜也加粗。<br>
2.删除线使用两个波浪号<code>~~</code>包裹文字。<br>
3.下划线中颜色、虚实均可修改，dashed、solid。</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">*这里是斜体*</span><br><span class="line"><span class="symbol">__</span>这里是加粗<span class="symbol">__</span></span><br><span class="line">***这里是斜体和加粗***</span><br><span class="line">~~这里的文字有删除线~~</span><br><span class="line">&lt;span <span class="built_in">style</span>=<span class="string">"border-bottom:1px dashed red;"</span>&gt;下划线&lt;/span&gt;</span><br></pre></td></tr></table></figure>
<p>以上标记效果如下：<br>
<em>这里是斜体</em><br>
<strong>这里是加粗</strong><br>
<em><strong>这里是斜体和加粗</strong></em><br>
<s>这里的文字有删除线</s><br>
<span style="border-bottom:1px dashed red;">下划线</span></p>
<h1>分割线</h1>
<p>三个<code>*</code>或<code>-</code>或<code>_</code></p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">**<span class="strong">*</span></span><br><span class="line"><span class="strong">---</span></span><br><span class="line"><span class="strong">___</span></span><br></pre></td></tr></table></figure>
<p>以上标记效果如下：</p>
<hr>
<hr>
<hr>
<h1>数学公式</h1>
<p><a href="https://www.codecogs.com/latex/eqneditor.php" target="_blank" rel="noopener">在线LaTeX公式编辑器</a><br>
<a href="https://blog.csdn.net/jyfu2_12/article/details/79207643" target="_blank" rel="noopener">Markdown最全公式速查</a><br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Markdown-Demo/gongshi.jpg" alt="gognshi"><br>
以上标记效果如下：<br>
$\overline{X}$<br>
$\underline{X}$<br>
$C_n^2$</p>
<h1>链接和图片</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">点击跳转至Nanopore官网</span>](<span class="link">https://nanoporetech.com/</span>)</span><br><span class="line">我的头像![<span class="string">我的头像</span>](<span class="link">https://github.com/ItsYunmeng/MyPostImages/raw/master/Markdown-Demo/avatar.jpg</span>)</span><br></pre></td></tr></table></figure>
<p>以上标记效果如下：<br>
<a href="https://nanoporetech.com/" target="_blank" rel="noopener">点击跳转至Nanopore官网</a><br>
我的头像<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Markdown-Demo/avatar.jpg" alt="我的头像"></p>
<h1>表格</h1>
<p><code>---</code>的多少可以控制表格的宽度，<code>---</code>前面加<code>:</code>表示左端对齐，右边加<code>:</code>表示右端对齐，两端都加<code>:</code>表示居中显示。<br>
<a href="https://tableconvert.com" target="_blank" rel="noopener">Table Convert: 在线表编辑器</a>,可在线将csv、xlxs等转化为markdown格式。</p>
<figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">|<span class="string">指标</span>|<span class="string">监测1</span>|<span class="string">监测2</span>|</span><br><span class="line">|<span class="string">:-----:</span>|<span class="string">:-</span>|<span class="string">-:</span>|</span><br><span class="line">|<span class="string">氨氮</span>|<span class="string">0.25</span>|<span class="string">0.01</span>|</span><br><span class="line">|<span class="string">亚硝酸盐氮</span>|<span class="string">0.005</span>|<span class="string">0.008</span>|</span><br></pre></td></tr></table></figure>
<p>以上标记效果如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">指标</th>
<th style="text-align:left">监测1</th>
<th style="text-align:right">监测2</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">氨氮</td>
<td style="text-align:left">0.25</td>
<td style="text-align:right">0.01</td>
</tr>
<tr>
<td style="text-align:center">亚硝酸盐氮</td>
<td style="text-align:left">0.005</td>
<td style="text-align:right">0.008</td>
</tr>
</tbody>
</table>
<h1>代码块</h1>
<p>TAB键上方，数字1左边，按三个，输入文字，之后再按三个。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Markdown-Demo/daimakuai.jpg" alt="daimakuai"><br>
以上标记效果如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我是代码块</span><br></pre></td></tr></table></figure>
<h1>关键字</h1>
<p>TAB键上方，数字1左边，按一个，输入文字，之后再按一个。<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Markdown-Demo/guanjianzi.jpg" alt="guanjianzi"><br>
以上标记效果如下：<br>
<code>我是关键字</code></p>
<h1>脚注 （不显示？）</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">当一个学生就要做好自己的<span class="strong">**本职工作**</span>[^学习]</span><br><span class="line">[<span class="symbol">^学习</span>]: <span class="link">好好学习天天向上</span></span><br></pre></td></tr></table></figure>
<p>以上标记效果如下：<br>
当一个学生就要做好自己的<strong>本职工作</strong>[^学习]，然后。。。<br>
[^学习]: 好好学习天天向上</p>
<h1>上标、下标</h1>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Markdown-Demo/shangxiabiao.jpg" alt="shangxiabiao"><br>
以上标记效果如下：<br>
H<sub>2</sub>O<br>
CO<sub>2</sub><br>
爆米<sup>TM</sup></p>
<h1>流程图 （不显示？）</h1>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/Markdown-Demo/2.flowchart.jpg" alt="2.flowchart"><br>
以上标记效果如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">id[A] --&gt;|ab| id4(B)</span><br><span class="line">id4 --&gt; id3&gt;C]</span><br><span class="line">id3&gt;C] --&gt;|是| id1&#123;D&#125;</span><br><span class="line">id3&gt;C] --&gt;|否| id2((E))</span><br></pre></td></tr></table></figure>
<h1>小图标<a href="http://emojihomepage.com" target="_blank" rel="noopener">emoji</a></h1>
<p>直接复制粘贴，可能需要atom安装某一个包，具体忘记了。<br>
💨<br>
👌</p>
<p>引用</p>
<blockquote>
<p>1.<a href="https://blog.csdn.net/manjianchao/article/details/53668280" target="_blank" rel="noopener">markdown编辑器语法——文字颜色、大小、字体与背景色的设置</a><br>
2.<a href="https://www.cnblogs.com/icoty23/p/10911231.html" target="_blank" rel="noopener">Hexo引入Mermaid流程图和MathJax数学公式</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Smart tools</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>文献笔记6|Aerobiologia2011|对使用膜过滤和液体撞击收集的各种大气环境中的空气中的微生物的观察</title>
    <url>/2020/04/02/literatures-6-Griffin-2011/</url>
    <content><![CDATA[<p><strong>摘要：</strong> <strong>手段：</strong> 研究了样品收集时间对使用低流速膜过滤装置和高流速液体撞击器回收可培养的空气传播微生物的影响。在四种不同的大气环境中研究了回收率的差异：一种是在约10.0 m高的大洋中部，一种在约3,000.0 m高的山顶上，一种是在佛罗里达州塔拉哈西的约1.0 m高处，另一种在约1.0 m高的地下洞穴。<strong>结果：</strong> 关于膜过滤的使用，观察到一个共同的趋势：收集时间越短，可培养细菌和真菌的回收率越高。这些数据还表明，在较偏远的大洋中部和山顶大气环境中，细菌，真菌和总数的平均值（按采样时间或方法类别划分）&lt; 3.0 cfu/m<sup>3</sup>，可培养数量较低。在佛罗里达州和地下洞穴，最低平均计数为3.5个细菌cfu/m<sup>3</sup>，最高平均为140.4个总cfu/m<sup>3</sup>。当大气温度允许时，本研究中使用的大容量液体撞击器可导致更高的回收率，在许多类别（细菌，真菌和总cfu）中，回收率最高可达10倍。<strong>结论：</strong> 综合起来，这些数据说明：（1）如果启动成本不是问题并且温度允许使用，对于空中微生物学研究，大容量液体撞击器显然优于膜过滤。（2）尽管膜过滤的成本更低廉，并且“通常”的操作范围更广，但其局限性包括随着采样时间的增加而丧失细胞活力，以及有效提取核酸以进行基于群落的分析的问题；（3）在“极端”大气环境中回收可培养微生物的能力受到限制，因此必须考虑在这些环境中使用“限定”的方法；（4）选择大气环境，即：并非所有事物都无处不在。</p>
<a id="more"></a>
<h3 id="文献">文献</h3>
<p>Griffin, D. W., Gonzalez, C., Teigell, N., Petrosky, T., Northup, D. E., &amp; Lyles, M. (2011). Observations on the use of membrane filtration and liquid impingement to collect airborne microorganisms in various atmospheric environments. Aerobiologia, 27(1), 25-35.</p>
<h3 id="前言">前言</h3>
<p>研究表明，大气中悬浮的微生物的浓度和多样性随位置和海拔的不同而不同。微生物可以通过多种不同的方式运输到不同的高度，包括轻风和重风事件、火灾、地震、空中交通、火山活动和撞击事件。一个很好的例子是，可能发生的大气微生物负荷量是与沙漠沙尘暴有关的。目前据信，每年约有30亿公吨的沙漠尘埃在我们的大气层中移动一定距离，每克沙尘载有约100万至10亿细菌细胞的微生物负荷，即约10<sup>21</sup>至10<sup>24</sup>个细胞，当然还有其他微生物类型需要考虑，包括原生动物，真菌和病毒。在更大规模的大气事件中，例如在大型沙尘暴和火山喷发中观察到的事件中，微生物在全球范围内的扩散很普遍。令人惊讶的是，已经显示出非常多样的细菌和真菌群落可以耐受近地表高度大气中的远距离迁移，但是在同行评审的文献中可明显看出，几乎没有微生物类型可以耐受增加的大气悬浮，特别是在上对流层上、内以及外部。<br>
由于紫外线暴露（嘧啶二聚作用）、干燥（通过空气在细胞壁表面上的移动而脱水）、温度（低温和高温，取决于特定生物的耐受范围）以及大气化学（湿度水平取决于耐受性、氧自由基等），空气中的微生物遭受着很多压力。已知可提高存活率的性状包括<u>色素沉着的细胞壁，抗紫外线损伤的遗传能力（如 <em>Deinococcus spp.</em>）以及产生孢子的能力。</u>孢子是由几种细菌属产生的，例如 <em>Bacillus</em>（土壤中最常见的属之一）和许多真菌。孢子是卵状的囊泡，上面覆盖着一层疏水蛋白，可以抵抗例如紫外线和干燥造成的物理应力。最近对1812年Schomburgk在巴巴多斯和1838年James（达尔文的同事）在非洲西海岸上的一艘船上收集的沙漠尘土样品进行的分析表明，各种灰尘传播的可形成孢子的细菌和真菌可以长期生存（分别约194和约168年）菌。这些数据是涉及微生物生存问题时“期待意外”的很好例证。即使在应力暴露很严重的极端高度（20 km），仍可以发现非孢子形成的微生物，这些微生物表现出适应策略的变化。由于大气运输过程中承受的应力暴露，需要一种收集协议以限制进一步的细胞压力，以确保准确确定存活种群。对于成功的非基于培养物的研究，选择的方法应限制核酸的丢失。以前已经对包括膜过滤、冲击和撞击在内的不同收集方法的利弊进行了评估。<br>
膜过滤（空气被泵通过多孔膜）由于其<u>费用低、易于使用和捕获率高</u>而被广泛使用。过滤单元很容易在内部使用容易获得的组件制造，例如金属或刚性聚氯乙烯管、阀门和小型真空泵。我们已经组装了许多装在塑料工具箱或盒子中的单元，这些单元可以通过逆变器由直流电供电，以在偏远地区使用。可以使用的膜包括纤维素尼龙滤膜和孔径小于0.02 μm（用于捕获病毒）的玻璃纤维滤膜。过滤的缺点包括：<u>由于过滤速度和时间而导致微生物在过滤器表面干燥（无意地选择了可形成孢子的微生物）、过滤尺寸（小直径的过滤器可能导致细胞在高颗粒负载环境中堆积），从过滤器表面提取核酸的效率低下，以及过滤器的厚度（薄的过滤器会导致nutrient shock）。</u><br>
将微生物撞击到液体基质中是用于收集大气微生物的另一种测定方法。广泛使用的液体撞击器是利用低流量的AGI-30。尽管研究表明AGI-30是一种低成本高效收集气溶胶化微生物以进行基于p培养和非基于培养分析的方法，但流速限制了对大量空气的分析，并且玻璃结构容易受到野外研究的考验。已开发出高流速液体撞击器，可以从大气中收集低浓度的微生物，并已用于细菌、真菌以及病毒的培养和非培养分析。<u>使用撞击器的好处是可以将液体基质分开以进行各种分析，如同时使用不同的培养基进行培养、直接计数、分子和细胞培养测定。液体撞击的缺点包括某些撞击器的捕获率低，成本高（高流速撞击器），收集液因蒸发而损失以及剧烈起泡（某些高流量撞击器被设计用于监测和补偿流体的损失），各种撞击液体的捕获效率，由于接触室弹跳和再雾化的影响而导致的细菌和真菌的捕获率低，病毒大小颗粒的捕获率低以及存活率降低（即，由于bubbling导致病毒失活或收集溶液的选择）。</u><br>
本研究中，我们比较和对比了在四个不同位置使用膜过滤器获得的空中微生物的分析。<br>
<u>在本文中，我们比较和对比了通过使用膜过滤技术在四个不同位置进行空气微生物学分析而获得的数据。我们特别关注低流速过滤时间对可培养细菌和真菌回收的影响。此外，我们对比了在四个位置中的两个位置获得的空气微生物膜过滤和液体撞击数据。</u></p>
<h3 id="方法">方法</h3>
<h4 id="研究地点">研究地点</h4>
<table>
<thead>
<tr>
<th style="text-align:left">sites</th>
<th style="text-align:left">samples</th>
<th style="text-align:left">height (m)</th>
<th style="text-align:left">sampling time</th>
<th style="text-align:left">flow rate (L/min)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Tropical mid-Atlantic Ridge</td>
<td style="text-align:left">32 filters</td>
<td style="text-align:left">10.0</td>
<td style="text-align:left">6:30~19:00, &lt;1.3 h / 2.9-12.1 h</td>
<td style="text-align:left">1.9~17.4</td>
</tr>
<tr>
<td style="text-align:left">Mount Bachelor Observatory, Bend, Oregon</td>
<td style="text-align:left">36 filters, 6 liquid</td>
<td style="text-align:left">~3000</td>
<td style="text-align:left">filter:8:20 / 10:05~09:55; liquid:15:30</td>
<td style="text-align:left">filter: 17.4; liquid:230</td>
</tr>
<tr>
<td style="text-align:left">US Geological Survey, Tallahassee, Florida</td>
<td style="text-align:left">28 filters, 7 liquid</td>
<td style="text-align:left">1</td>
<td style="text-align:left">07:30~17:00, filter: 20 min, 60 min, 480 min; liquid: 20 min</td>
<td style="text-align:left">filter:8.7, 17.4; liquid:300</td>
</tr>
<tr>
<td style="text-align:left">Carlsbad Caverns National Park, New Mexico, site A,E,H,LRA,left hand tunnel</td>
<td style="text-align:left">5 filters, 2 liquid</td>
<td style="text-align:left">1,33,1,1,33</td>
<td style="text-align:left">9:15~17:05, filter: 40 min; liquid: 30 min</td>
<td style="text-align:left">filter:8.7;liquid:250</td>
</tr>
</tbody>
</table>
<h4 id="膜过滤法">膜过滤法</h4>
<ul>
<li>portable membrane-filtration apparatus</li>
<li>47 mm diameter, 0.2 μm pore-size cellulose-acetate filter membranes</li>
<li>flow rate at ~ 8.7 L/min when simultaneously collecting two samples; ~ 17.4 L/min when collecting a single sample</li>
<li>R2A medium, 23 °C, ≥96 h</li>
</ul>
<h4 id="液体-撞击法">液体-撞击法</h4>
<ul>
<li>OMNI 3000 + 10-mL sterile 1x PBS</li>
<li>flow rate: 250~311.5 L/min</li>
<li>R2A medium, 23 °C, ≥96 h</li>
</ul>
<h4 id="统计分析">统计分析</h4>
<ul>
<li>Data were tested for normality using a One-Sample Kolmogorov–Smirnov Test</li>
<li>The Mann–Whitney U-test was utilized for CFU versus CFU data analyses as the Levene’s test for equality of variances P-value were less than 0.05 or the data were not normally distributed</li>
<li>Spearman’s rho or Pearson correlations were used for rank analyses (CFU versus dust or particle concentrations).</li>
</ul>
<h3 id="结果">结果</h3>
<h4 id="tropical-mid-Atlantic-ridge">tropical mid-Atlantic ridge</h4>
<p>滤膜数据</p>
<ul>
<li>&lt; 80 min: 4/16, &gt; 20.0 μg/m<sup>3</sup></li>
<li>174-726 min: 13/16, &gt; 10 μg/m<sup>3</sup></li>
<li>总CFU回收在不同样本量（不同采集时间）中差异不显著</li>
<li>总CFU回收和灰尘浓度显著相关，低样本量时相关性较高样本量时强<br>
<img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-6-Griffin-2011/T1.jpg" alt="T1"></li>
</ul>
<h4 id="Mount-Bachelor-Observatory">Mount Bachelor Observatory</h4>
<p>滤膜数据</p>
<ul>
<li>60-300 min: bacteria cfu: 0.0-3.1 (avg. 0.8); fungal cfu: 0.0-6.1 (avg. 1.3); total cfu: 0.2-6.8 (avg. 2.1).</li>
<li>1020-1440 min: bacteria cfu: 0.1-0.7 (avg. 0.3); fungal cfu: 0.1-2.1 (avg. 1.1); total cfu: 0.2-2.8 (avg. 1.4).</li>
<li>CFU回收在不同样本量（不同采集时间）中差异不显著</li>
<li>低样本量时，真菌和总CFU回收与灰尘浓度显著相关</li>
</ul>
<p>液体数据</p>
<ul>
<li>每个日期中的数据为两个样本的均值<br>
|日期|细菌CFU|真菌CFU|总CFU|<br>
|:–|:–|:–|:–|<br>
|4/20/09|42.3|55.6|97.9|<br>
|4/21/09|7.2|7.2|14.4|<br>
|4/22/09|14.5|25.9|60.4|</li>
</ul>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-6-Griffin-2011/T2.jpg" alt="T2"></p>
<h4 id="Tallahassee-Florida">Tallahassee, Florida</h4>
<p>滤膜数据（注意60min的数据）</p>
<ul>
<li>大致呈现采样时间加长，cfu数目降低的趋势；且每组中，细菌的cfu均低于真菌的cfu</li>
<li>细菌cfu：两个短时间的组之间差异不显著，但均与长时间组差异显著；真菌cfu和总cfu：各组之间差异均显著。</li>
</ul>
<p>液体数据</p>
<ul>
<li>液体cfu数目普遍高于滤膜cfu；</li>
<li>液体真菌和总cfu显著高于20min的滤膜cfu，但是细菌cfu不显著；液体真菌和总cfu显著高于40min的滤膜cfu；液体细菌cfu显著高于420-480滤膜cfu，但是60min滤膜cfu不显著。</li>
</ul>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-6-Griffin-2011/T3.jpg" alt="T3"></p>
<h4 id="the-primary-visitor-cave-system-of-Carlsbad-Caverns-National-Park">the primary visitor cave system of Carlsbad Caverns National Park</h4>
<p>滤膜数据</p>
<ul>
<li>细菌cfu：lunch room sample &gt; site A、H &gt; site E &gt; left hand tunnel</li>
<li>真菌cfu：只在cave mouth、site E和lunch room观察到</li>
<li>总cfu：数目最高的是Ah和lunch room</li>
</ul>
<p>液体数据（仅在E和lunch room A进行了收集）</p>
<ul>
<li>E：细菌、真菌和总cfu的数目分别是滤膜数据的4.4/8.8和7.4倍</li>
<li>lunch room A：所有cfu的数目均为滤膜数据的8.7倍</li>
</ul>
<p><img src="https://github.com/ItsYunmeng/MyPostImages/raw/master/literatures-6-Griffin-2011/T4.jpg" alt="T4"></p>
<h3 id="讨论">讨论</h3>
<ul>
<li>pigmentation affords some degree of protection during atmospheric transport</li>
<li>different environmental conditions might result in selective microbial communities。比如在UV强的高山上，可能压力抗性的细菌和真菌物种较多，进而可培养的数目也就较多。</li>
<li>fungal spores provide protection from desiccation and UV-related stress</li>
</ul>
]]></content>
      <categories>
        <category>Literature notes</category>
        <category>Air Sampler</category>
      </categories>
      <tags>
        <tag>Air Sampler</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记_[生信技能树]生信人应该这样学Linux</title>
    <url>/2020/12/14/notes-biotrainee-1-shengxinrenyinggaizheyangxuelinux/</url>
    <content><![CDATA[<p><strong>摘要</strong>：生信技能树-生信人应该这样学linux视频笔记和作业。</p>
<a id="more"></a>
<h1>学习资源介绍</h1>
<p>公众号回复“马哥”：</p>
<ul>
<li>马哥linux运维，看到P30。(推荐B站兄弟连)</li>
<li>生物信息学之linux，学完(即本文档）。</li>
<li><a href="http://www.bio-info-trainee.com/2900.html" target="_blank" rel="noopener">完成linux的20道习题</a>(见linux作业)</li>
<li>完成生物信息学数据格式的习题(blast/blat/fa-fq/sam-bam/vcf/bed/gtf-gff)，收集这些格式的说明书.(见数据格式)</li>
<li><a href="http://www.bio-info-trainee.com/3575.html" target="_blank" rel="noopener">fasta和fastq格式文件的shell小练习</a>(见fa-fq的linux练习题)</li>
<li><a href="http://www.bio-info-trainee.com/3578.html" target="_blank" rel="noopener">sam和bam格式文件的shell小练习</a>(见bam-sam的linux练习题)</li>
</ul>
<p>相关的工具书：</p>
<ul>
<li>Linux命令行与shell脚本编程大全</li>
</ul>
<h1>系统认知</h1>
<p>登录服务器：使用xshell和xftp</p>
<h1>去可视化的命令行</h1>
<ul>
<li>基础知识：cd -, cd …, cd -, history, !5,  /home/, /tmp/, &gt;,&amp;，jobs,nohup 1,2,0</li>
<li><a href="https://itsyunmeng.github.io/2020/06/02/4-1wenjianchulimingling/">文件目录操作</a>：ls, cd, pwd, mkdir, rm, mv, cp, touch, head, tail, less, more</li>
<li><a href="https://itsyunmeng.github.io/2020/06/02/4-2quanxianguanlimingling/">用户权限</a>：chown, chgrp, groups, ls</li>
<li><a href="https://itsyunmeng.github.io/2020/12/15/13-1-linuxxitongguanli/#more">系统管理</a>：df,du,top,free,ps,ifconfig,netstat,ssh,scp,</li>
<li><a href="https://itsyunmeng.github.io/2020/12/14/11-2-Shell-zifujiequmingling/#more">文本操作</a>：awk,grep,sed,paste,cat,diff,wc,vim</li>
</ul>
<h1>文本处理</h1>
<p>命令： wget, wc, grep, |, cut, awk, sort</p>
<ul>
<li>wc: 查看行数、单词数和字节数。</li>
<li>grep: <code>grep H3K4me1 test.bed -n</code></li>
<li><code>cat -n test.bed | grep H3K4me1</code></li>
<li>按列： <code>cut -f 1-3 test.bed</code></li>
<li>awk: <code>cut -f 1-3 test.bed | awk '{print $1&quot;:&quot;$2&quot;,&quot;$3}'</code></li>
</ul>
<h1>软件安装</h1>
<p>命令： tr</p>
<ul>
<li>tr: <code>echo $PATH | tr &quot;:&quot; &quot;\n&quot;</code> 替换</li>
</ul>
<p>软件安装： <a href="https://itsyunmeng.github.io/2020/06/05/Bioconda/">bioconda</a><br>
解压:</p>
<ul>
<li><code>unzip</code></li>
<li><code>tar -zxvf/-jxvf</code> <code>*.gz文件</code> 和<code>*.bz2</code></li>
</ul>
<h1>环境变量</h1>
<p><code>vim ~/.bashrc</code><br>
将路径添加到文件中路径的最后面<br>
<code>source ~/.bashrc</code></p>
<h1>Shell脚本编程</h1>
<h1>脚本要学好</h1>
<p>看本blog中的shell相关</p>
<h1>10个题目的答案讲解</h1>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ls</span> . | wc <span class="comment">#列出当前目录下的文件个数</span></span><br><span class="line">cat <span class="string">/etc/issue</span> <span class="comment">#查看系统版本</span></span><br><span class="line"><span class="keyword">echo</span> $PATH|tr <span class="string">":"</span> <span class="string">"\n"</span>|wc <span class="comment">#PATH下有多少个路径</span></span><br></pre></td></tr></table></figure>
<h1>数据格式</h1>
<ul>
<li>fasta and fastq<br>
原始数据文件<br>
<a href="https://en.wikipedia.org/wiki/FASTA" target="_blank" rel="noopener">fasta</a>文件格式<br>
<a href="https://en.wikipedia.org/wiki/FASTQ_format" target="_blank" rel="noopener">fastq</a>文件格式</li>
<li>sam and bam<br>
比对的文件<br>
<a href="https://en.wikipedia.org/wiki/SAM_(file_format)" target="_blank" rel="noopener">SAM</a>文件格式：10个必选字段1个可选字段<br>
通过samtools将sam文件转化成bam文件（sam的压缩文件，占内存小），用<code>samtools view 文件名</code>查看bam文件。</li>
<li>gff and gtf<br>
注释的文件<br>
<a href="https://en.wikipedia.org/wiki/General_feature_format" target="_blank" rel="noopener">gff</a>主要用来注释基因组；<a href="https://en.wikipedia.org/wiki/Gene_transfer_format" target="_blank" rel="noopener">gtf</a>主要用来注释基因。</li>
<li>vcf<br>
对处理后的bam文件进行下游的SNP分析，生成<a href="https://en.wikipedia.org/wiki/Variant_Call_Format" target="_blank" rel="noopener">vcf</a>文件。</li>
</ul>
<blockquote>
<p><a href="https://mp.weixin.qq.com/s?src=11&amp;timestamp=1608062443&amp;ver=2768&amp;signature=-nscqhEqRPBalGnvVClPxHze4*TQOauIUWfLckFnxlfEhJv6lqL6X9YdKbDLEAtpGDZ-KiqGS8sSDn7FuggiODvI-xc487zcdoOAXjJHogzUViER*3EQMLue26966*RJ&amp;new=1" target="_blank" rel="noopener">一个视频教你搞明白Fasta、Fastq、SAM、BAM……</a></p>
</blockquote>
<h1>fa-fq的linux练习题</h1>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">mkdir</span> biosoft</span><br><span class="line">cd biosoft/</span><br><span class="line">wget https:<span class="regexp">//sourceforge</span>.net/projects/bowtie-bio/files/bowtie2/<span class="number">2.3</span>.<span class="number">4.3</span>/bowtie2-<span class="number">2.3</span>.<span class="number">4.3</span>-linux-x86_64.zip</span><br><span class="line">unzip bowtie2-<span class="number">2.3</span>.<span class="number">4.3</span>-linux-x86_64.zip</span><br><span class="line">cd bowtie2-<span class="number">2.3</span>.<span class="number">4.3</span>-linux-x86_64/example/reads/</span><br><span class="line"></span><br><span class="line">wc reads_1.fq <span class="comment">#10000条序列信息</span></span><br><span class="line">cat reads_1.f<span class="string">q | paste - - - - |</span> awk <span class="string">'&#123;print $1&#125;'</span></span><br><span class="line">cat reads_1.f<span class="string">q | paste - - - - |</span> awk <span class="string">'&#123;print $2&#125;'</span></span><br><span class="line">cat reads_1.f<span class="string">q | paste - - - - |</span> awk <span class="string">'&#123;print $3&#125;'</span></span><br><span class="line">cat reads_1.f<span class="string">q | paste - - - - |</span> awk <span class="string">'&#123;print $4&#125;'</span> <span class="comment">#或直接cut -f4</span></span><br><span class="line"></span><br><span class="line">cat reads_1.f<span class="string">q | paste - - - - |</span> awk <span class="string">'&#123;print $2&#125;'</span>|<span class="keyword">grep</span> N | wc  <span class="comment">#含有N的reads数是6429</span></span><br><span class="line">cat reads_1.f<span class="string">q | paste - - - - |</span> awk <span class="string">'&#123;print $2&#125;'</span>|<span class="keyword">grep</span> -o [ATGCN] | wc <span class="comment">#序列的碱基总数为1088399</span></span><br><span class="line">cat reads_1.f<span class="string">q | paste - - - - |</span> awk <span class="string">'&#123;print $2&#125;'</span>|<span class="keyword">grep</span> -o N | wc <span class="comment">#所有reads中N碱基的总数是26001</span></span><br><span class="line">cat reads_1.f<span class="string">q | paste - - - - |</span> awk <span class="string">'&#123;print $4&#125;'</span>|<span class="keyword">grep</span> -o <span class="number">5</span>|wc <span class="comment">#碱基质量值恰好为Q20的个数为21369</span></span><br><span class="line">cat reads_1.f<span class="string">q | paste - - - - |</span> awk <span class="string">'&#123;print $4&#125;'</span>|<span class="keyword">grep</span> -o ?|wc <span class="comment">#碱基质量值恰好为Q30的个数为21574</span></span><br><span class="line"><span class="comment">#对照质量值表，phred+33找到对应的字符。</span></span><br><span class="line"></span><br><span class="line">cat reads_1.f<span class="string">q | paste - - - - |</span> awk <span class="string">'&#123;print $2&#125;'</span>|cut -c <span class="number">1</span>|<span class="keyword">sort</span>|uniq -c <span class="comment">#统计所有序列的第一位碱基的ATCGN分布情况</span></span><br><span class="line">awk <span class="string">'&#123;if(NR%4 == 1)&#123;print "&gt;" substr($0, 2)&#125;&#125;&#123;if(NR%4 == 2)&#123;print&#125;&#125;'</span> reads_1.fq &gt; reads_1.fa <span class="comment">#将fq转化成fa</span></span><br><span class="line">wc reads_1.fa <span class="comment">#10000条序列</span></span><br><span class="line">cat reads_1.fa | paste - - | awk <span class="string">'&#123;print $2&#125;'</span>|<span class="keyword">grep</span> -o [GC]|wc <span class="comment">#总的碱基序列的G、C数量是529983</span></span><br><span class="line">cat reads_1.fa | <span class="keyword">tr</span> -d N|<span class="keyword">grep</span> -o N|wc <span class="comment">#删除每条序列的N碱基</span></span><br><span class="line"></span><br><span class="line">cat reads_1.fa | paste - -|<span class="keyword">grep</span> -v N |<span class="keyword">tr</span> <span class="string">"\t"</span> <span class="string">"\n"</span> <span class="comment">#删除含有N碱基的序列</span></span><br><span class="line">cat reads_1.fa | paste - -|awk <span class="string">'&#123;if(length($2)&gt;65)print&#125;'</span>|<span class="keyword">tr</span> <span class="string">"\t"</span> <span class="string">"\n"</span> <span class="comment">#删除短于65bp的序列</span></span><br><span class="line">cat reads_1.fa | awk <span class="string">'&#123;sub(/^.&#123;5&#125;/,"")&#125;1'</span> |awk <span class="string">'&#123;sub(/.&#123;5&#125;$/,"")&#125;1'</span> <span class="comment">#删除每条序列的前后五个碱基</span></span><br><span class="line">cat reads_1.fa | paste - -|awk <span class="string">'&#123;if(length($2)&lt;=125)print&#125;'</span>|<span class="keyword">tr</span> <span class="string">"\t"</span> <span class="string">"\n"</span> <span class="comment">#删除长于125bp的序列</span></span><br><span class="line">cat reads_1.f<span class="string">q | paste - - - -|</span> awk <span class="string">'&#123;print $4&#125;'</span>|cut -c <span class="number">1</span>|<span class="keyword">sort</span>|uniq -c <span class="comment">#可根据碱基质量字符的数目预估一下，如果多个字符的数目分布相对均衡，可直接fastqc去看per case sequence quality  #查看reads_1.fq中每条序列的第一位碱基的质量值的平均值</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="c.biancheng.net/c/ascii/">ASCII码一览表，ASCII码对照表</a></p>
</blockquote>
<h1>sam-bam的linux练习题</h1>
<p>bam文件要先进行排序，才能进行index，即<code>samtools index 排序后的bam文件</code>。<br>
bam文件可视化用IGV。</p>
<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">#navigate to the same directory <span class="built_in">as</span> the previous question</span><br><span class="line">bowtie2 -x ../index/lambda_virus <span class="number">-1</span> reads_1.fq <span class="number">-2</span> reads_2.fq &gt;tmp.sam #得到比对文件tmp.sam</span><br><span class="line"></span><br><span class="line">less -S tmp.sam #查看sam文件</span><br><span class="line">cat tmp.sam | <span class="type">grep</span> -v <span class="string">"^@"</span>|<span class="type">wc</span> -l #删掉@开头的，然后除以<span class="number">2</span>，共有<span class="number">10000</span>条pair-<span class="keyword">end</span> reads参与了比对参考基因组</span><br><span class="line">cat tmp.sam | <span class="type">grep</span> -v <span class="string">"^@"</span>|<span class="type">cut</span> -f2|<span class="type">sort</span>|<span class="type">uniq</span> -c|<span class="type">wc</span> -l #多少种比对的类型(即第二列数值有多少种)及其分布 #<span class="number">20</span>种，结果中第二列是比对的类型，第一列是其数目。</span><br><span class="line">cat tmp.sam | <span class="type">grep</span> -v <span class="string">"^@"</span>|<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">6</span>==<span class="string">"*"</span>)print&#125;'|<span class="type">less</span> -S #第六列为*代表比对失败，序列太多N</span><br><span class="line">cat tmp.sam | <span class="type">grep</span> -v <span class="string">"^@"</span>|<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">6</span>==<span class="string">"*"</span>)print&#125;'|<span class="type">cut</span> -f1|<span class="type">sort</span>| <span class="type">uniq</span> -c|<span class="type">wc</span> #第一例为序列ID</span><br><span class="line">cat tmp.sam | <span class="type">grep</span> -v <span class="string">"^@"</span>|<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">6</span>==<span class="string">"*"</span>)print&#125;'|<span class="type">cut</span> -f1|<span class="type">sort</span>| <span class="type">uniq</span> -c|<span class="type">grep</span> -w <span class="number">1</span>|<span class="type">wc</span> #单端失败</span><br><span class="line">cat tmp.sam | <span class="type">grep</span> -v <span class="string">"^@"</span>|<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">6</span>==<span class="string">"*"</span>)print&#125;'|<span class="type">cut</span> -f1|<span class="type">sort</span>| <span class="type">uniq</span> -c|<span class="type">grep</span> -w <span class="number">2</span>|<span class="type">wc</span> #双端失败</span><br><span class="line">cat tmp.sam | <span class="type">grep</span> -v <span class="string">"^@"</span>|<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">5</span>&gt;<span class="number">30</span>)print&#125;'|<span class="type">wc</span> #质量值看第五列，大于<span class="number">30</span>的有<span class="number">18632</span>条单端reads</span><br><span class="line"></span><br><span class="line">cat tmp.sam | <span class="type">grep</span> -v <span class="string">"^@"</span>|<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">6</span>!=<span class="string">"*"</span>)print&#125;'|<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">6</span>~<span class="string">"[IDNXSHP]"</span>)print&#125;'|<span class="type">less</span> -S #比对成功但不是完全匹配，即第六列不是*，但是除了M也还有其他的字符IDNXSHP表示insert、delete、skipped、mismatch、soft clipping、hard clipping、padding。</span><br><span class="line">cat tmp.sam | <span class="type">grep</span> -v <span class="string">"^@"</span>|<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">9</span>&gt;<span class="number">1250</span> |<span class="type">| $9</span>&lt;<span class="number">-1250</span>)print&#125;'|<span class="type">less</span> -S #inset size长度大于<span class="number">1250</span>bp的 pair-<span class="keyword">end</span> reads</span><br><span class="line">cat tmp.sam | <span class="type">grep</span> -v <span class="string">"^@"</span>|<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">6</span>!=<span class="string">"*"</span>)print&#125;'|<span class="type">cut</span> -f3|<span class="type">sort</span>|<span class="type">uniq</span> -c #各染色体的成功比对reads数</span><br><span class="line">cat tmp.sam |<span class="type">grep</span> -v <span class="string">"^@"</span>|<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">10</span>~<span class="string">"N"</span>)print&#125;'|<span class="type">wc</span> #序列里有N的比对情况，对照cat tmp.sam |<span class="type">grep</span> -v <span class="string">"^@"</span>|<span class="type">cut</span> -f10 |<span class="type">grep</span> N|<span class="type">wc</span>。可看到N不影响<span class="keyword">match</span>，仍然可完全匹配。</span><br><span class="line">cat tmp.sam |<span class="type">grep</span> -v <span class="string">"^@"</span>|<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">10</span>~<span class="string">"N"</span>)print&#125;'|<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">6</span>!=<span class="string">"*"</span>)print&#125;'|<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">6</span>!~<span class="string">"[IDNXSHP]"</span>)print&#125;'|<span class="type">less</span> -S #序列里有N，且完全匹配</span><br><span class="line"></span><br><span class="line">cat tmp.sam | <span class="type">grep</span> <span class="string">"^@"</span>|<span class="type">wc</span>  #头文件行数<span class="number">3</span></span><br><span class="line">???  #sam文件里每一行的tags个数一样吗 #sam文件里每一行的tags个数分别是多少个</span><br><span class="line">cat tmp.sam | <span class="type">grep</span> '^@' | <span class="type">grep</span> 'LN' #sam文件里记录的参考基因组染色体长度分别是？-&gt; 看头文件中LN的值</span><br><span class="line">cat tmp.sam | <span class="type">grep</span> -v '^@' |<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">6</span>~<span class="string">"I"</span>)print&#125;'|<span class="type">less</span> -S #找到比对情况有insertion情况的</span><br><span class="line">cat tmp.sam | <span class="type">grep</span> -v '^@' |<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">6</span>~<span class="string">"D"</span>)print&#125;'|<span class="type">less</span> -S #找到比对情况有deletion情况的</span><br><span class="line"></span><br><span class="line">cat tmp.sam | <span class="type">grep</span> -v '^@' |<span class="type">awk</span> '&#123;<span class="keyword">if</span>($<span class="number">4</span>&gt;<span class="number">5013</span> &amp;&amp; $<span class="number">4</span>&lt;<span class="number">50130</span>)print&#125;'|<span class="type">less</span> -S #看第四列 #取出位于参考基因组某区域的比对记录，比如 <span class="number">5013</span>到<span class="number">50130</span> 区域</span><br><span class="line">sort -k <span class="number">3</span>,<span class="number">3</span> -k <span class="number">4</span>,<span class="number">4</span>n tmp.sam|<span class="type">less</span> -S #-k [n,m]，按照指定的字段范围排序，从第n个字段开始，到第m个字段结束。 #把sam文件按照染色体$<span class="number">3</span>以及起始坐标$<span class="number">4</span>排序</span><br><span class="line">grep <span class="number">102</span>M3D11M tmp.sam|<span class="type">cut</span> -f10|<span class="type">wc</span> #找到 <span class="number">102</span>M3D11M 的比对情况，计算其reads片段长度。</span><br><span class="line">#安装samtools软件后使用samtools软件的各个功能尝试把上述题目重新做一遍。</span><br></pre></td></tr></table></figure>
<h1>linux作业</h1>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -<span class="keyword">p</span> test/<span class="number">1</span>/<span class="number">2</span>/<span class="number">3</span>/<span class="number">4</span>/<span class="number">5</span>/<span class="number">6</span>/<span class="number">7</span>/<span class="number">8</span>/<span class="number">9</span></span><br><span class="line">touch test/<span class="number">1</span>/<span class="number">2</span>/<span class="number">3</span>/<span class="number">4</span>/<span class="number">5</span>/<span class="number">6</span>/<span class="number">7</span>/<span class="number">8</span>/<span class="number">9</span>/<span class="keyword">me</span>.txt</span><br><span class="line"><span class="keyword">vim</span> test/<span class="number">1</span>/<span class="number">2</span>/<span class="number">3</span>/<span class="number">4</span>/<span class="number">5</span>/<span class="number">6</span>/<span class="number">7</span>/<span class="number">8</span>/<span class="number">9</span>/<span class="keyword">me</span>.txt</span><br><span class="line">rm -r test/</span><br><span class="line"><span class="built_in">mkdir</span> -<span class="keyword">p</span> test/folder&#123;<span class="number">1</span>..<span class="number">5</span>&#125;/folder&#123;<span class="number">1</span>..<span class="number">5</span>&#125;</span><br><span class="line"><span class="keyword">ls</span> test/*</span><br><span class="line"></span><br><span class="line"><span class="keyword">vim</span> <span class="keyword">me</span>.txt</span><br><span class="line"><span class="keyword">echo</span> test/folder&#123;<span class="number">1</span>..<span class="number">5</span>&#125;/folder&#123;<span class="number">1</span>..<span class="number">5</span>&#125;|xargs -n <span class="number">1</span> <span class="keyword">cp</span> <span class="keyword">me</span>.txt -v</span><br><span class="line">rm -rf test/</span><br><span class="line">wget http://www.biotrainee.<span class="keyword">com</span>/jmzeng/igv/test.bed</span><br><span class="line">wc test.bed</span><br><span class="line"><span class="keyword">grep</span> H3K4me3 test.bed -n</span><br><span class="line">wget http://www.biotrainee.<span class="keyword">com</span>/jmzeng/rmDuplicate.zip</span><br><span class="line">unzip rmDuplicate.zip</span><br><span class="line">biosoft/tree-<span class="number">1.8</span>.<span class="number">0</span>/tree rmDuplicate</span><br><span class="line"><span class="keyword">cd</span> rmDuplicate/samtools/single/</span><br><span class="line">less -S tmp.sam</span><br><span class="line"></span><br><span class="line">#sam和bam的定义#</span><br><span class="line">conda install samtools</span><br><span class="line">samtools <span class="keyword">view</span> tmp.rmdup.bam |less -S</span><br><span class="line">samtools <span class="keyword">view</span> -bS <span class="keyword">abc</span>.sam -<span class="keyword">o</span> <span class="keyword">abc</span>.bam</span><br><span class="line">samtools <span class="keyword">view</span> tmp.rmdup.bam |cut -f2|<span class="keyword">sort</span>|uniq -<span class="keyword">c</span></span><br><span class="line"><span class="keyword">cd</span> ../paired/</span><br><span class="line">samtools <span class="keyword">view</span> tmp.rmdup.bam |cut -f2|<span class="keyword">sort</span>|uniq -<span class="keyword">c</span></span><br><span class="line"></span><br><span class="line">wget http://www.biotrainee.<span class="keyword">com</span>/jmzeng/sickle/sickle-results.zip</span><br><span class="line">unzip sickle-results.zip</span><br><span class="line">tree</span><br><span class="line"><span class="keyword">cd</span> sickle-results/</span><br><span class="line">unzip single_tmp_fastqc.zip</span><br><span class="line"><span class="keyword">cd</span> single_tmp_fastqc/</span><br><span class="line"><span class="keyword">cat</span> fastqc_data.txt | <span class="keyword">grep</span> <span class="string">"^&gt;&gt;"</span>|wc</span><br><span class="line"></span><br><span class="line">wget http://www.biotrainee.<span class="keyword">com</span>/jmzeng/tmp/hg38.tss</span><br><span class="line">less -S hg38.tss | cut -f1|<span class="keyword">grep</span> NM_000546 -n</span><br><span class="line">less -S hg38.tss|cut -<span class="keyword">f</span> <span class="number">2</span>|<span class="keyword">grep</span> -v <span class="string">'_'</span>|<span class="keyword">sort</span>|uniq -<span class="keyword">c</span></span><br><span class="line"><span class="keyword">grep</span> <span class="string">"^NR"</span> hg38.tss |wc   #NM为转录本并可以翻译成蛋白</span><br><span class="line"><span class="keyword">grep</span> <span class="string">"^NM"</span> hg38.tss |wc   #NR为转录本但不可以翻译成蛋白</span><br></pre></td></tr></table></figure>
<h1>其他可能遇到的问题</h1>
<ul>
<li><a href="https://blog.csdn.net/dreameras/article/details/78959048" target="_blank" rel="noopener">Linux执行ls命令后不同文件类型显示的颜色一样</a></li>
<li><a href="https://www.cnblogs.com/h--d/p/6507421.html" target="_blank" rel="noopener">【Linux】Tree命令安装和使用</a></li>
</ul>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>LaTeX基础入门</title>
    <url>/2020/08/05/tutorial-LaTeX/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> Tex Live installation, and LaTeX basics (Doocument structure: cross referencing, footnote and sidenote, list, align, code, table, images, box; Typography style: foot and size, paragraph, header and footer; Math formula; and others (hyperlinks, color, references)).</p>
<a id="more"></a>
<h1>Installation</h1>
<h2 id="install">install</h2>
<p>open <a href="https://tug.org/texlive/" target="_blank" rel="noopener">texlive</a> -&gt; click <code>on DVD</code> -&gt; click <code>downloading the TeX Live ISO image and burning your own DVD</code> -&gt; click <code>download from a nearby CTAN mirror</code> -&gt; click <code>texlive2020.iso</code> to download the file -&gt; open the file -&gt; double click <code>install-tl-windows</code> -&gt; chose <code>Run as administrator</code> -&gt; click <code>install</code> -&gt; finished when you see <code>Welcome to TeX Live!</code></p>
<h2 id="test">test</h2>
<p>open <code>cmd</code> -&gt; input <code>tex -v</code>, <code>latex -v</code>, <code>xelatex -v</code></p>
<h1>Usage of TEXworks editor</h1>
<h2 id="tex-file"><code>.tex</code> file</h2>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">documentclass</span><span class="string">[a4paper,11pt,twoside,openany]</span><span class="string">&#123;book&#125;</span></span><span class="comment">%article, report, book, proc, slides, minimal</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">[a4paper,includeheadfoot,top=1.5cm,bottom=1.5cm,left=1.25cm,right=2cm]</span><span class="string">&#123;geometry&#125;</span></span> <span class="comment">%set margins</span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;graphicx&#125;</span></span> <span class="comment">%insert picture</span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">[colorlinks,linkcolor=black]</span><span class="string">&#123;hyperref&#125;</span></span> <span class="comment">%set dir. link</span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;framed&#125;</span></span> <span class="comment">%add frame</span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;ulem&#125;</span></span> <span class="comment">%add underline</span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;multirow&#125;</span></span> <span class="comment">%table</span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;color&#125;</span></span> <span class="comment">%color</span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;soul&#125;</span></span> <span class="comment">%highlight</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%title page</span></span><br><span class="line"><span class="tag">\<span class="name">title</span><span class="string">&#123;TEST TITLE&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">author</span><span class="string">&#123;Mary\thanks&#123;E-mail: ***@***.com&#125;</span></span></span><br><span class="line">	and Ted<span class="tag">\<span class="name">thanks</span><span class="string">&#123;Corresponding author: ***@***.com&#125;</span></span></span><br><span class="line">	and Ming</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">\<span class="name">date</span><span class="string">&#123;\today&#125;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;document&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">maketitle</span></span> <span class="comment">%title page</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">begin</span><span class="string">&#123;flushright&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">section*</span><span class="string">&#123;Acknowledgement&#125;</span></span>  <span class="comment">%add acknowledgement</span></span><br><span class="line">	<span class="tag">\<span class="name">end</span><span class="string">&#123;flushright&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">addcontentsline</span><span class="string">&#123;toc&#125;</span><span class="string">&#123;section&#125;</span><span class="string">&#123;Acknowledgement&#125;</span></span></span><br><span class="line"></span><br><span class="line">	<span class="comment">%abstract and keywords for `article'</span></span><br><span class="line">	<span class="comment">%\begin&#123;abstract&#125;</span></span><br><span class="line">	<span class="comment">%\noindent\textbf&#123;Abstract:&#125;	sdifbrigk dsfbsd sdsb</span></span><br><span class="line">	<span class="comment">%\newline</span></span><br><span class="line">	<span class="comment">%\textbf&#123;keywords:&#125; \LaTeX; Article;</span></span><br><span class="line">	<span class="comment">%\end&#123;abstract&#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">tableofcontents</span></span> <span class="comment">%add contents</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">%book struture</span></span><br><span class="line">	<span class="tag">\<span class="name">chapter</span><span class="string">&#123;Document structure&#125;</span></span></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;cross referencing&#125;</span></span></span><br><span class="line">	A reference to this section <span class="tag">\<span class="name">label</span><span class="string">&#123;sec:this&#125;</span></span> looks like: ``see section ~<span class="tag">\<span class="name">ref</span><span class="string">&#123;sec:this&#125;</span></span> on page ~<span class="tag">\<span class="name">pageref</span><span class="string">&#123;sec:this&#125;</span></span>''</span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;footnote and sidenote&#125;</span></span></span><br><span class="line">	This is a sentence with footnote. <span class="tag">\<span class="name">footnote</span><span class="string">&#123;From saa et al. (2014)&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	This is a sentence with sidenote. <span class="tag">\<span class="name">marginpar</span><span class="string">&#123;sidenote&#125;</span></span></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;list&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">begin</span><span class="string">&#123;enumerate&#125;</span></span> <span class="comment">%try \begin&#123;itemize&#125;</span></span><br><span class="line">	<span class="tag">\<span class="name">item</span></span> An item  </span><br><span class="line">	<span class="tag">\<span class="name">begin</span><span class="string">&#123;enumerate&#125;</span></span></span><br><span class="line">  		<span class="tag">\<span class="name">item</span></span> A nested item. <span class="tag">\<span class="name">label</span><span class="string">&#123;itref&#125;</span></span></span><br><span class="line">  		<span class="tag">\<span class="name">item</span><span class="string">[*]</span></span> A starred item.</span><br><span class="line">	<span class="tag">\<span class="name">end</span><span class="string">&#123;enumerate&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">item</span></span> Reference (<span class="tag">\<span class="name">ref</span><span class="string">&#123;itref&#125;</span></span>)</span><br><span class="line">	<span class="tag">\<span class="name">end</span><span class="string">&#123;enumerate&#125;</span></span></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;Align&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">begin</span><span class="string">&#123;flushleft&#125;</span></span></span><br><span class="line">	left-aligned</span><br><span class="line">	<span class="tag">\<span class="name">end</span><span class="string">&#123;flushleft&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">begin</span><span class="string">&#123;center&#125;</span></span></span><br><span class="line">	centered</span><br><span class="line">	<span class="tag">\<span class="name">end</span><span class="string">&#123;center&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">begin</span><span class="string">&#123;flushright&#125;</span></span></span><br><span class="line">	right-aligned</span><br><span class="line">	<span class="tag">\<span class="name">end</span><span class="string">&#123;flushright&#125;</span></span></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;scripts&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">verb</span></span>|c=a+b| <span class="comment">%short code</span></span><br><span class="line">	<span class="tag">\<span class="name">begin</span><span class="string">&#123;verbatim&#125;</span></span></span><br><span class="line">	a=1</span><br><span class="line">	b=2</span><br><span class="line">	c=a+b</span><br><span class="line">	<span class="tag">\<span class="name">end</span><span class="string">&#123;verbatim&#125;</span></span> <span class="comment">%long code</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;table&#125;</span></span></span><br><span class="line">	online generator: <span class="tag">\<span class="name">url</span><span class="string">&#123;https://www.tablesgenerator.com/&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	<span class="tag">\<span class="name">begin</span><span class="string">&#123;tabular&#125;</span><span class="string">&#123;lllll&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">hline</span></span></span><br><span class="line">	<span class="tag">\<span class="name">multirow</span><span class="string">&#123;2&#125;</span><span class="string">&#123;*&#125;</span><span class="string">&#123;Treatments&#125;</span></span> &amp; <span class="tag">\<span class="name">multicolumn</span><span class="string">&#123;2&#125;</span><span class="string">&#123;l&#125;</span><span class="string">&#123;Temperature&#125;</span></span> &amp; <span class="tag">\<span class="name">multirow</span><span class="string">&#123;2&#125;</span><span class="string">&#123;*&#125;</span><span class="string">&#123;Humidity&#125;</span></span> &amp; <span class="tag">\<span class="name">multirow</span><span class="string">&#123;2&#125;</span><span class="string">&#123;*&#125;</span><span class="string">&#123;Wind Speed&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line">  &amp; Max. &amp; Min. &amp; &amp;  <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	<span class="tag">\<span class="name">hline</span></span></span><br><span class="line">	A &amp; 35 &amp; 12 &amp; 80 &amp; 10 <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	B &amp; 34 &amp; 25 &amp; 60 &amp; 8 <span class="tag">\<span class="name">\</span></span> <span class="tag">\<span class="name">hline</span></span>                     </span><br><span class="line">	<span class="tag">\<span class="name">end</span><span class="string">&#123;tabular&#125;</span></span></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;picture&#125;</span></span></span><br><span class="line">	add picture <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	<span class="tag">\<span class="name">includegraphics</span><span class="string">[width=4cm,height=3cm]</span><span class="string">&#123;pictures/1.jpg&#125;</span></span></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;box&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">fbox</span><span class="string">&#123;sentence in the box&#125;</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">	<span class="tag">\<span class="name">framebox</span><span class="string">[15em]</span><span class="string">[r]</span><span class="string">&#123;sentence in the box&#125;</span></span> <span class="tag">\<span class="name">\</span></span> <span class="comment">%width and align</span></span><br><span class="line">	[1ex]</span><br><span class="line">	<span class="tag">\<span class="name">setlength</span><span class="string">&#123;\fboxrule&#125;</span><span class="string">&#123;2.5pt&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">setlength</span><span class="string">&#123;\fboxsep&#125;</span><span class="string">&#123;5em&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">framebox</span><span class="string">[10em]</span><span class="string">[c]</span><span class="string">&#123;Test box&#125;</span></span></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">chapter</span><span class="string">&#123;Typography style&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;font and size&#125;</span></span></span><br><span class="line">		<span class="tag">\<span class="name">subsection</span><span class="string">&#123;font&#125;</span></span></span><br><span class="line">  		<span class="tag">\<span class="name">textrm</span><span class="string">&#123;Roman font family&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line">		<span class="tag">\<span class="name">texttt</span><span class="string">&#123;Typewriter font family&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line">  		<span class="tag">\<span class="name">textsf</span><span class="string">&#123;Sans serif font family&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line">  		<span class="tag">\<span class="name">textmd</span><span class="string">&#123;Roman font family&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line"> 	   <span class="tag">\<span class="name">textbf</span><span class="string">&#123;Roman font family&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   <span class="tag">\<span class="name">textup</span><span class="string">&#123;Roman font family&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   <span class="tag">\<span class="name">textit</span><span class="string">&#123;Roman font family&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   <span class="tag">\<span class="name">textsl</span><span class="string">&#123;Roman font family&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   <span class="tag">\<span class="name">textsc</span><span class="string">&#123;Roman font family&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   <span class="tag">\<span class="name">uline</span><span class="string">&#123;xiahuaxian&#125;</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   <span class="tag">\<span class="name">uuline</span><span class="string">&#123;shuangxiahuaxian&#125;</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   <span class="tag">\<span class="name">uwave</span><span class="string">&#123;bolangxian&#125;</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   <span class="tag">\<span class="name">sout</span><span class="string">&#123;shanchuxian&#125;</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   <span class="tag">\<span class="name">xout</span><span class="string">&#123;xieshanchuxian&#125;</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   <span class="tag">\<span class="name">dashuline</span><span class="string">&#123;xuxiahuaxian&#125;</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   <span class="tag">\<span class="name">dotuline</span><span class="string">&#123;dianxiahuaxian&#125;</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   <span class="tag">\<span class="name">subsection</span><span class="string">&#123;size&#125;</span></span></span><br><span class="line">	   &#123;<span class="tag">\<span class="name">tiny</span></span> tiny&#125;<span class="tag">\<span class="name">\</span></span></span><br><span class="line"> 	   &#123;<span class="tag">\<span class="name">scriptsize</span></span> scriptsize&#125;<span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   &#123;<span class="tag">\<span class="name">footnotesize</span></span> footnotesize&#125;<span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   &#123;<span class="tag">\<span class="name">small</span></span> small&#125;<span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   &#123;<span class="tag">\<span class="name">normalsize</span></span> normalsize&#125;<span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   &#123;<span class="tag">\<span class="name">large</span></span> large&#125;<span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   &#123;<span class="tag">\<span class="name">Large</span></span> Large&#125;<span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   &#123;<span class="tag">\<span class="name">LARGE</span></span> LARGE&#125;<span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   &#123;<span class="tag">\<span class="name">huge</span></span> huge&#125;<span class="tag">\<span class="name">\</span></span></span><br><span class="line">	   &#123;<span class="tag">\<span class="name">Huge</span></span> Huge&#125;<span class="tag">\<span class="name">\</span></span></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;paragraph&#125;</span></span></span><br><span class="line">	<span class="comment">%indent</span></span><br><span class="line">	<span class="tag">\<span class="name">indent</span></span><span class="tag">\<span class="name">indent</span></span> first paragraph hifbreiobfreifbggidgisdfifhwiefhwoehrwoeprjwopejwor fdifhoshfsod  ihdewifheorfh ewirhi whoriewhf eweowqhr  end <span class="tag">\<span class="name">par</span></span></span><br><span class="line">	second paragraph <span class="tag">\<span class="name">par</span></span></span><br><span class="line">	third paragraph <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	fourth paragraph <span class="tag">\<span class="name">par</span></span></span><br><span class="line">	fifth paragraph <span class="tag">\<span class="name">par</span></span></span><br><span class="line">	<span class="tag">\<span class="name">noindent</span></span> sixth paragraph <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	seventh paragraph <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	<span class="comment">%horizentol spacing</span></span><br><span class="line">	Hi! <span class="tag">\<span class="name">hspace</span><span class="string">&#123;5cm&#125;</span></span> Hi Hiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiii iiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiiiiiiii again! <span class="tag">\<span class="name">par</span></span></span><br><span class="line">	<span class="comment">%vertical spacing (front should be \par)</span></span><br><span class="line">	<span class="tag">\<span class="name">vspace</span><span class="string">&#123;5cm&#125;</span></span></span><br><span class="line">	Hello! <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;header and footer&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">thispagestyle</span><span class="string">&#123;plain&#125;</span></span> <span class="comment">%plain, empty, headings, myheadings</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">chapter</span><span class="string">&#123;Add math&#125;</span></span></span><br><span class="line">	In physics, the mass-energy equivalence is stated</span><br><span class="line">by the equation <span class="formula">$E=mc^2$</span>, discovered in 1905 by Albert Einstein. <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	In physics, the mass-energy equivalence is stated</span><br><span class="line">by the equation <span class="formula">$$E=mc^2$$</span>, discovered in 1905 by Albert Einstein. <span class="tag">\<span class="name">\</span></span></span><br><span class="line">   online <span class="tag">\<span class="name">LaTeX</span></span> math edito: <span class="tag">\<span class="name">url</span><span class="string">&#123;https://latex.91maths.com/&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">chapter</span><span class="string">&#123;Others&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;hyperlinks&#125;</span></span></span><br><span class="line">	<span class="tag">\<span class="name">url</span><span class="string">&#123;https://www.overleaf.com/learn/latex/Main_Page&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	<span class="tag">\<span class="name">href</span><span class="string">&#123;https://www.overleaf.com/learn/latex/Main_Page&#125;</span><span class="string">&#123;overleaf&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;color&#125;</span></span></span><br><span class="line">	&#123;<span class="tag">\<span class="name">color</span><span class="string">&#123;red&#125;</span></span> red&#125; <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	&#123;<span class="tag">\<span class="name">color</span><span class="string">&#123;blue&#125;</span></span> blue&#125; <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	the color of the <span class="tag">\<span class="name">textcolor</span><span class="string">&#123;red&#125;</span><span class="string">&#123;word&#125;</span></span> is red.<span class="tag">\<span class="name">\</span></span></span><br><span class="line">	This <span class="tag">\<span class="name">hl</span><span class="string">&#123;word&#125;</span></span> will be highlight. <span class="tag">\<span class="name">\</span></span></span><br><span class="line"></span><br><span class="line">	<span class="tag">\<span class="name">section</span><span class="string">&#123;references&#125;</span></span></span><br><span class="line">	this paper <span class="tag">\<span class="name">cite</span><span class="string">&#123;ref1&#125;</span></span> shows <span class="tag">\<span class="name">\</span></span></span><br><span class="line">	this paper <span class="tag">\<span class="name">cite</span><span class="string">&#123;ref1,ref4&#125;</span></span> introduces</span><br><span class="line">	<span class="tag">\<span class="name">begin</span><span class="string">&#123;thebibliography&#125;</span><span class="string">&#123;99&#125;</span></span>  </span><br><span class="line">	<span class="tag">\<span class="name">bibitem</span><span class="string">&#123;ref1&#125;</span></span>Zheng L, Wang S, Tian L, et al., Query-adaptive late fusion for image search and person re-identification, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, 2015: 1741-1750.  </span><br><span class="line">	<span class="tag">\<span class="name">bibitem</span><span class="string">&#123;ref2&#125;</span></span>Arandjelović R, Zisserman A, Three things everyone should know to improve object retrieval, Computer Vision and Pattern Recognition (CVPR), 2012 IEEE Conference on, IEEE, 2012: 2911-2918.  </span><br><span class="line">	<span class="tag">\<span class="name">bibitem</span><span class="string">&#123;ref3&#125;</span></span>Lowe D G. Distinctive image features from scale-invariant keypoints, International journal of computer vision, 2004, 60(2): 91-110.  </span><br><span class="line">	<span class="tag">\<span class="name">bibitem</span><span class="string">&#123;ref4&#125;</span></span>Philbin J, Chum O, Isard M, et al. Lost in quantization: Improving particular object retrieval in large scale image databases, Computer Vision and Pattern Recognition, 2008. CVPR 2008, IEEE Conference on, IEEE, 2008: 1-8.  </span><br><span class="line">	<span class="tag">\<span class="name">end</span><span class="string">&#123;thebibliography&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;document&#125;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="resources">resources</h2>
<blockquote>
<p>LaTeX tutorial: <a href="https://www.overleaf.com/learn/latex/Main_Page" target="_blank" rel="noopener">https://www.overleaf.com/learn/latex/Main_Page</a><br>
LaTeX online math editor: <a href="https://latex.91maths.com/" target="_blank" rel="noopener">https://latex.91maths.com/</a><br>
LaTeX/Markdown online tables generator: <a href="https://www.tablesgenerator.com/" target="_blank" rel="noopener">https://www.tablesgenerator.com/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Smart tools</category>
      </categories>
      <tags>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>Meta-analysis_1.Introduction</title>
    <url>/2020/09/07/metaanalysis-1-introduction/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> 简要介绍了meta分析，包括如何选题，如何检索文献，如何做特征表和质量评价表，如何评估发表偏倚（软件Revman和Stata），以及写作的一般套路。</p>
<a id="more"></a>
<h1>选题</h1>
<p>选题的高度决定了发文的高度</p>
<h2 id="优质题目的特征">优质题目的特征</h2>
<ul>
<li>是现有的争议点，大家对此还不是很统一，指南也模棱两可</li>
<li>对现有的操作是一种挑战</li>
<li>之前已经有篇meta了，但后来因为加入新的articles，挑战了之前的结果，能引起一定的讨论</li>
</ul>
<h2 id="技巧与原则">技巧与原则</h2>
<ul>
<li>看本专业Top期刊最新的articles和review</li>
<li>找热点和争议点</li>
</ul>
<h2 id="检索策略">检索策略</h2>
<ul>
<li>PubMED</li>
<li>google scholar</li>
</ul>
<h3 id="检索词">检索词</h3>
<ul>
<li>主题词 (mesh) +自由词</li>
</ul>
<h1>特征表和质量评价表</h1>
<p>garbage in, garbage out.</p>
<h2 id="特征表"><strong>特征表</strong></h2>
<ul>
<li>详实</li>
<li>美观</li>
<li>提取内容：作者，年份，等（根据自己的需要进行提取）</li>
</ul>
<h2 id="质量评价工具">质量评价工具</h2>
<ul>
<li><strong>cochrane手册</strong>：医学方面的文章相对好筛，环境微生物的可不用</li>
<li>jadad量表</li>
<li>delphi共识</li>
</ul>
<h1>数据分析与发表偏倚</h1>
<p>扩大样本量+数据合并 -&gt; 指导临床</p>
<h2 id="软件">软件</h2>
<ul>
<li>Revman (傻瓜操作)</li>
<li>Stata (功能强大，进阶利器)</li>
<li>R software</li>
</ul>
<h2 id="数据类型">数据类型</h2>
<ul>
<li>二分类变量：A中包含了N个A1</li>
<li>连续型变量：有平均值和标准差</li>
</ul>
<h2 id="森林图">森林图</h2>
<p>有几个指标就可以有几个森林图</p>
<ul>
<li>异质性检验：I<sup>2</sup> &gt;50%，异质性，随机效应模型；I<sup>2</sup> &lt;50%，同质性，固定效应模型；</li>
<li>p值(有效性)：菱形跟中线相交则没有意义</li>
<li>效应尺度：1）二分类变量：RR（前瞻性队列研究首选），OR（病例对照研究），RD（前瞻性研究）；2）连续型变量：WMD（测量方法比较一致且单位相同），SMD（不同的测量方法不同的单位）。</li>
<li>效应模型</li>
</ul>
<h2 id="发表偏倚">发表偏倚</h2>
<p>Revman: 漏斗图，若两边对称且无明显发表偏倚，两边不对称则可能存在发表偏倚。偏主观。<br>
Stata软件：<strong>egger test</strong> 和begg test：给出了统计描述，其中p&gt;0.05则提示无明显偏倚，p&lt;0.05存在发表偏倚。<br>
Funnel test &lt; begg test &lt; egger test<br>
文章数量大于10篇以上</p>
<h1>敏感性分析和亚组分析</h1>
<p>有异质性时该怎么办？ -&gt; 分析异质性来源 -&gt; 敏感性分析和亚组分析</p>
<ul>
<li>敏感性分析：改变分析模型（随机模型比较保守，建议采用）；<strong>逐篇排除文献</strong>（看其异质性是否有所改变）；剪补法。解读：前后结果一致，说明结果较为稳健；否则结果不稳健，需谨慎对待。</li>
<li>亚组分析：不同设计方案，如发表年代、研究质量、治疗时间的长短、参加人群特征。主要是用来分析异质性的，比如两亚组内都同质，合并就异质，说明划组的这个因素可能就是异质性的来源。但是现在很多文献用来分析哪个因素对结果影响大(即比较差异效应)，不能说对错，还在探索。</li>
</ul>
<h1>meta写作的一般套路与投稿相关杂志</h1>
<h2 id="一般写作套路">一般写作套路</h2>
<ul>
<li>introduction：阐述某病的一般情况，具体发病机制，以及目前常规治疗手段；然后分析目前此治疗方式的不足，以及存在的一些问题；然后分析下此篇meta分析的必要性。</li>
<li>methods：主要介绍文献检索的步骤和内容，纳入标准和排除标准的制定以及到底要提取什么数据；对纳入的原始文献进行质量评价；介绍mete分析中数据的统计学分析手段。</li>
<li>results：文献检索结果和纳入原始文献的基本内容；纳入文献的质量评价结果；此部分可根据不同结局指标分开阐述，一个结局指标一段，然后如有亚组分析也可以描述；亚组分析或敏感性分析。</li>
<li>discussion：此meta分析的主要结果，结果产生可能性的分析，对将来研究的提示意义，关于此研究的不足。</li>
</ul>
<h2 id="杂志的选择">杂志的选择</h2>
<ul>
<li>合理的评估文章</li>
<li>有的放矢选择杂志：专科杂志/综合性杂志；借助工具（丁香通SCI期刊）或书写文章时参考的资料）</li>
</ul>
<blockquote>
<p>补充：</p>
</blockquote>
<h1>Revman的使用</h1>
<p>文献导入、流程图（也可选word或ppt）和质量评价表的制作<br>
连续型数据的分析：森林图、漏斗图（超过10篇文章）、亚组分析和敏感性分析<br>
二分类数据的分析：指标：有效率。</p>
<h1>Stata的使用*</h1>
<p>下载，安装meta模块，作图(森林图)。<br>
连续型变量亚组分析、发表偏倚、敏感性分析和meta回归。<br>
二分类变量森林图、亚组分析、发表偏倚、敏感性分析和meta回归。</p>
<p>Ref:</p>
<blockquote>
<p>郎中1987：neta分析基础入门11讲</p>
</blockquote>
]]></content>
      <categories>
        <category>Statistics</category>
        <category>Meta-analysis</category>
      </categories>
      <tags>
        <tag>meta-analysis</tag>
      </tags>
  </entry>
  <entry>
    <title>MyPostImages/README</title>
    <url>/2020/03/26/MyPostImages/README/</url>
    <content><![CDATA[<h1>MyPostImages</h1>
<p>store images in blog</p>
]]></content>
  </entry>
</search>
